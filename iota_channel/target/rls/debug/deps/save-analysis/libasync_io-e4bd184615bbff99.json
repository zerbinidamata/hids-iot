{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0","program":"/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_io","--edition=2018","/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e4bd184615bbff99","-C","extra-filename=-e4bd184615bbff99","--out-dir","/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","-L","dependency=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","--extern","concurrent_queue=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libconcurrent_queue-ca5182b59f438062.rmeta","--extern","fastrand=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libfastrand-673b75d09289217d.rmeta","--extern","futures_lite=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libfutures_lite-67e243f880328f2d.rmeta","--extern","libc=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/liblibc-48f5d7ec2ac29e63.rmeta","--extern","log=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/liblog-741686558bfd5a51.rmeta","--extern","once_cell=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libonce_cell-36d29088a4f65987.rmeta","--extern","parking=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libparking-d06eb992c534abee.rmeta","--extern","polling=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libpolling-180c234cc94d249f.rmeta","--extern","socket2=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libsocket2-892b044565719a3b.rmeta","--extern","vec_arena=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libvec_arena-fbcd5043d51d279d.rmeta","--extern","waker_fn=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libwaker_fn-bc518ffc4ac03706.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu"],"output":"/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libasync_io-e4bd184615bbff99.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[13063298341276347554,1022904432523041848]},"crate_root":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src","external_crates":[{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-lite-1.11.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":18,"id":{"name":"futures_lite","disambiguator":[236732238567356365,12995901554002859926]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[8752250229915605731,5032511442079182267]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":20,"id":{"name":"parking","disambiguator":[1999498884191094626,9252083634413959091]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":21,"id":{"name":"waker_fn","disambiguator":[6477177352258648891,1408471870261056396]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":22,"id":{"name":"futures_core","disambiguator":[17387797789998290180,8957684133523654957]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":23,"id":{"name":"futures_io","disambiguator":[6824782900905729461,4638695658688622893]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":24,"id":{"name":"fastrand","disambiguator":[2557478997660195169,13453224216195452879]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":25,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":26,"id":{"name":"socket2","disambiguator":[5087978609298347259,9376823878177385951]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[18230274762250471530,14699791712207546824]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":28,"id":{"name":"once_cell","disambiguator":[11003055472096597441,2972392352729570343]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":29,"id":{"name":"parking_lot","disambiguator":[7756849129997653621,6606148246404574312]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":30,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":31,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":32,"id":{"name":"lock_api","disambiguator":[11531994514184985486,16527705314438861460]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":33,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":34,"id":{"name":"parking_lot_core","disambiguator":[9873190055940866410,7329379312384477631]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":35,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","num":36,"id":{"name":"concurrent_queue","disambiguator":[18213822786008996053,10867190005056278931]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","num":37,"id":{"name":"cache_padded","disambiguator":[18353092046062123632,1298457636792068056]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","num":38,"id":{"name":"polling","disambiguator":[17806240617201778155,7470152498904838731]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","num":39,"id":{"name":"log","disambiguator":[11013293275619222107,10669941403084918630]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","num":40,"id":{"name":"vec_arena","disambiguator":[5920446079712745720,7686973874760916517]}}],"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":0,"byte_end":57894,"line_start":1,"line_end":1771,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2982,"byte_end":2990,"line_start":87,"line_end":87,"column_start":17,"column_end":25},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":0,"byte_end":57894,"line_start":1,"line_end":1771,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":97},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":196},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":285},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":397}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"/ Async I/O and timers.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides two tools:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/   async programs.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/ * [`Timer`], a future or stream that emits timed events.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":184,"byte_end":244,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":245,"byte_end":248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":249,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [many other]: https://github.com/smol-rs/async-io/tree/master/examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":340,"byte_end":414,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ [`async-net`]: https://docs.rs/async-net","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":415,"byte_end":459,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":460,"byte_end":463,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":464,"byte_end":484,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":485,"byte_end":488,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":489,"byte_end":582,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":583,"byte_end":682,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":683,"byte_end":762,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":763,"byte_end":766,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":767,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":864,"byte_end":958,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ functionality is provided by the [`polling`] crate.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":959,"byte_end":1014,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1019,"byte_end":1114,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1115,"byte_end":1204,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ processing I/O events in case no other threads are.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1205,"byte_end":1260,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1261,"byte_end":1264,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1265,"byte_end":1313,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1314,"byte_end":1364,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1365,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1420,"byte_end":1472,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`polling`]: https://docs.rs/polling","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1473,"byte_end":1513,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1518,"byte_end":1532,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1533,"byte_end":1536,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1537,"byte_end":1599,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1600,"byte_end":1603,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1604,"byte_end":1611,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_io::{Async, Timer};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1612,"byte_end":1645,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ use futures_lite::{future::FutureExt, io};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1646,"byte_end":1692,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1693,"byte_end":1696,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1697,"byte_end":1742,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1743,"byte_end":1771,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1772,"byte_end":1775,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1776,"byte_end":1820,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1821,"byte_end":1888,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1893,"byte_end":1954,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":1955,"byte_end":2007,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2008,"byte_end":2051,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2052,"byte_end":2058,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2059,"byte_end":2071,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2072,"byte_end":2105,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2106,"byte_end":2113,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":2115,"byte_end":2186,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":61073,"byte_end":61081,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"block_on","qualname":"::driver::block_on","value":"pub fn block_on<T, impl Future<Output = T>: Future<Output =\n                T>>(impl Future<Output = T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60676,"byte_end":60751,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60752,"byte_end":60755,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60756,"byte_end":60770,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60771,"byte_end":60774,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60775,"byte_end":60782,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60783,"byte_end":60807,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60808,"byte_end":60836,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60837,"byte_end":60840,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60841,"byte_end":60871,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60872,"byte_end":60933,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60934,"byte_end":60995,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":60996,"byte_end":61049,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":61050,"byte_end":61057,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":61058,"byte_end":61065,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4033,"byte_end":4038,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"decl_id":null,"docs":" A future or stream that emits timed events.","sig":null,"attributes":[{"value":"/ A future or stream that emits timed events.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3146,"byte_end":3193,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3194,"byte_end":3197,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output a single [`Instant`] when they fire.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3198,"byte_end":3269,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3270,"byte_end":3273,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Timers are also streams that can output [`Instant`]s periodically.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3274,"byte_end":3344,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3345,"byte_end":3348,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3349,"byte_end":3363,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3364,"byte_end":3367,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3368,"byte_end":3391,"line_start":102,"line_end":102,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3392,"byte_end":3395,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3396,"byte_end":3403,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3404,"byte_end":3428,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3429,"byte_end":3457,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3458,"byte_end":3461,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3462,"byte_end":3506,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3507,"byte_end":3554,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3555,"byte_end":3564,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3565,"byte_end":3572,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3573,"byte_end":3576,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3577,"byte_end":3604,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3605,"byte_end":3608,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3609,"byte_end":3616,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3617,"byte_end":3641,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3642,"byte_end":3674,"line_start":117,"line_end":117,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3675,"byte_end":3703,"line_start":118,"line_end":118,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3704,"byte_end":3707,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3708,"byte_end":3752,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3753,"byte_end":3804,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3805,"byte_end":3824,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3825,"byte_end":3881,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3882,"byte_end":3934,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3935,"byte_end":3945,"line_start":125,"line_end":125,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3946,"byte_end":3962,"line_start":126,"line_end":126,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3963,"byte_end":3996,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":3997,"byte_end":4004,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4702,"byte_end":4707,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"pub fn after(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once after the given duration of time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4368,"byte_end":4446,"line_start":144,"line_end":144,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4451,"byte_end":4454,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4459,"byte_end":4473,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4478,"byte_end":4481,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4486,"byte_end":4493,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4498,"byte_end":4522,"line_start":149,"line_end":149,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4527,"byte_end":4555,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4568,"byte_end":4612,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4617,"byte_end":4664,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4669,"byte_end":4678,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4683,"byte_end":4690,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5195,"byte_end":5197,"line_start":174,"line_end":174,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"pub fn at(Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once at the given time instant.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4795,"byte_end":4866,"line_start":160,"line_end":160,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4879,"byte_end":4893,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4898,"byte_end":4901,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4906,"byte_end":4913,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4918,"byte_end":4942,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4947,"byte_end":4986,"line_start":166,"line_end":166,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4991,"byte_end":4994,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4999,"byte_end":5043,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5048,"byte_end":5077,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5082,"byte_end":5126,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5131,"byte_end":5157,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5162,"byte_end":5171,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5176,"byte_end":5183,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5753,"byte_end":5761,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"interval","qualname":"<Timer>::interval","value":"pub fn interval(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5359,"byte_end":5410,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5415,"byte_end":5418,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5423,"byte_end":5437,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5442,"byte_end":5445,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5450,"byte_end":5457,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5462,"byte_end":5486,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5491,"byte_end":5523,"line_start":185,"line_end":185,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5528,"byte_end":5567,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5572,"byte_end":5575,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5580,"byte_end":5624,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5629,"byte_end":5669,"line_start":189,"line_end":189,"column_start":5,"column_end":45}},{"value":"/ Timer::interval(period).next().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5674,"byte_end":5715,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5720,"byte_end":5729,"line_start":191,"line_end":191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5734,"byte_end":5741,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6323,"byte_end":6334,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"interval_at","qualname":"<Timer>::interval_at","value":"pub fn interval_at(Instant, Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically, starting at `start`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5862,"byte_end":5934,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5939,"byte_end":5942,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5947,"byte_end":5961,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5966,"byte_end":5969,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5974,"byte_end":5981,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":5986,"byte_end":6010,"line_start":202,"line_end":202,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6015,"byte_end":6047,"line_start":203,"line_end":203,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6052,"byte_end":6091,"line_start":204,"line_end":204,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6096,"byte_end":6099,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6104,"byte_end":6148,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6153,"byte_end":6184,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6189,"byte_end":6229,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ Timer::interval_at(start, period).next().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6234,"byte_end":6285,"line_start":209,"line_end":209,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6290,"byte_end":6299,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6304,"byte_end":6311,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7105,"byte_end":7114,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"pub fn set_after(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an en event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an en event once after the given duration of time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6494,"byte_end":6571,"line_start":220,"line_end":220,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6576,"byte_end":6579,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6584,"byte_end":6662,"line_start":222,"line_end":222,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6667,"byte_end":6759,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6764,"byte_end":6794,"line_start":224,"line_end":224,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6799,"byte_end":6802,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6807,"byte_end":6821,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6826,"byte_end":6829,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6834,"byte_end":6841,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6846,"byte_end":6870,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6875,"byte_end":6903,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6908,"byte_end":6911,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6916,"byte_end":6960,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":6965,"byte_end":7018,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7023,"byte_end":7067,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7072,"byte_end":7081,"line_start":235,"line_end":235,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7086,"byte_end":7093,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7879,"byte_end":7885,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"pub fn set_at(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an event once at the given time instant.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7207,"byte_end":7274,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7279,"byte_end":7282,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7287,"byte_end":7365,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ [`set_at()`][`Timer::set_at()`] does not remove the waker associated with the task","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7370,"byte_end":7456,"line_start":244,"line_end":244,"column_start":5,"column_end":91}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7461,"byte_end":7491,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7496,"byte_end":7499,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7504,"byte_end":7518,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7523,"byte_end":7526,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7531,"byte_end":7538,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7543,"byte_end":7567,"line_start":250,"line_end":250,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7572,"byte_end":7611,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7616,"byte_end":7619,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7624,"byte_end":7668,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7673,"byte_end":7726,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7731,"byte_end":7734,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7739,"byte_end":7768,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7773,"byte_end":7817,"line_start":257,"line_end":257,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7822,"byte_end":7841,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7846,"byte_end":7855,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":7860,"byte_end":7867,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9040,"byte_end":9052,"line_start":296,"line_end":296,"column_start":12,"column_end":24},"name":"set_interval","qualname":"<Timer>::set_interval","value":"pub fn set_interval(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8369,"byte_end":8416,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8421,"byte_end":8424,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8429,"byte_end":8507,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/ [`set_interval()`][`Timer::set_interval()`] does not remove the waker associated with the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8512,"byte_end":8605,"line_start":279,"line_end":279,"column_start":5,"column_end":98}},{"value":"/ task that is polling the timer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8610,"byte_end":8645,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8650,"byte_end":8653,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8658,"byte_end":8672,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8677,"byte_end":8680,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8685,"byte_end":8692,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8697,"byte_end":8721,"line_start":285,"line_end":285,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8726,"byte_end":8758,"line_start":286,"line_end":286,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8763,"byte_end":8802,"line_start":287,"line_end":287,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8807,"byte_end":8810,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8815,"byte_end":8859,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8864,"byte_end":8917,"line_start":290,"line_end":290,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8922,"byte_end":8925,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8930,"byte_end":8970,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/ t.set_interval(period);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":8975,"byte_end":9002,"line_start":293,"line_end":293,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9007,"byte_end":9016,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9021,"byte_end":9028,"line_start":295,"line_end":295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9902,"byte_end":9917,"line_start":321,"line_end":321,"column_start":12,"column_end":27},"name":"set_interval_at","qualname":"<Timer>::set_interval_at","value":"pub fn set_interval_at(&mut Self, Instant, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically, starting at `start`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9158,"byte_end":9226,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9231,"byte_end":9234,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9239,"byte_end":9317,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/ [`set_interval_at()`][`Timer::set_interval_at()`] does not remove the waker associated with","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9322,"byte_end":9417,"line_start":303,"line_end":303,"column_start":5,"column_end":100}},{"value":"/ the task that is polling the timer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9422,"byte_end":9461,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9466,"byte_end":9469,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9474,"byte_end":9488,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9493,"byte_end":9496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9501,"byte_end":9508,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9513,"byte_end":9537,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9542,"byte_end":9574,"line_start":310,"line_end":310,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9579,"byte_end":9618,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9623,"byte_end":9626,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9631,"byte_end":9675,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9680,"byte_end":9733,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9738,"byte_end":9741,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9746,"byte_end":9777,"line_start":316,"line_end":316,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9782,"byte_end":9822,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/ t.set_interval_at(start, period);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9827,"byte_end":9864,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9869,"byte_end":9878,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":9883,"byte_end":9890,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16391,"byte_end":16396,"line_start":490,"line_end":490,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12660,"byte_end":12692,"line_start":398,"line_end":398,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12693,"byte_end":12696,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12697,"byte_end":12769,"line_start":400,"line_end":400,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12770,"byte_end":12859,"line_start":401,"line_end":401,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12860,"byte_end":12863,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12864,"byte_end":12912,"line_start":403,"line_end":403,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12913,"byte_end":12963,"line_start":404,"line_end":404,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":12964,"byte_end":13018,"line_start":405,"line_end":405,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13019,"byte_end":13071,"line_start":406,"line_end":406,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13072,"byte_end":13075,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13076,"byte_end":13089,"line_start":408,"line_end":408,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13090,"byte_end":13093,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ [`Async`] is a low-level primitive, and as such it comes with some caveats.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13094,"byte_end":13173,"line_start":410,"line_end":410,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13174,"byte_end":13177,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ For higher-level primitives built on top of [`Async`], look into [`async-net`] or","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13178,"byte_end":13263,"line_start":412,"line_end":412,"column_start":1,"column_end":86}},{"value":"/ [`async-process`] (on Unix).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13264,"byte_end":13296,"line_start":413,"line_end":413,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13297,"byte_end":13300,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ [`async-net`]: https://github.com/smol-rs/async-net","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13301,"byte_end":13356,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/ [`async-process`]: https://github.com/smol-rs/async-process","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13357,"byte_end":13420,"line_start":416,"line_end":416,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13421,"byte_end":13424,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ ### Supported types","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13425,"byte_end":13448,"line_start":418,"line_end":418,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13449,"byte_end":13452,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ [`Async`] supports all networking types, as well as some OS-specific file descriptors like","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13453,"byte_end":13547,"line_start":420,"line_end":420,"column_start":1,"column_end":95}},{"value":"/ [timerfd] and [inotify].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13548,"byte_end":13576,"line_start":421,"line_end":421,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13577,"byte_end":13580,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ However, do not use [`Async`] with types like [`File`][`std::fs::File`],","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13581,"byte_end":13657,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/ [`Stdin`][`std::io::Stdin`], [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13658,"byte_end":13754,"line_start":424,"line_end":424,"column_start":1,"column_end":97}},{"value":"/ because all operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13755,"byte_end":13841,"line_start":425,"line_end":425,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13842,"byte_end":13845,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ [timerfd]: https://github.com/smol-rs/async-io/blob/master/examples/linux-timerfd.rs","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13846,"byte_end":13934,"line_start":427,"line_end":427,"column_start":1,"column_end":89}},{"value":"/ [inotify]: https://github.com/smol-rs/async-io/blob/master/examples/linux-inotify.rs","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":13935,"byte_end":14023,"line_start":428,"line_end":428,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14024,"byte_end":14027,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ### Concurrent I/O","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14028,"byte_end":14050,"line_start":430,"line_end":430,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14051,"byte_end":14054,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Note that [`&Async<T>`][`Async`] implements [`AsyncRead`] and [`AsyncWrite`] if `&T`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14055,"byte_end":14143,"line_start":432,"line_end":432,"column_start":1,"column_end":89}},{"value":"/ implements those traits, which means tasks can concurrently read and write using shared","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14144,"byte_end":14235,"line_start":433,"line_end":433,"column_start":1,"column_end":92}},{"value":"/ references.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14236,"byte_end":14251,"line_start":434,"line_end":434,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14252,"byte_end":14255,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ But there is a catch: only one task can read a time, and only one task can write at a time. It","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14256,"byte_end":14354,"line_start":436,"line_end":436,"column_start":1,"column_end":99}},{"value":"/ is okay to have two tasks where one is reading and the other is writing at the same time, but","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14355,"byte_end":14452,"line_start":437,"line_end":437,"column_start":1,"column_end":98}},{"value":"/ it is not okay to have two tasks reading at the same time or writing at the same time. If you","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14453,"byte_end":14550,"line_start":438,"line_end":438,"column_start":1,"column_end":98}},{"value":"/ try to do that, conflicting tasks will just keep waking each other in turn, thus wasting CPU","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14551,"byte_end":14647,"line_start":439,"line_end":439,"column_start":1,"column_end":97}},{"value":"/ time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14648,"byte_end":14657,"line_start":440,"line_end":440,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14658,"byte_end":14661,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ Besides [`AsyncRead`] and [`AsyncWrite`], this caveat also applies to","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14662,"byte_end":14735,"line_start":442,"line_end":442,"column_start":1,"column_end":74}},{"value":"/ [`poll_readable()`][`Async::poll_readable()`] and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14736,"byte_end":14789,"line_start":443,"line_end":443,"column_start":1,"column_end":54}},{"value":"/ [`poll_writable()`][`Async::poll_writable()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14790,"byte_end":14840,"line_start":444,"line_end":444,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14841,"byte_end":14844,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ However, any number of tasks can be concurrently calling other methods like","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14845,"byte_end":14924,"line_start":446,"line_end":446,"column_start":1,"column_end":80}},{"value":"/ [`readable()`][`Async::readable()`] or [`read_with()`][`Async::read_with()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":14925,"byte_end":15006,"line_start":447,"line_end":447,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15007,"byte_end":15010,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ ### Closing","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15011,"byte_end":15026,"line_start":449,"line_end":449,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15027,"byte_end":15030,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ Closing the write side of [`Async`] with [`close()`][`futures_lite::AsyncWriteExt::close()`]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15031,"byte_end":15127,"line_start":451,"line_end":451,"column_start":1,"column_end":97}},{"value":"/ simply flushes. If you want to shutdown a TCP or Unix socket, use","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15128,"byte_end":15197,"line_start":452,"line_end":452,"column_start":1,"column_end":70}},{"value":"/ [`Shutdown`][`std::net::Shutdown`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15198,"byte_end":15237,"line_start":453,"line_end":453,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15238,"byte_end":15241,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15242,"byte_end":15256,"line_start":455,"line_end":455,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15257,"byte_end":15260,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15261,"byte_end":15331,"line_start":457,"line_end":457,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15332,"byte_end":15335,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15336,"byte_end":15349,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15350,"byte_end":15374,"line_start":460,"line_end":460,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15375,"byte_end":15400,"line_start":461,"line_end":461,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15401,"byte_end":15429,"line_start":462,"line_end":462,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15430,"byte_end":15433,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15434,"byte_end":15478,"line_start":464,"line_end":464,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15479,"byte_end":15512,"line_start":465,"line_end":465,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15513,"byte_end":15589,"line_start":466,"line_end":466,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15590,"byte_end":15593,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15594,"byte_end":15672,"line_start":468,"line_end":468,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15673,"byte_end":15711,"line_start":469,"line_end":469,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15712,"byte_end":15745,"line_start":470,"line_end":470,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15746,"byte_end":15753,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15754,"byte_end":15757,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15758,"byte_end":15840,"line_start":473,"line_end":473,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15841,"byte_end":15925,"line_start":474,"line_end":474,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15926,"byte_end":15958,"line_start":475,"line_end":475,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15959,"byte_end":15962,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15963,"byte_end":15976,"line_start":477,"line_end":477,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":15977,"byte_end":16001,"line_start":478,"line_end":478,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16002,"byte_end":16032,"line_start":479,"line_end":479,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16033,"byte_end":16036,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16037,"byte_end":16081,"line_start":481,"line_end":481,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16082,"byte_end":16150,"line_start":482,"line_end":482,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16151,"byte_end":16154,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16155,"byte_end":16193,"line_start":484,"line_end":484,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16194,"byte_end":16244,"line_start":485,"line_end":485,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16245,"byte_end":16320,"line_start":486,"line_end":486,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16321,"byte_end":16354,"line_start":487,"line_end":487,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16355,"byte_end":16362,"line_start":488,"line_end":488,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17501,"byte_end":17504,"line_start":526,"line_end":526,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"pub fn new(T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16600,"byte_end":16632,"line_start":502,"line_end":502,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16637,"byte_end":16640,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This method will put the handle in non-blocking mode and register it in","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16645,"byte_end":16720,"line_start":504,"line_end":504,"column_start":5,"column_end":80}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16725,"byte_end":16769,"line_start":505,"line_end":505,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16774,"byte_end":16777,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16782,"byte_end":16874,"line_start":507,"line_end":507,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16879,"byte_end":16897,"line_start":508,"line_end":508,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16902,"byte_end":16905,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16910,"byte_end":16958,"line_start":510,"line_end":510,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16963,"byte_end":17013,"line_start":511,"line_end":511,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17018,"byte_end":17072,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17077,"byte_end":17129,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17134,"byte_end":17137,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17142,"byte_end":17156,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17161,"byte_end":17164,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17169,"byte_end":17176,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17181,"byte_end":17205,"line_start":518,"line_end":518,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17210,"byte_end":17254,"line_start":519,"line_end":519,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17259,"byte_end":17262,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17267,"byte_end":17311,"line_start":521,"line_end":521,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17316,"byte_end":17393,"line_start":522,"line_end":522,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17398,"byte_end":17439,"line_start":523,"line_end":523,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17444,"byte_end":17477,"line_start":524,"line_end":524,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":17482,"byte_end":17489,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20340,"byte_end":20347,"line_start":627,"line_end":627,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":19952,"byte_end":19997,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20002,"byte_end":20005,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20010,"byte_end":20024,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20029,"byte_end":20032,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20037,"byte_end":20044,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20049,"byte_end":20073,"line_start":619,"line_end":619,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20078,"byte_end":20108,"line_start":620,"line_end":620,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20113,"byte_end":20116,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20121,"byte_end":20165,"line_start":622,"line_end":622,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20170,"byte_end":20238,"line_start":623,"line_end":623,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20243,"byte_end":20278,"line_start":624,"line_end":624,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20283,"byte_end":20316,"line_start":625,"line_end":625,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20321,"byte_end":20328,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20808,"byte_end":20815,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20408,"byte_end":20461,"line_start":631,"line_end":631,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20466,"byte_end":20469,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20474,"byte_end":20488,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20493,"byte_end":20496,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20501,"byte_end":20508,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20513,"byte_end":20537,"line_start":636,"line_end":636,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20542,"byte_end":20572,"line_start":637,"line_end":637,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20577,"byte_end":20580,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20585,"byte_end":20629,"line_start":639,"line_end":639,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20634,"byte_end":20706,"line_start":640,"line_end":640,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20711,"byte_end":20746,"line_start":641,"line_end":641,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20751,"byte_end":20784,"line_start":642,"line_end":642,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20789,"byte_end":20796,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21449,"byte_end":21459,"line_start":666,"line_end":666,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20884,"byte_end":20917,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20922,"byte_end":20925,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":20930,"byte_end":21002,"line_start":650,"line_end":650,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21007,"byte_end":21010,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21015,"byte_end":21029,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21034,"byte_end":21037,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21042,"byte_end":21049,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21054,"byte_end":21078,"line_start":655,"line_end":655,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21083,"byte_end":21113,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21118,"byte_end":21121,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21126,"byte_end":21170,"line_start":658,"line_end":658,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21175,"byte_end":21243,"line_start":659,"line_end":659,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21248,"byte_end":21287,"line_start":660,"line_end":660,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21292,"byte_end":21295,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21300,"byte_end":21348,"line_start":662,"line_end":662,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21353,"byte_end":21387,"line_start":663,"line_end":663,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21392,"byte_end":21425,"line_start":664,"line_end":664,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21430,"byte_end":21437,"line_start":665,"line_end":665,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22155,"byte_end":22163,"line_start":689,"line_end":689,"column_start":18,"column_end":26},"name":"readable","qualname":"<Async<T>>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21606,"byte_end":21649,"line_start":672,"line_end":672,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21654,"byte_end":21657,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21662,"byte_end":21744,"line_start":674,"line_end":674,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21749,"byte_end":21752,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21757,"byte_end":21771,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21776,"byte_end":21779,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21784,"byte_end":21797,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21802,"byte_end":21826,"line_start":679,"line_end":679,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21831,"byte_end":21861,"line_start":680,"line_end":680,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21866,"byte_end":21869,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21874,"byte_end":21918,"line_start":682,"line_end":682,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":21923,"byte_end":21995,"line_start":683,"line_end":683,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22000,"byte_end":22003,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22008,"byte_end":22051,"line_start":685,"line_end":685,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22056,"byte_end":22087,"line_start":686,"line_end":686,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22092,"byte_end":22125,"line_start":687,"line_end":687,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22130,"byte_end":22137,"line_start":688,"line_end":688,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22852,"byte_end":22860,"line_start":711,"line_end":711,"column_start":18,"column_end":26},"name":"writable","qualname":"<Async<T>>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22239,"byte_end":22282,"line_start":693,"line_end":693,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22287,"byte_end":22290,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22295,"byte_end":22378,"line_start":695,"line_end":695,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22383,"byte_end":22386,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22391,"byte_end":22405,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22410,"byte_end":22413,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22418,"byte_end":22425,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22430,"byte_end":22454,"line_start":700,"line_end":700,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22459,"byte_end":22504,"line_start":701,"line_end":701,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22509,"byte_end":22512,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22517,"byte_end":22561,"line_start":703,"line_end":703,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22566,"byte_end":22633,"line_start":704,"line_end":704,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22638,"byte_end":22696,"line_start":705,"line_end":705,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22701,"byte_end":22704,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22709,"byte_end":22750,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22755,"byte_end":22784,"line_start":708,"line_end":708,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22789,"byte_end":22822,"line_start":709,"line_end":709,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22827,"byte_end":22834,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23969,"byte_end":23982,"line_start":742,"line_end":742,"column_start":12,"column_end":25},"name":"poll_readable","qualname":"<Async<T>>::poll_readable","value":"pub fn poll_readable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for readability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for readability.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22936,"byte_end":22977,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22982,"byte_end":22985,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":22990,"byte_end":23076,"line_start":717,"line_end":717,"column_start":5,"column_end":91}},{"value":"/ indicating readability since the last time this task has called the method and received","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23081,"byte_end":23172,"line_start":718,"line_end":718,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23177,"byte_end":23199,"line_start":719,"line_end":719,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23204,"byte_end":23207,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23212,"byte_end":23225,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23230,"byte_end":23233,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23238,"byte_end":23332,"line_start":723,"line_end":723,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23337,"byte_end":23405,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23410,"byte_end":23413,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncRead`] implementation for [`Async`] also uses this method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23418,"byte_end":23501,"line_start":726,"line_end":726,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23506,"byte_end":23509,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23514,"byte_end":23528,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23533,"byte_end":23536,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23541,"byte_end":23554,"line_start":730,"line_end":730,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23559,"byte_end":23583,"line_start":731,"line_end":731,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23588,"byte_end":23617,"line_start":732,"line_end":732,"column_start":5,"column_end":34}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23622,"byte_end":23652,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23657,"byte_end":23660,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23665,"byte_end":23709,"line_start":735,"line_end":735,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23714,"byte_end":23786,"line_start":736,"line_end":736,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23791,"byte_end":23794,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23799,"byte_end":23842,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/ future::poll_fn(|cx| listener.poll_readable(cx)).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23847,"byte_end":23907,"line_start":739,"line_end":739,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23912,"byte_end":23945,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":23950,"byte_end":23957,"line_start":741,"line_end":741,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25184,"byte_end":25197,"line_start":774,"line_end":774,"column_start":12,"column_end":25},"name":"poll_writable","qualname":"<Async<T>>::poll_writable","value":"pub fn poll_writable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for writability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for writability.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24087,"byte_end":24128,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24133,"byte_end":24136,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24141,"byte_end":24227,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/ indicating writability since the last time this task has called the method and received","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24232,"byte_end":24323,"line_start":749,"line_end":749,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24328,"byte_end":24350,"line_start":750,"line_end":750,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24355,"byte_end":24358,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24363,"byte_end":24376,"line_start":752,"line_end":752,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24381,"byte_end":24384,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24389,"byte_end":24483,"line_start":754,"line_end":754,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24488,"byte_end":24556,"line_start":755,"line_end":755,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24561,"byte_end":24564,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncWrite`] implementation for [`Async`] also uses this method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24569,"byte_end":24653,"line_start":757,"line_end":757,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24658,"byte_end":24661,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24666,"byte_end":24680,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24685,"byte_end":24688,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24693,"byte_end":24700,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24705,"byte_end":24729,"line_start":762,"line_end":762,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24734,"byte_end":24763,"line_start":763,"line_end":763,"column_start":5,"column_end":34}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24768,"byte_end":24813,"line_start":764,"line_end":764,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24818,"byte_end":24821,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24826,"byte_end":24870,"line_start":766,"line_end":766,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24875,"byte_end":24942,"line_start":767,"line_end":767,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":24947,"byte_end":25005,"line_start":768,"line_end":768,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25010,"byte_end":25013,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25018,"byte_end":25059,"line_start":770,"line_end":770,"column_start":5,"column_end":46}},{"value":"/ future::poll_fn(|cx| stream.poll_writable(cx)).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25064,"byte_end":25122,"line_start":771,"line_end":771,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25127,"byte_end":25160,"line_start":772,"line_end":772,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25165,"byte_end":25172,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26216,"byte_end":26225,"line_start":800,"line_end":800,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"pub async fn read_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\n                       io::Result<R>>(&'_ Self,\n                                      impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25302,"byte_end":25347,"line_start":778,"line_end":778,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25352,"byte_end":25355,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25360,"byte_end":25449,"line_start":780,"line_end":780,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25454,"byte_end":25541,"line_start":781,"line_end":781,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25546,"byte_end":25637,"line_start":782,"line_end":782,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25642,"byte_end":25699,"line_start":783,"line_end":783,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25704,"byte_end":25707,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25712,"byte_end":25774,"line_start":785,"line_end":785,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25779,"byte_end":25782,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25787,"byte_end":25801,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25806,"byte_end":25809,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25814,"byte_end":25827,"line_start":789,"line_end":789,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25832,"byte_end":25856,"line_start":790,"line_end":790,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25861,"byte_end":25891,"line_start":791,"line_end":791,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25896,"byte_end":25899,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25904,"byte_end":25948,"line_start":793,"line_end":793,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":25953,"byte_end":26021,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26026,"byte_end":26029,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26034,"byte_end":26076,"line_start":796,"line_end":796,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26081,"byte_end":26148,"line_start":797,"line_end":797,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26153,"byte_end":26186,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26191,"byte_end":26198,"line_start":799,"line_end":799,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27486,"byte_end":27499,"line_start":833,"line_end":833,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"pub async fn read_with_mut<R, '_,\n                           impl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T)\n                           ->\n                           io::Result<R>>(&'_ mut Self,\n                                          impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26563,"byte_end":26608,"line_start":811,"line_end":811,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26613,"byte_end":26616,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26621,"byte_end":26710,"line_start":813,"line_end":813,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26715,"byte_end":26802,"line_start":814,"line_end":814,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26807,"byte_end":26898,"line_start":815,"line_end":815,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26903,"byte_end":26960,"line_start":816,"line_end":816,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26965,"byte_end":26968,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":26973,"byte_end":27036,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27041,"byte_end":27044,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27049,"byte_end":27063,"line_start":820,"line_end":820,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27068,"byte_end":27071,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27076,"byte_end":27089,"line_start":822,"line_end":822,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27094,"byte_end":27118,"line_start":823,"line_end":823,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27123,"byte_end":27153,"line_start":824,"line_end":824,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27158,"byte_end":27161,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27166,"byte_end":27210,"line_start":826,"line_end":826,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27215,"byte_end":27287,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27292,"byte_end":27295,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27300,"byte_end":27342,"line_start":829,"line_end":829,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27347,"byte_end":27418,"line_start":830,"line_end":830,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27423,"byte_end":27456,"line_start":831,"line_end":831,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27461,"byte_end":27468,"line_start":832,"line_end":832,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28803,"byte_end":28813,"line_start":870,"line_end":870,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"pub async fn write_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\n                        io::Result<R>>(&'_ Self,\n                                       impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27868,"byte_end":27914,"line_start":847,"line_end":847,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27919,"byte_end":27922,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":27927,"byte_end":28016,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28021,"byte_end":28108,"line_start":850,"line_end":850,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28113,"byte_end":28204,"line_start":851,"line_end":851,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28209,"byte_end":28266,"line_start":852,"line_end":852,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28271,"byte_end":28274,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28279,"byte_end":28341,"line_start":854,"line_end":854,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28346,"byte_end":28349,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28354,"byte_end":28368,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28373,"byte_end":28376,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28381,"byte_end":28394,"line_start":858,"line_end":858,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28399,"byte_end":28423,"line_start":859,"line_end":859,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28428,"byte_end":28456,"line_start":860,"line_end":860,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28461,"byte_end":28464,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28469,"byte_end":28513,"line_start":862,"line_end":862,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28518,"byte_end":28585,"line_start":863,"line_end":863,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28590,"byte_end":28638,"line_start":864,"line_end":864,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28643,"byte_end":28646,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28651,"byte_end":28674,"line_start":866,"line_end":866,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28679,"byte_end":28735,"line_start":867,"line_end":867,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28740,"byte_end":28773,"line_start":868,"line_end":868,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":28778,"byte_end":28785,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30095,"byte_end":30109,"line_start":904,"line_end":904,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"pub async fn write_with_mut<R, '_,\n                            impl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T)\n                            ->\n                            io::Result<R>>(&'_ mut Self,\n                                           impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29151,"byte_end":29197,"line_start":881,"line_end":881,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29202,"byte_end":29205,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29210,"byte_end":29299,"line_start":883,"line_end":883,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29304,"byte_end":29391,"line_start":884,"line_end":884,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29396,"byte_end":29487,"line_start":885,"line_end":885,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29492,"byte_end":29549,"line_start":886,"line_end":886,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29554,"byte_end":29557,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29562,"byte_end":29625,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29630,"byte_end":29633,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29638,"byte_end":29652,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29657,"byte_end":29660,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29665,"byte_end":29678,"line_start":892,"line_end":892,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29683,"byte_end":29707,"line_start":893,"line_end":893,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29712,"byte_end":29740,"line_start":894,"line_end":894,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29745,"byte_end":29748,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29753,"byte_end":29797,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29802,"byte_end":29873,"line_start":897,"line_end":897,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29878,"byte_end":29926,"line_start":898,"line_end":898,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29931,"byte_end":29934,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29939,"byte_end":29962,"line_start":900,"line_end":900,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":29967,"byte_end":30027,"line_start":901,"line_end":901,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30032,"byte_end":30065,"line_start":902,"line_end":902,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30070,"byte_end":30077,"line_start":903,"line_end":903,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36046,"byte_end":36050,"line_start":1113,"line_end":1113,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<TcpListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35527,"byte_end":35585,"line_start":1098,"line_end":1098,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35590,"byte_end":35593,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35598,"byte_end":35672,"line_start":1100,"line_end":1100,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35677,"byte_end":35680,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35685,"byte_end":35699,"line_start":1102,"line_end":1102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35704,"byte_end":35707,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35712,"byte_end":35719,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35724,"byte_end":35748,"line_start":1105,"line_end":1105,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35753,"byte_end":35783,"line_start":1106,"line_end":1106,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35788,"byte_end":35791,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35796,"byte_end":35840,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35845,"byte_end":35913,"line_start":1109,"line_end":1109,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35918,"byte_end":35984,"line_start":1110,"line_end":1110,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35989,"byte_end":36022,"line_start":1111,"line_end":1111,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36027,"byte_end":36034,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36800,"byte_end":36806,"line_start":1135,"line_end":1135,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36210,"byte_end":36252,"line_start":1118,"line_end":1118,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36257,"byte_end":36260,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36265,"byte_end":36356,"line_start":1120,"line_end":1120,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36361,"byte_end":36380,"line_start":1121,"line_end":1121,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36385,"byte_end":36388,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36393,"byte_end":36407,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36412,"byte_end":36415,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36420,"byte_end":36433,"line_start":1125,"line_end":1125,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36438,"byte_end":36462,"line_start":1126,"line_end":1126,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36467,"byte_end":36497,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36502,"byte_end":36505,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36510,"byte_end":36554,"line_start":1129,"line_end":1129,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36559,"byte_end":36630,"line_start":1130,"line_end":1130,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36635,"byte_end":36685,"line_start":1131,"line_end":1131,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36690,"byte_end":36732,"line_start":1132,"line_end":1132,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36737,"byte_end":36770,"line_start":1133,"line_end":1133,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36775,"byte_end":36782,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37726,"byte_end":37734,"line_start":1162,"line_end":1162,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":36983,"byte_end":37032,"line_start":1140,"line_end":1140,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37037,"byte_end":37040,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37045,"byte_end":37109,"line_start":1142,"line_end":1142,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37114,"byte_end":37117,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37122,"byte_end":37136,"line_start":1144,"line_end":1144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37141,"byte_end":37144,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37149,"byte_end":37162,"line_start":1146,"line_end":1146,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37167,"byte_end":37191,"line_start":1147,"line_end":1147,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37196,"byte_end":37243,"line_start":1148,"line_end":1148,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37248,"byte_end":37278,"line_start":1149,"line_end":1149,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37283,"byte_end":37286,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37291,"byte_end":37335,"line_start":1151,"line_end":1151,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37340,"byte_end":37411,"line_start":1152,"line_end":1152,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37416,"byte_end":37455,"line_start":1153,"line_end":1153,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37460,"byte_end":37479,"line_start":1154,"line_end":1154,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37484,"byte_end":37487,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37492,"byte_end":37544,"line_start":1156,"line_end":1156,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37549,"byte_end":37578,"line_start":1157,"line_end":1157,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37583,"byte_end":37654,"line_start":1158,"line_end":1158,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37659,"byte_end":37664,"line_start":1159,"line_end":1159,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37669,"byte_end":37702,"line_start":1160,"line_end":1160,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":37707,"byte_end":37714,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38665,"byte_end":38672,"line_start":1192,"line_end":1192,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"pub async fn connect<A: Into<SocketAddr>>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38225,"byte_end":38279,"line_start":1179,"line_end":1179,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38284,"byte_end":38287,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38292,"byte_end":38306,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38311,"byte_end":38314,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38319,"byte_end":38326,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38331,"byte_end":38355,"line_start":1184,"line_end":1184,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38360,"byte_end":38405,"line_start":1185,"line_end":1185,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38410,"byte_end":38413,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38418,"byte_end":38462,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38467,"byte_end":38534,"line_start":1188,"line_end":1188,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38539,"byte_end":38597,"line_start":1189,"line_end":1189,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38602,"byte_end":38635,"line_start":1190,"line_end":1190,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38640,"byte_end":38647,"line_start":1191,"line_end":1191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40095,"byte_end":40099,"line_start":1232,"line_end":1232,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39264,"byte_end":39331,"line_start":1209,"line_end":1209,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39336,"byte_end":39339,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39344,"byte_end":39433,"line_start":1211,"line_end":1211,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39438,"byte_end":39441,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39446,"byte_end":39460,"line_start":1213,"line_end":1213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39465,"byte_end":39468,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39473,"byte_end":39480,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39485,"byte_end":39509,"line_start":1216,"line_end":1216,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39514,"byte_end":39575,"line_start":1217,"line_end":1217,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39580,"byte_end":39625,"line_start":1218,"line_end":1218,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39630,"byte_end":39633,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39638,"byte_end":39682,"line_start":1220,"line_end":1220,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39687,"byte_end":39754,"line_start":1221,"line_end":1221,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39759,"byte_end":39821,"line_start":1222,"line_end":1222,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39826,"byte_end":39829,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39834,"byte_end":39844,"line_start":1224,"line_end":1224,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39849,"byte_end":39915,"line_start":1225,"line_end":1225,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39920,"byte_end":39936,"line_start":1226,"line_end":1226,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39941,"byte_end":39944,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39949,"byte_end":39979,"line_start":1228,"line_end":1228,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":39984,"byte_end":40027,"line_start":1229,"line_end":1229,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40032,"byte_end":40065,"line_start":1230,"line_end":1230,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40070,"byte_end":40077,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40935,"byte_end":40939,"line_start":1261,"line_end":1261,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<UdpSocket>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40430,"byte_end":40486,"line_start":1246,"line_end":1246,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40491,"byte_end":40494,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40499,"byte_end":40573,"line_start":1248,"line_end":1248,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40578,"byte_end":40581,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40586,"byte_end":40600,"line_start":1250,"line_end":1250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40605,"byte_end":40608,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40613,"byte_end":40620,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40625,"byte_end":40649,"line_start":1253,"line_end":1253,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40654,"byte_end":40682,"line_start":1254,"line_end":1254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40687,"byte_end":40690,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40695,"byte_end":40739,"line_start":1256,"line_end":1256,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40744,"byte_end":40808,"line_start":1257,"line_end":1257,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40813,"byte_end":40873,"line_start":1258,"line_end":1258,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40878,"byte_end":40911,"line_start":1259,"line_end":1259,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40916,"byte_end":40923,"line_start":1260,"line_end":1260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41820,"byte_end":41829,"line_start":1286,"line_end":1286,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41095,"byte_end":41134,"line_start":1266,"line_end":1266,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41139,"byte_end":41142,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41147,"byte_end":41222,"line_start":1268,"line_end":1268,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41227,"byte_end":41230,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41235,"byte_end":41329,"line_start":1270,"line_end":1270,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41334,"byte_end":41404,"line_start":1271,"line_end":1271,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41409,"byte_end":41412,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41417,"byte_end":41431,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41436,"byte_end":41439,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41444,"byte_end":41457,"line_start":1275,"line_end":1275,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41462,"byte_end":41486,"line_start":1276,"line_end":1276,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41491,"byte_end":41519,"line_start":1277,"line_end":1277,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41524,"byte_end":41527,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41532,"byte_end":41576,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41581,"byte_end":41648,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41653,"byte_end":41656,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41661,"byte_end":41691,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41696,"byte_end":41752,"line_start":1283,"line_end":1283,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41757,"byte_end":41790,"line_start":1284,"line_end":1284,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41795,"byte_end":41802,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42714,"byte_end":42723,"line_start":1310,"line_end":1310,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":41954,"byte_end":42028,"line_start":1290,"line_end":1290,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42033,"byte_end":42036,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42041,"byte_end":42116,"line_start":1292,"line_end":1292,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42121,"byte_end":42124,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42129,"byte_end":42223,"line_start":1294,"line_end":1294,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42228,"byte_end":42298,"line_start":1295,"line_end":1295,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42303,"byte_end":42306,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42311,"byte_end":42325,"line_start":1297,"line_end":1297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42330,"byte_end":42333,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42338,"byte_end":42351,"line_start":1299,"line_end":1299,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42356,"byte_end":42380,"line_start":1300,"line_end":1300,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42385,"byte_end":42413,"line_start":1301,"line_end":1301,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42418,"byte_end":42421,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42426,"byte_end":42470,"line_start":1303,"line_end":1303,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42475,"byte_end":42542,"line_start":1304,"line_end":1304,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42547,"byte_end":42550,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42555,"byte_end":42585,"line_start":1306,"line_end":1306,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42590,"byte_end":42646,"line_start":1307,"line_end":1307,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42651,"byte_end":42684,"line_start":1308,"line_end":1308,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42689,"byte_end":42696,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43388,"byte_end":43395,"line_start":1332,"line_end":1332,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"pub async fn send_to<A: Into<SocketAddr>, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42848,"byte_end":42888,"line_start":1314,"line_end":1314,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42893,"byte_end":42896,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42901,"byte_end":42940,"line_start":1316,"line_end":1316,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42945,"byte_end":42948,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42953,"byte_end":42967,"line_start":1318,"line_end":1318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42972,"byte_end":42975,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42980,"byte_end":42993,"line_start":1320,"line_end":1320,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":42998,"byte_end":43022,"line_start":1321,"line_end":1321,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43027,"byte_end":43055,"line_start":1322,"line_end":1322,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43060,"byte_end":43063,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43068,"byte_end":43112,"line_start":1324,"line_end":1324,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43117,"byte_end":43181,"line_start":1325,"line_end":1325,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43186,"byte_end":43232,"line_start":1326,"line_end":1326,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43237,"byte_end":43240,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43245,"byte_end":43268,"line_start":1328,"line_end":1328,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43273,"byte_end":43320,"line_start":1329,"line_end":1329,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43325,"byte_end":43358,"line_start":1330,"line_end":1330,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43363,"byte_end":43370,"line_start":1331,"line_end":1331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44487,"byte_end":44491,"line_start":1361,"line_end":1361,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43569,"byte_end":43632,"line_start":1337,"line_end":1337,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43637,"byte_end":43640,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43645,"byte_end":43682,"line_start":1339,"line_end":1339,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43687,"byte_end":43690,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43695,"byte_end":43789,"line_start":1341,"line_end":1341,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43794,"byte_end":43864,"line_start":1342,"line_end":1342,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43869,"byte_end":43872,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43877,"byte_end":43969,"line_start":1344,"line_end":1344,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":43974,"byte_end":44031,"line_start":1345,"line_end":1345,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44036,"byte_end":44039,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44044,"byte_end":44058,"line_start":1347,"line_end":1347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44063,"byte_end":44066,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44071,"byte_end":44084,"line_start":1349,"line_end":1349,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44089,"byte_end":44113,"line_start":1350,"line_end":1350,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44118,"byte_end":44146,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44151,"byte_end":44154,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44159,"byte_end":44203,"line_start":1353,"line_end":1353,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44208,"byte_end":44275,"line_start":1354,"line_end":1354,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44280,"byte_end":44328,"line_start":1355,"line_end":1355,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44333,"byte_end":44336,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44341,"byte_end":44371,"line_start":1357,"line_end":1357,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44376,"byte_end":44419,"line_start":1358,"line_end":1358,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44424,"byte_end":44457,"line_start":1359,"line_end":1359,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44462,"byte_end":44469,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45596,"byte_end":45600,"line_start":1390,"line_end":1390,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44597,"byte_end":44688,"line_start":1365,"line_end":1365,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44693,"byte_end":44703,"line_start":1366,"line_end":1366,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44708,"byte_end":44711,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44716,"byte_end":44791,"line_start":1368,"line_end":1368,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44796,"byte_end":44799,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44804,"byte_end":44898,"line_start":1370,"line_end":1370,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44903,"byte_end":44973,"line_start":1371,"line_end":1371,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44978,"byte_end":44981,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":44986,"byte_end":45078,"line_start":1373,"line_end":1373,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45083,"byte_end":45140,"line_start":1374,"line_end":1374,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45145,"byte_end":45148,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45153,"byte_end":45167,"line_start":1376,"line_end":1376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45172,"byte_end":45175,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45180,"byte_end":45193,"line_start":1378,"line_end":1378,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45198,"byte_end":45222,"line_start":1379,"line_end":1379,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45227,"byte_end":45255,"line_start":1380,"line_end":1380,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45260,"byte_end":45263,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45268,"byte_end":45312,"line_start":1382,"line_end":1382,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45317,"byte_end":45384,"line_start":1383,"line_end":1383,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45389,"byte_end":45437,"line_start":1384,"line_end":1384,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45442,"byte_end":45445,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45450,"byte_end":45480,"line_start":1386,"line_end":1386,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45485,"byte_end":45528,"line_start":1387,"line_end":1387,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45533,"byte_end":45566,"line_start":1388,"line_end":1388,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45571,"byte_end":45578,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46407,"byte_end":46411,"line_start":1415,"line_end":1415,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45706,"byte_end":45743,"line_start":1394,"line_end":1394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45748,"byte_end":45751,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45756,"byte_end":45796,"line_start":1396,"line_end":1396,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45801,"byte_end":45804,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45809,"byte_end":45901,"line_start":1398,"line_end":1398,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45906,"byte_end":45963,"line_start":1399,"line_end":1399,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45968,"byte_end":45971,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45976,"byte_end":45990,"line_start":1401,"line_end":1401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":45995,"byte_end":45998,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46003,"byte_end":46016,"line_start":1403,"line_end":1403,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46021,"byte_end":46045,"line_start":1404,"line_end":1404,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46050,"byte_end":46078,"line_start":1405,"line_end":1405,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46083,"byte_end":46086,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46091,"byte_end":46135,"line_start":1407,"line_end":1407,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46140,"byte_end":46207,"line_start":1408,"line_end":1408,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46212,"byte_end":46260,"line_start":1409,"line_end":1409,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46265,"byte_end":46268,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46273,"byte_end":46296,"line_start":1411,"line_end":1411,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46301,"byte_end":46339,"line_start":1412,"line_end":1412,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46344,"byte_end":46377,"line_start":1413,"line_end":1413,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46382,"byte_end":46389,"line_start":1414,"line_end":1414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47198,"byte_end":47202,"line_start":1443,"line_end":1443,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixListener>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS listener bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS listener bound to the specified path.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46755,"byte_end":46810,"line_start":1430,"line_end":1430,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46815,"byte_end":46818,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46823,"byte_end":46837,"line_start":1432,"line_end":1432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46842,"byte_end":46845,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46850,"byte_end":46863,"line_start":1434,"line_end":1434,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46868,"byte_end":46892,"line_start":1435,"line_end":1435,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46897,"byte_end":46938,"line_start":1436,"line_end":1436,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46943,"byte_end":46946,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46951,"byte_end":46995,"line_start":1438,"line_end":1438,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47000,"byte_end":47063,"line_start":1439,"line_end":1439,"column_start":5,"column_end":68}},{"value":"/ println!(\"Listening on {:?}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47068,"byte_end":47136,"line_start":1440,"line_end":1440,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47141,"byte_end":47174,"line_start":1441,"line_end":1441,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47179,"byte_end":47186,"line_start":1442,"line_end":1442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47970,"byte_end":47976,"line_start":1465,"line_end":1465,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<UnixListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming UDS stream connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming UDS stream connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47372,"byte_end":47421,"line_start":1448,"line_end":1448,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47426,"byte_end":47429,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a stream together with its remote","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47434,"byte_end":47528,"line_start":1450,"line_end":1450,"column_start":5,"column_end":99}},{"value":"/ address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47533,"byte_end":47545,"line_start":1451,"line_end":1451,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47550,"byte_end":47553,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47558,"byte_end":47572,"line_start":1453,"line_end":1453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47577,"byte_end":47580,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47585,"byte_end":47598,"line_start":1455,"line_end":1455,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47603,"byte_end":47627,"line_start":1456,"line_end":1456,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47632,"byte_end":47673,"line_start":1457,"line_end":1457,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47678,"byte_end":47681,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47686,"byte_end":47730,"line_start":1459,"line_end":1459,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47735,"byte_end":47798,"line_start":1460,"line_end":1460,"column_start":5,"column_end":68}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47803,"byte_end":47853,"line_start":1461,"line_end":1461,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {:?}\", addr);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47858,"byte_end":47902,"line_start":1462,"line_end":1462,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47907,"byte_end":47940,"line_start":1463,"line_end":1463,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":47945,"byte_end":47952,"line_start":1464,"line_end":1464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48911,"byte_end":48919,"line_start":1492,"line_end":1492,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<UnixListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming UDS connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming UDS connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48158,"byte_end":48207,"line_start":1470,"line_end":1470,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48212,"byte_end":48215,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`] item.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48220,"byte_end":48289,"line_start":1472,"line_end":1472,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48294,"byte_end":48297,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48302,"byte_end":48316,"line_start":1474,"line_end":1474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48321,"byte_end":48324,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48329,"byte_end":48342,"line_start":1476,"line_end":1476,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48347,"byte_end":48371,"line_start":1477,"line_end":1477,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48376,"byte_end":48423,"line_start":1478,"line_end":1478,"column_start":5,"column_end":52}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48428,"byte_end":48469,"line_start":1479,"line_end":1479,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48474,"byte_end":48477,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48482,"byte_end":48526,"line_start":1481,"line_end":1481,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48531,"byte_end":48594,"line_start":1482,"line_end":1482,"column_start":5,"column_end":68}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48599,"byte_end":48638,"line_start":1483,"line_end":1483,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48643,"byte_end":48662,"line_start":1484,"line_end":1484,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48667,"byte_end":48670,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48675,"byte_end":48727,"line_start":1486,"line_end":1486,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48732,"byte_end":48761,"line_start":1487,"line_end":1487,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {:?}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48766,"byte_end":48839,"line_start":1488,"line_end":1488,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48844,"byte_end":48849,"line_start":1489,"line_end":1489,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48854,"byte_end":48887,"line_start":1490,"line_end":1490,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":48892,"byte_end":48899,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49852,"byte_end":49859,"line_start":1523,"line_end":1523,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<UnixStream>>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS stream connected to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS stream connected to the specified path.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49471,"byte_end":49528,"line_start":1511,"line_end":1511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49533,"byte_end":49536,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49541,"byte_end":49555,"line_start":1513,"line_end":1513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49560,"byte_end":49563,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49568,"byte_end":49581,"line_start":1515,"line_end":1515,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49586,"byte_end":49610,"line_start":1516,"line_end":1516,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49615,"byte_end":49654,"line_start":1517,"line_end":1517,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49659,"byte_end":49662,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49667,"byte_end":49711,"line_start":1519,"line_end":1519,"column_start":5,"column_end":49}},{"value":"/ let stream = Async::<UnixStream>::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49716,"byte_end":49784,"line_start":1520,"line_end":1520,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49789,"byte_end":49822,"line_start":1521,"line_end":1521,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49827,"byte_end":49834,"line_start":1522,"line_end":1522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50794,"byte_end":50798,"line_start":1549,"line_end":1549,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixStream>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixStream>, Async<UnixStream>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected UDS stream sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected UDS stream sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50426,"byte_end":50486,"line_start":1537,"line_end":1537,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50491,"byte_end":50494,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50499,"byte_end":50513,"line_start":1539,"line_end":1539,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50518,"byte_end":50521,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50526,"byte_end":50539,"line_start":1541,"line_end":1541,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50544,"byte_end":50568,"line_start":1542,"line_end":1542,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50573,"byte_end":50612,"line_start":1543,"line_end":1543,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50617,"byte_end":50620,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50625,"byte_end":50669,"line_start":1545,"line_end":1545,"column_start":5,"column_end":49}},{"value":"/ let (stream1, stream2) = Async::<UnixStream>::pair()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50674,"byte_end":50732,"line_start":1546,"line_end":1546,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50737,"byte_end":50770,"line_start":1547,"line_end":1547,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":50775,"byte_end":50782,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51641,"byte_end":51645,"line_start":1578,"line_end":1578,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixDatagram>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket bound to the specified path.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51266,"byte_end":51328,"line_start":1566,"line_end":1566,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51333,"byte_end":51336,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51341,"byte_end":51355,"line_start":1568,"line_end":1568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51360,"byte_end":51363,"line_start":1569,"line_end":1569,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51368,"byte_end":51381,"line_start":1570,"line_end":1570,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51386,"byte_end":51410,"line_start":1571,"line_end":1571,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51415,"byte_end":51456,"line_start":1572,"line_end":1572,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51461,"byte_end":51464,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51469,"byte_end":51513,"line_start":1574,"line_end":1574,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51518,"byte_end":51579,"line_start":1575,"line_end":1575,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51584,"byte_end":51617,"line_start":1576,"line_end":1576,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51622,"byte_end":51629,"line_start":1577,"line_end":1577,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52177,"byte_end":52184,"line_start":1595,"line_end":1595,"column_start":12,"column_end":19},"name":"unbound","qualname":"<Async<UnixDatagram>>::unbound","value":"pub fn unbound() -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket not bound to any address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51815,"byte_end":51874,"line_start":1583,"line_end":1583,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51879,"byte_end":51882,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51887,"byte_end":51901,"line_start":1585,"line_end":1585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51906,"byte_end":51909,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51914,"byte_end":51927,"line_start":1587,"line_end":1587,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51932,"byte_end":51956,"line_start":1588,"line_end":1588,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51961,"byte_end":52002,"line_start":1589,"line_end":1589,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52007,"byte_end":52010,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52015,"byte_end":52059,"line_start":1591,"line_end":1591,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52064,"byte_end":52115,"line_start":1592,"line_end":1592,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52120,"byte_end":52153,"line_start":1593,"line_end":1593,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52158,"byte_end":52165,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52660,"byte_end":52664,"line_start":1611,"line_end":1611,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixDatagram>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixDatagram>, Async<UnixDatagram>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected Unix datagram sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected Unix datagram sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52285,"byte_end":52348,"line_start":1599,"line_end":1599,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52353,"byte_end":52356,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52361,"byte_end":52375,"line_start":1601,"line_end":1601,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52380,"byte_end":52383,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52388,"byte_end":52401,"line_start":1603,"line_end":1603,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52406,"byte_end":52430,"line_start":1604,"line_end":1604,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52435,"byte_end":52476,"line_start":1605,"line_end":1605,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52481,"byte_end":52484,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52489,"byte_end":52533,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/ let (socket1, socket2) = Async::<UnixDatagram>::pair()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52538,"byte_end":52598,"line_start":1608,"line_end":1608,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52603,"byte_end":52636,"line_start":1609,"line_end":1609,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52641,"byte_end":52648,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53396,"byte_end":53405,"line_start":1633,"line_end":1633,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UnixDatagram>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52851,"byte_end":52885,"line_start":1616,"line_end":1616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52890,"byte_end":52893,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52898,"byte_end":52973,"line_start":1618,"line_end":1618,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52978,"byte_end":52981,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":52986,"byte_end":53000,"line_start":1620,"line_end":1620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53005,"byte_end":53008,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53013,"byte_end":53026,"line_start":1622,"line_end":1622,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53031,"byte_end":53055,"line_start":1623,"line_end":1623,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53060,"byte_end":53101,"line_start":1624,"line_end":1624,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53106,"byte_end":53109,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53114,"byte_end":53158,"line_start":1626,"line_end":1626,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53163,"byte_end":53224,"line_start":1627,"line_end":1627,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53229,"byte_end":53232,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53237,"byte_end":53267,"line_start":1629,"line_end":1629,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53272,"byte_end":53328,"line_start":1630,"line_end":1630,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53333,"byte_end":53366,"line_start":1631,"line_end":1631,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53371,"byte_end":53378,"line_start":1632,"line_end":1632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54058,"byte_end":54065,"line_start":1655,"line_end":1655,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UnixDatagram>>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53534,"byte_end":53574,"line_start":1637,"line_end":1637,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53579,"byte_end":53582,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53587,"byte_end":53627,"line_start":1639,"line_end":1639,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53632,"byte_end":53635,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53640,"byte_end":53654,"line_start":1641,"line_end":1641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53659,"byte_end":53662,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53667,"byte_end":53680,"line_start":1643,"line_end":1643,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53685,"byte_end":53709,"line_start":1644,"line_end":1644,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53714,"byte_end":53755,"line_start":1645,"line_end":1645,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53760,"byte_end":53763,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53768,"byte_end":53812,"line_start":1647,"line_end":1647,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53817,"byte_end":53868,"line_start":1648,"line_end":1648,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53873,"byte_end":53876,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53881,"byte_end":53904,"line_start":1650,"line_end":1650,"column_start":5,"column_end":28}},{"value":"/ let addr = \"/tmp/socket\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53909,"byte_end":53938,"line_start":1651,"line_end":1651,"column_start":5,"column_end":34}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53943,"byte_end":53990,"line_start":1652,"line_end":1652,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":53995,"byte_end":54028,"line_start":1653,"line_end":1653,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54033,"byte_end":54040,"line_start":1654,"line_end":1654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54965,"byte_end":54969,"line_start":1680,"line_end":1680,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UnixDatagram>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the connected peer.","sig":null,"attributes":[{"value":"/ Receives data from the connected peer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54203,"byte_end":54245,"line_start":1659,"line_end":1659,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54250,"byte_end":54253,"line_start":1660,"line_end":1660,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54258,"byte_end":54333,"line_start":1661,"line_end":1661,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54338,"byte_end":54341,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54346,"byte_end":54441,"line_start":1663,"line_end":1663,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54446,"byte_end":54503,"line_start":1664,"line_end":1664,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54508,"byte_end":54511,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54516,"byte_end":54530,"line_start":1666,"line_end":1666,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54535,"byte_end":54538,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54543,"byte_end":54556,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54561,"byte_end":54585,"line_start":1669,"line_end":1669,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54590,"byte_end":54631,"line_start":1670,"line_end":1670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54636,"byte_end":54639,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54644,"byte_end":54688,"line_start":1672,"line_end":1672,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54693,"byte_end":54755,"line_start":1673,"line_end":1673,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54760,"byte_end":54806,"line_start":1674,"line_end":1674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54811,"byte_end":54814,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54819,"byte_end":54849,"line_start":1676,"line_end":1676,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54854,"byte_end":54897,"line_start":1677,"line_end":1677,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54902,"byte_end":54935,"line_start":1678,"line_end":1678,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":54940,"byte_end":54947,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55785,"byte_end":55789,"line_start":1705,"line_end":1705,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UnixDatagram>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55075,"byte_end":55112,"line_start":1684,"line_end":1684,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55117,"byte_end":55120,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55125,"byte_end":55165,"line_start":1686,"line_end":1686,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55170,"byte_end":55173,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55178,"byte_end":55273,"line_start":1688,"line_end":1688,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55278,"byte_end":55335,"line_start":1689,"line_end":1689,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55340,"byte_end":55343,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55348,"byte_end":55362,"line_start":1691,"line_end":1691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55367,"byte_end":55370,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55375,"byte_end":55388,"line_start":1693,"line_end":1693,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55393,"byte_end":55417,"line_start":1694,"line_end":1694,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55422,"byte_end":55463,"line_start":1695,"line_end":1695,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55468,"byte_end":55471,"line_start":1696,"line_end":1696,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55476,"byte_end":55520,"line_start":1697,"line_end":1697,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55525,"byte_end":55587,"line_start":1698,"line_end":1698,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55592,"byte_end":55638,"line_start":1699,"line_end":1699,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55643,"byte_end":55646,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55651,"byte_end":55674,"line_start":1701,"line_end":1701,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55679,"byte_end":55717,"line_start":1702,"line_end":1702,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55722,"byte_end":55755,"line_start":1703,"line_end":1703,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55760,"byte_end":55767,"line_start":1704,"line_end":1704,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":65811,"byte_end":65821,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":67998,"byte_end":68005,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":73732,"byte_end":73743,"line_start":236,"line_end":236,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":78206,"byte_end":78215,"line_start":368,"line_end":368,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":78745,"byte_end":78751,"line_start":387,"line_end":387,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":83149,"byte_end":83159,"line_start":514,"line_end":514,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4356,"byte_end":4361,"line_start":143,"line_end":143,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":10426,"byte_end":10431,"line_start":337,"line_end":337,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":10662,"byte_end":10667,"line_start":346,"line_end":346,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":10999,"byte_end":11004,"line_start":358,"line_end":358,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16542,"byte_end":16547,"line_start":498,"line_end":498,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16585,"byte_end":16590,"line_start":501,"line_end":501,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":18089,"byte_end":18094,"line_start":548,"line_end":548,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":19937,"byte_end":19942,"line_start":613,"line_end":613,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":239},{"krate":0,"index":244},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30497,"byte_end":30502,"line_start":919,"line_end":919,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30590,"byte_end":30595,"line_start":925,"line_end":925,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30687,"byte_end":30692,"line_start":931,"line_end":931,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":31017,"byte_end":31022,"line_start":943,"line_end":943,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":32803,"byte_end":32808,"line_start":1006,"line_end":1006,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35502,"byte_end":35507,"line_start":1097,"line_end":1097,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38028,"byte_end":38033,"line_start":1170,"line_end":1170,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38202,"byte_end":38207,"line_start":1178,"line_end":1178,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40241,"byte_end":40246,"line_start":1237,"line_end":1237,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40407,"byte_end":40412,"line_start":1245,"line_end":1245,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46550,"byte_end":46555,"line_start":1420,"line_end":1420,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46729,"byte_end":46734,"line_start":1429,"line_end":1429,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49238,"byte_end":49243,"line_start":1501,"line_end":1501,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49447,"byte_end":49452,"line_start":1510,"line_end":1510,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51039,"byte_end":51044,"line_start":1556,"line_end":1556,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51240,"byte_end":51245,"line_start":1565,"line_end":1565,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":381},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55954,"byte_end":55959,"line_start":1711,"line_end":1711,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/driver.rs","byte_start":65811,"byte_end":65821,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":67998,"byte_end":68005,"line_start":62,"line_end":62,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":73732,"byte_end":73743,"line_start":236,"line_end":236,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":78206,"byte_end":78215,"line_start":368,"line_end":368,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":78745,"byte_end":78751,"line_start":387,"line_end":387,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/reactor.rs","byte_start":83149,"byte_end":83159,"line_start":514,"line_end":514,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":4356,"byte_end":4361,"line_start":143,"line_end":143,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":10426,"byte_end":10431,"line_start":337,"line_end":337,"column_start":15,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":10662,"byte_end":10667,"line_start":346,"line_end":346,"column_start":17,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":10999,"byte_end":11004,"line_start":358,"line_end":358,"column_start":17,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":418},"to":{"krate":22,"index":68}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16542,"byte_end":16547,"line_start":498,"line_end":498,"column_start":19,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":16585,"byte_end":16590,"line_start":501,"line_end":501,"column_start":18,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":18089,"byte_end":18094,"line_start":548,"line_end":548,"column_start":30,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":424},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":19937,"byte_end":19942,"line_start":613,"line_end":613,"column_start":9,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30497,"byte_end":30502,"line_start":919,"line_end":919,"column_start":22,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30590,"byte_end":30595,"line_start":925,"line_end":925,"column_start":22,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":30687,"byte_end":30692,"line_start":931,"line_end":931,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":31017,"byte_end":31022,"line_start":943,"line_end":943,"column_start":29,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":424},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":32803,"byte_end":32808,"line_start":1006,"line_end":1006,"column_start":31,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":424},"to":{"krate":23,"index":20}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":35502,"byte_end":35507,"line_start":1097,"line_end":1097,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38028,"byte_end":38033,"line_start":1170,"line_end":1170,"column_start":41,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":38202,"byte_end":38207,"line_start":1178,"line_end":1178,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40241,"byte_end":40246,"line_start":1237,"line_end":1237,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":40407,"byte_end":40412,"line_start":1245,"line_end":1245,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46550,"byte_end":46555,"line_start":1420,"line_end":1420,"column_start":39,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":46729,"byte_end":46734,"line_start":1429,"line_end":1429,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49238,"byte_end":49243,"line_start":1501,"line_end":1501,"column_start":52,"column_end":57},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":49447,"byte_end":49452,"line_start":1510,"line_end":1510,"column_start":6,"column_end":11},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51039,"byte_end":51044,"line_start":1556,"line_end":1556,"column_start":50,"column_end":55},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":51240,"byte_end":51245,"line_start":1565,"line_end":1565,"column_start":6,"column_end":11},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.4.0/src/lib.rs","byte_start":55954,"byte_end":55959,"line_start":1711,"line_end":1711,"column_start":52,"column_end":57},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":1963}}]}