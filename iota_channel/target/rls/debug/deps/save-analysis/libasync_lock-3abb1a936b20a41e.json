{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0","program":"/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_lock","--edition=2018","/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=3abb1a936b20a41e","-C","extra-filename=-3abb1a936b20a41e","--out-dir","/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","-L","dependency=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","--extern","event_listener=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libevent_listener-c4d2e533b814973a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu"],"output":"/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libasync_lock-3abb1a936b20a41e.rmeta"},"prelude":{"crate_id":{"name":"async_lock","disambiguator":[2319081127163786881,8929527876106506191]},"crate_root":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src","external_crates":[{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","num":18,"id":{"name":"event_listener","disambiguator":[1329321184522063609,6930102895973449987]}}],"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":0,"byte_end":755,"line_start":1,"line_end":20,"column_start":1,"column_end":67}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":521,"byte_end":528,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":530,"byte_end":547,"line_start":17,"line_end":17,"column_start":28,"column_end":45},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":566,"byte_end":571,"line_start":18,"line_end":18,"column_start":17,"column_end":22},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":573,"byte_end":583,"line_start":18,"line_end":18,"column_start":24,"column_end":34},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":585,"byte_end":598,"line_start":18,"line_end":18,"column_start":36,"column_end":49},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":618,"byte_end":624,"line_start":19,"line_end":19,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":626,"byte_end":641,"line_start":19,"line_end":19,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":643,"byte_end":668,"line_start":19,"line_end":19,"column_start":43,"column_end":68},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":670,"byte_end":686,"line_start":19,"line_end":19,"column_start":70,"column_end":86},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":709,"byte_end":718,"line_start":20,"line_end":20,"column_start":21,"column_end":30},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":720,"byte_end":734,"line_start":20,"line_end":20,"column_start":32,"column_end":46},"alias_span":null,"name":"SemaphoreGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":736,"byte_end":753,"line_start":20,"line_end":20,"column_start":48,"column_end":65},"alias_span":null,"name":"SemaphoreGuardArc","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":0,"byte_end":755,"line_start":1,"line_end":20,"column_start":1,"column_end":67},"name":"","qualname":"::","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":13},{"krate":0,"index":138},{"krate":0,"index":283},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"decl_id":null,"docs":" Async synchronization primitives.","sig":null,"attributes":[{"value":"/ Async synchronization primitives.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":38,"byte_end":41,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides the following primitives:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":42,"byte_end":91,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":92,"byte_end":95,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] - enables tasks to synchronize all together at the same time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":96,"byte_end":175,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ * [`Mutex`] - a mutual exclusion lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":176,"byte_end":218,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/ * [`RwLock`] - a reader-writer lock, allowing any number of readers or a single writer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":219,"byte_end":310,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ * [`Semaphore`] - limits the number of concurrent operations.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":311,"byte_end":376,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/lib.rs","byte_start":378,"byte_end":449,"line_start":10,"line_end":10,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":894,"byte_end":901,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" A counter to synchronize multiple tasks at the same time.\n","sig":null,"attributes":[{"value":"/ A counter to synchronize multiple tasks at the same time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":804,"byte_end":865,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1478,"byte_end":1481,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"name":"new","qualname":"<Barrier>::new","value":"pub const fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a barrier that can block the given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a barrier that can block the given number of tasks.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1060,"byte_end":1123,"line_start":20,"line_end":20,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1128,"byte_end":1131,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`wait()`] and then wake up all tasks","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1136,"byte_end":1221,"line_start":22,"line_end":22,"column_start":5,"column_end":90}},{"value":"/ at once when the `n`th task calls [`wait()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1226,"byte_end":1275,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1280,"byte_end":1283,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ [`wait()`]: `Barrier::wait()`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1288,"byte_end":1321,"line_start":25,"line_end":25,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1326,"byte_end":1329,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1334,"byte_end":1348,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1353,"byte_end":1356,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1361,"byte_end":1368,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1373,"byte_end":1401,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1406,"byte_end":1409,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1414,"byte_end":1448,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1453,"byte_end":1460,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2732,"byte_end":2736,"line_start":75,"line_end":75,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until all tasks reach this point.","sig":null,"attributes":[{"value":"/ Blocks the current task until all tasks reach this point.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1706,"byte_end":1767,"line_start":45,"line_end":45,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1772,"byte_end":1775,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Barriers are reusable after all tasks have synchronized, and can be used continuously.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1780,"byte_end":1870,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1875,"byte_end":1878,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Returns a [`BarrierWaitResult`] indicating whether this task is the \"leader\", meaning the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1883,"byte_end":1976,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/ last task to call this method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1981,"byte_end":2015,"line_start":50,"line_end":50,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2020,"byte_end":2023,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2028,"byte_end":2042,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2047,"byte_end":2050,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2055,"byte_end":2062,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2067,"byte_end":2095,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2100,"byte_end":2129,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2134,"byte_end":2157,"line_start":57,"line_end":57,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2162,"byte_end":2182,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2187,"byte_end":2190,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let barrier = Arc::new(Barrier::new(5));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2195,"byte_end":2239,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2244,"byte_end":2247,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ for _ in 0..5 {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2252,"byte_end":2271,"line_start":62,"line_end":62,"column_start":5,"column_end":24}},{"value":"/     let b = barrier.clone();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2276,"byte_end":2308,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2313,"byte_end":2344,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/         future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2349,"byte_end":2385,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/             // The same messages will be printed together.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2390,"byte_end":2452,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/             // There will NOT be interleaving of \"before\" and \"after\".","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2457,"byte_end":2531,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/             println!(\"before wait\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2536,"byte_end":2576,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/             b.wait().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2581,"byte_end":2612,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/             println!(\"after wait\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2617,"byte_end":2656,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/         });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2661,"byte_end":2676,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2681,"byte_end":2692,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2697,"byte_end":2702,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":2707,"byte_end":2714,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":331},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3776,"byte_end":3793,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::barrier::BarrierWaitResult","value":"BarrierWaitResult {  }","parent":null,"children":[{"krate":0,"index":332}],"decl_id":null,"docs":" Returned by [`Barrier::wait()`] when all tasks have called it.","sig":null,"attributes":[{"value":"/ Returned by [`Barrier::wait()`] when all tasks have called it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3460,"byte_end":3526,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3527,"byte_end":3530,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3531,"byte_end":3545,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3546,"byte_end":3549,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3550,"byte_end":3557,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3558,"byte_end":3602,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3603,"byte_end":3631,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3632,"byte_end":3635,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3636,"byte_end":3670,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ let barrier_wait_result = barrier.wait().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3671,"byte_end":3722,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3723,"byte_end":3732,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3733,"byte_end":3740,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4328,"byte_end":4337,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task was the last to call to [`Barrier::wait()`].","sig":null,"attributes":[{"value":"/ Returns `true` if this task was the last to call to [`Barrier::wait()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3849,"byte_end":3925,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3930,"byte_end":3933,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3938,"byte_end":3952,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3957,"byte_end":3960,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3965,"byte_end":3972,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3977,"byte_end":4021,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Barrier;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4026,"byte_end":4054,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4059,"byte_end":4088,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4093,"byte_end":4096,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4101,"byte_end":4135,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let (a, b) = future::zip(barrier.wait(), barrier.wait()).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4140,"byte_end":4207,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(a.is_leader(), false);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4212,"byte_end":4249,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(b.is_leader(), true);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4254,"byte_end":4290,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4295,"byte_end":4304,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":4309,"byte_end":4316,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5248,"byte_end":5253,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" An async mutex.","sig":null,"attributes":[{"value":"/ An async mutex.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4666,"byte_end":4685,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4686,"byte_end":4689,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The locking mechanism uses eventual fairness to ensure locking will be fair on average without","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4690,"byte_end":4788,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ sacrificing performance. This is done by forcing a fair lock whenever a lock operation is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4789,"byte_end":4882,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ starved for longer than 0.5 milliseconds.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4883,"byte_end":4928,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4929,"byte_end":4932,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4933,"byte_end":4947,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4948,"byte_end":4951,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4952,"byte_end":4959,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":4960,"byte_end":5004,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5005,"byte_end":5031,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5032,"byte_end":5035,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let m = Mutex::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5036,"byte_end":5062,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5063,"byte_end":5066,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let mut guard = m.lock().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5067,"byte_end":5102,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/ *guard = 2;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5103,"byte_end":5118,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5119,"byte_end":5122,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert!(m.try_lock().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5123,"byte_end":5159,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ drop(guard);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5160,"byte_end":5176,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(*m.try_lock().unwrap(), 2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5177,"byte_end":5219,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5220,"byte_end":5228,"line_start":35,"line_end":35,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5229,"byte_end":5236,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5928,"byte_end":5931,"line_start":64,"line_end":64,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T>>::new","value":"pub const fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new async mutex.","sig":null,"attributes":[{"value":"/ Creates a new async mutex.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5747,"byte_end":5777,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5782,"byte_end":5785,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5790,"byte_end":5804,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5809,"byte_end":5812,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5817,"byte_end":5824,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5829,"byte_end":5855,"line_start":60,"line_end":60,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5860,"byte_end":5863,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5868,"byte_end":5898,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5903,"byte_end":5910,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6353,"byte_end":6363,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6109,"byte_end":6163,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6168,"byte_end":6171,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6176,"byte_end":6190,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6195,"byte_end":6198,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6203,"byte_end":6210,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6215,"byte_end":6241,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6246,"byte_end":6249,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6254,"byte_end":6285,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mutex.into_inner(), 10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6290,"byte_end":6329,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6334,"byte_end":6341,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6841,"byte_end":6845,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires the mutex.","sig":null,"attributes":[{"value":"/ Acquires the mutex.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6448,"byte_end":6471,"line_start":88,"line_end":88,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6476,"byte_end":6479,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6484,"byte_end":6541,"line_start":90,"line_end":90,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6546,"byte_end":6549,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6554,"byte_end":6568,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6573,"byte_end":6576,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6581,"byte_end":6588,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6593,"byte_end":6637,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6642,"byte_end":6668,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6673,"byte_end":6676,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6681,"byte_end":6712,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ let guard = mutex.lock().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6717,"byte_end":6752,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*guard, 10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6757,"byte_end":6784,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6789,"byte_end":6797,"line_start":101,"line_end":101,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6802,"byte_end":6809,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6814,"byte_end":6823,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10734,"byte_end":10742,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the mutex.","sig":null,"attributes":[{"value":"/ Attempts to acquire the mutex.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10265,"byte_end":10299,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10304,"byte_end":10307,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If the mutex could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10312,"byte_end":10404,"line_start":217,"line_end":217,"column_start":5,"column_end":97}},{"value":"/ guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10409,"byte_end":10468,"line_start":218,"line_end":218,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10473,"byte_end":10476,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10481,"byte_end":10495,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10500,"byte_end":10503,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10508,"byte_end":10515,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10520,"byte_end":10546,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10551,"byte_end":10554,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10559,"byte_end":10590,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"/ if let Some(guard) = mutex.try_lock() {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10595,"byte_end":10638,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*guard, 10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10643,"byte_end":10674,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10679,"byte_end":10684,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10689,"byte_end":10696,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10701,"byte_end":10708,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":10713,"byte_end":10722,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11529,"byte_end":11536,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11011,"byte_end":11066,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11071,"byte_end":11074,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the mutex mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11079,"byte_end":11170,"line_start":246,"line_end":246,"column_start":5,"column_end":96}},{"value":"/ borrow statically guarantees the mutex is not already acquired.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11175,"byte_end":11242,"line_start":247,"line_end":247,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11247,"byte_end":11250,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11255,"byte_end":11269,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11274,"byte_end":11277,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11282,"byte_end":11289,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11294,"byte_end":11338,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11343,"byte_end":11369,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11374,"byte_end":11377,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11382,"byte_end":11416,"line_start":255,"line_end":255,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11421,"byte_end":11447,"line_start":256,"line_end":256,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11452,"byte_end":11492,"line_start":257,"line_end":257,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11497,"byte_end":11505,"line_start":258,"line_end":258,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11510,"byte_end":11517,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12112,"byte_end":12120,"line_start":283,"line_end":283,"column_start":18,"column_end":26},"name":"lock_arc","qualname":"<Mutex<T>>::lock_arc","value":"pub async fn lock_arc<'_>(&'_ Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires the mutex and clones a reference to it.","sig":null,"attributes":[{"value":"/ Acquires the mutex and clones a reference to it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11641,"byte_end":11693,"line_start":266,"line_end":266,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11698,"byte_end":11701,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an owned guard that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11706,"byte_end":11770,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11775,"byte_end":11778,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11783,"byte_end":11797,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11802,"byte_end":11805,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11810,"byte_end":11817,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11822,"byte_end":11866,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11871,"byte_end":11897,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11902,"byte_end":11925,"line_start":275,"line_end":275,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11930,"byte_end":11933,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11938,"byte_end":11979,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ let guard = mutex.lock_arc().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11984,"byte_end":12023,"line_start":278,"line_end":278,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(*guard, 10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12028,"byte_end":12055,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12060,"byte_end":12068,"line_start":280,"line_end":280,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12073,"byte_end":12080,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12085,"byte_end":12094,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12872,"byte_end":12884,"line_start":309,"line_end":309,"column_start":12,"column_end":24},"name":"try_lock_arc","qualname":"<Mutex<T>>::try_lock_arc","value":"pub fn try_lock_arc(&Arc<Self>) -> Option<MutexGuardArc<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the mutex and clone a reference to it.","sig":null,"attributes":[{"value":"/ Attempts to acquire the mutex and clone a reference to it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12330,"byte_end":12392,"line_start":291,"line_end":291,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12397,"byte_end":12400,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the mutex could not be acquired at this time, then [`None`] is returned. Otherwise, an","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12405,"byte_end":12498,"line_start":293,"line_end":293,"column_start":5,"column_end":98}},{"value":"/ owned guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12503,"byte_end":12568,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12573,"byte_end":12576,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12581,"byte_end":12595,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12600,"byte_end":12603,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12608,"byte_end":12615,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Mutex;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12620,"byte_end":12646,"line_start":299,"line_end":299,"column_start":5,"column_end":31}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12651,"byte_end":12674,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12679,"byte_end":12682,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12687,"byte_end":12728,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ if let Some(guard) = mutex.try_lock() {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12733,"byte_end":12776,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*guard, 10);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12781,"byte_end":12812,"line_start":304,"line_end":304,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12817,"byte_end":12822,"line_start":305,"line_end":305,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12827,"byte_end":12834,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12839,"byte_end":12846,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":12851,"byte_end":12860,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13986,"byte_end":13996,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the mutex when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13925,"byte_end":13974,"line_start":350,"line_end":350,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14555,"byte_end":14561,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"source","qualname":"<MutexGuard>::source","value":"pub fn source(&MutexGuard) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the mutex a guard came from.","sig":null,"attributes":[{"value":"/ Returns a reference to the mutex a guard came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14193,"byte_end":14248,"line_start":357,"line_end":357,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14253,"byte_end":14256,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14261,"byte_end":14275,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14280,"byte_end":14283,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14288,"byte_end":14295,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14300,"byte_end":14344,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{Mutex, MutexGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14349,"byte_end":14389,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14394,"byte_end":14397,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10i32);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14402,"byte_end":14436,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/ let guard = mutex.lock().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14441,"byte_end":14476,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/ dbg!(MutexGuard::source(&guard));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14481,"byte_end":14518,"line_start":367,"line_end":367,"column_start":5,"column_end":42}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14523,"byte_end":14531,"line_start":368,"line_end":368,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14536,"byte_end":14543,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15557,"byte_end":15570,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"MutexGuardArc","qualname":"::mutex::MutexGuardArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned guard that releases the mutex when dropped.\n","sig":null,"attributes":[{"value":"/ An owned guard that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15489,"byte_end":15545,"line_start":409,"line_end":409,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16167,"byte_end":16173,"line_start":430,"line_end":430,"column_start":12,"column_end":18},"name":"source","qualname":"<MutexGuardArc<T>>::source","value":"pub fn source(&MutexGuardArc<T>) -> &Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the mutex a guard came from.","sig":null,"attributes":[{"value":"/ Returns a reference to the mutex a guard came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15757,"byte_end":15812,"line_start":416,"line_end":416,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15817,"byte_end":15820,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15825,"byte_end":15839,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15844,"byte_end":15847,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15852,"byte_end":15859,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15864,"byte_end":15908,"line_start":421,"line_end":421,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{Mutex, MutexGuardArc};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15913,"byte_end":15956,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15961,"byte_end":15984,"line_start":423,"line_end":423,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15989,"byte_end":15992,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(10i32));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15997,"byte_end":16041,"line_start":425,"line_end":425,"column_start":5,"column_end":49}},{"value":"/ let guard = mutex.lock_arc().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16046,"byte_end":16085,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/ dbg!(MutexGuardArc::source(&guard));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16090,"byte_end":16130,"line_start":427,"line_end":427,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16135,"byte_end":16143,"line_start":428,"line_end":428,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16148,"byte_end":16155,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18306,"byte_end":18312,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"decl_id":null,"docs":" An async reader-writer lock.","sig":null,"attributes":[{"value":"/ An async reader-writer lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17533,"byte_end":17565,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17566,"byte_end":17569,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows multiple readers or one writer at any point in time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17570,"byte_end":17651,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17652,"byte_end":17655,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The locking strategy is write-preferring, which means writers are never starved.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17656,"byte_end":17740,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ Releasing a write lock wakes the next blocked reader and the next blocked writer.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17741,"byte_end":17826,"line_start":20,"line_end":20,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17827,"byte_end":17830,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17831,"byte_end":17845,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17846,"byte_end":17849,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17850,"byte_end":17857,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17858,"byte_end":17902,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17903,"byte_end":17930,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17931,"byte_end":17934,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17935,"byte_end":17965,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17966,"byte_end":17969,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":17970,"byte_end":18019,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18020,"byte_end":18051,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18052,"byte_end":18083,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18084,"byte_end":18107,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18108,"byte_end":18131,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18132,"byte_end":18151,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18152,"byte_end":18155,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Only one write lock can be held at a time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18156,"byte_end":18205,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18206,"byte_end":18241,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18242,"byte_end":18254,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18255,"byte_end":18277,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18278,"byte_end":18286,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18287,"byte_end":18294,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19256,"byte_end":19259,"line_start":79,"line_end":79,"column_start":18,"column_end":21},"name":"new","qualname":"<RwLock<T>>::new","value":"pub const fn new(T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19067,"byte_end":19104,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19109,"byte_end":19112,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19117,"byte_end":19131,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19136,"byte_end":19139,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19144,"byte_end":19151,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19156,"byte_end":19183,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19188,"byte_end":19191,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19196,"byte_end":19226,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19231,"byte_end":19238,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19745,"byte_end":19755,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the lock and returns the inner value.","sig":null,"attributes":[{"value":"/ Unwraps the lock and returns the inner value.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19508,"byte_end":19557,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19562,"byte_end":19565,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19570,"byte_end":19584,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19589,"byte_end":19592,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19597,"byte_end":19604,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19609,"byte_end":19636,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19641,"byte_end":19644,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19649,"byte_end":19679,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lock.into_inner(), 5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19684,"byte_end":19721,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19726,"byte_end":19733,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20388,"byte_end":20396,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Option<RwLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19842,"byte_end":19878,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19883,"byte_end":19886,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19891,"byte_end":19985,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19990,"byte_end":20048,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20053,"byte_end":20056,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20061,"byte_end":20075,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20080,"byte_end":20083,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20088,"byte_end":20095,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20100,"byte_end":20144,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20149,"byte_end":20176,"line_start":114,"line_end":114,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20181,"byte_end":20184,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20189,"byte_end":20219,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20224,"byte_end":20227,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20232,"byte_end":20267,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20272,"byte_end":20299,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20304,"byte_end":20307,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20312,"byte_end":20351,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20356,"byte_end":20364,"line_start":122,"line_end":122,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":20369,"byte_end":20376,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21849,"byte_end":21853,"line_start":173,"line_end":173,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21269,"byte_end":21294,"line_start":152,"line_end":152,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21299,"byte_end":21302,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21307,"byte_end":21363,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21368,"byte_end":21371,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that attempts to acquire a read lock will block if there are also concurrent attempts","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21376,"byte_end":21470,"line_start":156,"line_end":156,"column_start":5,"column_end":99}},{"value":"/ to acquire a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21475,"byte_end":21503,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21508,"byte_end":21511,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21516,"byte_end":21530,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21535,"byte_end":21538,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21543,"byte_end":21550,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21555,"byte_end":21599,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21604,"byte_end":21631,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21636,"byte_end":21639,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21644,"byte_end":21674,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21679,"byte_end":21682,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21687,"byte_end":21722,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21727,"byte_end":21754,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21759,"byte_end":21762,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21767,"byte_end":21806,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21811,"byte_end":21819,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":21824,"byte_end":21831,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":24168,"byte_end":24187,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"try_upgradable_read","qualname":"<RwLock<T>>::try_upgradable_read","value":"pub fn try_upgradable_read(&Self) -> Option<RwLockUpgradableReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23268,"byte_end":23351,"line_start":212,"line_end":212,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23356,"byte_end":23359,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23364,"byte_end":23458,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23463,"byte_end":23521,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23526,"byte_end":23529,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Upgradable read lock reserves the right to be upgraded to a write lock, which means there","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23534,"byte_end":23627,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ can be at most one upgradable read lock at a time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23632,"byte_end":23686,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23691,"byte_end":23694,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23699,"byte_end":23713,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23718,"byte_end":23721,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23726,"byte_end":23733,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23738,"byte_end":23782,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23787,"byte_end":23843,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23848,"byte_end":23851,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23856,"byte_end":23886,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23891,"byte_end":23894,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23899,"byte_end":23945,"line_start":228,"line_end":228,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23950,"byte_end":23977,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(*lock.try_read().unwrap(), 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":23982,"byte_end":24027,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":24032,"byte_end":24035,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":24040,"byte_end":24110,"line_start":232,"line_end":232,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":24115,"byte_end":24131,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":24136,"byte_end":24144,"line_start":234,"line_end":234,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":24149,"byte_end":24156,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":26064,"byte_end":26079,"line_start":292,"line_end":292,"column_start":18,"column_end":33},"name":"upgradable_read","qualname":"<RwLock<T>>::upgradable_read","value":"pub async fn upgradable_read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock with the possiblity to upgrade to a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25080,"byte_end":25163,"line_start":266,"line_end":266,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25168,"byte_end":25171,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25176,"byte_end":25232,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25237,"byte_end":25240,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Upgradable read lock reserves the right to be upgraded to a write lock, which means there","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25245,"byte_end":25338,"line_start":270,"line_end":270,"column_start":5,"column_end":98}},{"value":"/ can be at most one upgradable read lock at a time.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25343,"byte_end":25397,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25402,"byte_end":25405,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Note that attempts to acquire an upgradable read lock will block if there are concurrent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25410,"byte_end":25502,"line_start":273,"line_end":273,"column_start":5,"column_end":97}},{"value":"/ attempts to acquire another upgradable read lock or a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25507,"byte_end":25576,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25581,"byte_end":25584,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25589,"byte_end":25603,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25608,"byte_end":25611,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25616,"byte_end":25623,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25628,"byte_end":25672,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25677,"byte_end":25733,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25738,"byte_end":25741,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25746,"byte_end":25776,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25781,"byte_end":25784,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25789,"byte_end":25835,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25840,"byte_end":25867,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(*lock.try_read().unwrap(), 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25872,"byte_end":25917,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25922,"byte_end":25925,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":25930,"byte_end":26000,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":26005,"byte_end":26021,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":26026,"byte_end":26034,"line_start":290,"line_end":290,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":26039,"byte_end":26046,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27505,"byte_end":27514,"line_start":340,"line_end":340,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Option<RwLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":26951,"byte_end":26988,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":26993,"byte_end":26996,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27001,"byte_end":27096,"line_start":324,"line_end":324,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27101,"byte_end":27159,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27164,"byte_end":27167,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27172,"byte_end":27186,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27191,"byte_end":27194,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27199,"byte_end":27206,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27211,"byte_end":27255,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27260,"byte_end":27287,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27292,"byte_end":27295,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27300,"byte_end":27330,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27335,"byte_end":27338,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27343,"byte_end":27383,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/ let reader = lock.read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27388,"byte_end":27423,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27428,"byte_end":27468,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27473,"byte_end":27481,"line_start":338,"line_end":338,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":27486,"byte_end":27493,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28442,"byte_end":28447,"line_start":375,"line_end":375,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28040,"byte_end":28066,"line_start":359,"line_end":359,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28071,"byte_end":28074,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28079,"byte_end":28135,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28140,"byte_end":28143,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28148,"byte_end":28162,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28167,"byte_end":28170,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28175,"byte_end":28182,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28187,"byte_end":28231,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28236,"byte_end":28263,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28268,"byte_end":28271,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28276,"byte_end":28306,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28311,"byte_end":28314,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let writer = lock.write().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28319,"byte_end":28355,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28360,"byte_end":28399,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28404,"byte_end":28412,"line_start":373,"line_end":373,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":28417,"byte_end":28424,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29832,"byte_end":29839,"line_start":418,"line_end":418,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29335,"byte_end":29386,"line_start":401,"line_end":401,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29391,"byte_end":29394,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place. The mutable borrow","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29399,"byte_end":29494,"line_start":403,"line_end":403,"column_start":5,"column_end":100}},{"value":"/ statically guarantees no locks exist.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29499,"byte_end":29540,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29545,"byte_end":29548,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29553,"byte_end":29567,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29572,"byte_end":29575,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29580,"byte_end":29587,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29592,"byte_end":29636,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"/ use async_lock::RwLock;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29641,"byte_end":29668,"line_start":410,"line_end":410,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29673,"byte_end":29676,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29681,"byte_end":29715,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29720,"byte_end":29723,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ *lock.get_mut() = 2;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29728,"byte_end":29752,"line_start":414,"line_end":414,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(*lock.read().await, 2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29757,"byte_end":29795,"line_start":415,"line_end":415,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29800,"byte_end":29808,"line_start":416,"line_end":416,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29813,"byte_end":29820,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":198},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30743,"byte_end":30758,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30678,"byte_end":30731,"line_start":451,"line_end":451,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31843,"byte_end":31868,"line_start":488,"line_end":488,"column_start":12,"column_end":37},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"RwLockUpgradableReadGuard {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" A guard that releases the upgradable read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the upgradable read lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31767,"byte_end":31831,"line_start":487,"line_end":487,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33053,"byte_end":33062,"line_start":527,"line_end":527,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockUpgradableReadGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into a regular reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into a regular reader guard.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32481,"byte_end":32524,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32529,"byte_end":32532,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32537,"byte_end":32551,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32556,"byte_end":32559,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32564,"byte_end":32571,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32576,"byte_end":32620,"line_start":512,"line_end":512,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32625,"byte_end":32681,"line_start":513,"line_end":513,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32686,"byte_end":32689,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32694,"byte_end":32724,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32729,"byte_end":32732,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32737,"byte_end":32783,"line_start":517,"line_end":517,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32788,"byte_end":32815,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32820,"byte_end":32823,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_upgradable_read().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32828,"byte_end":32878,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32883,"byte_end":32886,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockUpgradableReadGuard::downgrade(reader);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32891,"byte_end":32953,"line_start":522,"line_end":522,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32958,"byte_end":32961,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_upgradable_read().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32966,"byte_end":33016,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33021,"byte_end":33029,"line_start":525,"line_end":525,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33034,"byte_end":33041,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34015,"byte_end":34026,"line_start":556,"line_end":556,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<RwLockUpgradableReadGuard>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<RwLockWriteGuard, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade into a write lock.","sig":null,"attributes":[{"value":"/ Attempts to upgrade into a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33136,"byte_end":33178,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33183,"byte_end":33186,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33191,"byte_end":33284,"line_start":533,"line_end":533,"column_start":5,"column_end":98}},{"value":"/ an upgraded guard is returned that releases the write lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33289,"byte_end":33365,"line_start":534,"line_end":534,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33370,"byte_end":33373,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function can only fail if there are other active read locks.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33378,"byte_end":33447,"line_start":536,"line_end":536,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33452,"byte_end":33455,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33460,"byte_end":33474,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33479,"byte_end":33482,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33487,"byte_end":33494,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33499,"byte_end":33543,"line_start":541,"line_end":541,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33548,"byte_end":33604,"line_start":542,"line_end":542,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33609,"byte_end":33612,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33617,"byte_end":33647,"line_start":544,"line_end":544,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33652,"byte_end":33655,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33660,"byte_end":33706,"line_start":546,"line_end":546,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33711,"byte_end":33738,"line_start":547,"line_end":547,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33743,"byte_end":33746,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let reader2 = lock.read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33751,"byte_end":33787,"line_start":549,"line_end":549,"column_start":5,"column_end":41}},{"value":"/ let reader = RwLockUpgradableReadGuard::try_upgrade(reader).unwrap_err();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33792,"byte_end":33869,"line_start":550,"line_end":550,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33874,"byte_end":33877,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ drop(reader2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33882,"byte_end":33900,"line_start":552,"line_end":552,"column_start":5,"column_end":23}},{"value":"/ let writer = RwLockUpgradableReadGuard::try_upgrade(reader).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33905,"byte_end":33978,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33983,"byte_end":33991,"line_start":554,"line_end":554,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":33996,"byte_end":34003,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34899,"byte_end":34906,"line_start":588,"line_end":588,"column_start":18,"column_end":25},"name":"upgrade","qualname":"<RwLockUpgradableReadGuard>::upgrade","value":"pub async fn upgrade(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Upgrades into a write lock.","sig":null,"attributes":[{"value":"/ Upgrades into a write lock.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34430,"byte_end":34461,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34466,"byte_end":34469,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34474,"byte_end":34488,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34493,"byte_end":34496,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34501,"byte_end":34508,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34513,"byte_end":34557,"line_start":576,"line_end":576,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34562,"byte_end":34618,"line_start":577,"line_end":577,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34623,"byte_end":34626,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34631,"byte_end":34661,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34666,"byte_end":34669,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let reader = lock.upgradable_read().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34674,"byte_end":34720,"line_start":581,"line_end":581,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(*reader, 1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34725,"byte_end":34752,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34757,"byte_end":34760,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let mut writer = RwLockUpgradableReadGuard::upgrade(reader).await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34765,"byte_end":34835,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ *writer = 2;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34840,"byte_end":34856,"line_start":585,"line_end":585,"column_start":5,"column_end":21}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34861,"byte_end":34869,"line_start":586,"line_end":586,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":34874,"byte_end":34881,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":256},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36746,"byte_end":36762,"line_start":647,"line_end":647,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36680,"byte_end":36734,"line_start":646,"line_end":646,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37590,"byte_end":37599,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into a regular reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into a regular reader guard.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37042,"byte_end":37085,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37090,"byte_end":37093,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37098,"byte_end":37112,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37117,"byte_end":37120,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37125,"byte_end":37132,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37137,"byte_end":37181,"line_start":661,"line_end":661,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37186,"byte_end":37233,"line_start":662,"line_end":662,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37238,"byte_end":37241,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37246,"byte_end":37276,"line_start":664,"line_end":664,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37281,"byte_end":37284,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let mut writer = lock.write().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37289,"byte_end":37329,"line_start":666,"line_end":666,"column_start":5,"column_end":45}},{"value":"/ *writer += 1;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37334,"byte_end":37351,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37356,"byte_end":37359,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37364,"byte_end":37403,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37408,"byte_end":37411,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockWriteGuard::downgrade(writer);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37416,"byte_end":37469,"line_start":671,"line_end":671,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(*reader, 2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37474,"byte_end":37501,"line_start":672,"line_end":672,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37506,"byte_end":37509,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37514,"byte_end":37553,"line_start":674,"line_end":674,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37558,"byte_end":37566,"line_start":675,"line_end":675,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37571,"byte_end":37578,"line_start":676,"line_end":676,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38848,"byte_end":38871,"line_start":718,"line_end":718,"column_start":12,"column_end":35},"name":"downgrade_to_upgradable","qualname":"<RwLockWriteGuard>::downgrade_to_upgradable","value":"pub fn downgrade_to_upgradable(Self) -> RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Downgrades into an upgradable reader guard.","sig":null,"attributes":[{"value":"/ Downgrades into an upgradable reader guard.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38130,"byte_end":38177,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38182,"byte_end":38185,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38190,"byte_end":38204,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38209,"byte_end":38212,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38217,"byte_end":38224,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38229,"byte_end":38273,"line_start":699,"line_end":699,"column_start":5,"column_end":49}},{"value":"/ use async_lock::{RwLock, RwLockUpgradableReadGuard, RwLockWriteGuard};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38278,"byte_end":38352,"line_start":700,"line_end":700,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38357,"byte_end":38360,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38365,"byte_end":38395,"line_start":702,"line_end":702,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38400,"byte_end":38403,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let mut writer = lock.write().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38408,"byte_end":38448,"line_start":704,"line_end":704,"column_start":5,"column_end":45}},{"value":"/ *writer += 1;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38453,"byte_end":38470,"line_start":705,"line_end":705,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38475,"byte_end":38478,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38483,"byte_end":38522,"line_start":707,"line_end":707,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38527,"byte_end":38530,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let reader = RwLockWriteGuard::downgrade_to_upgradable(writer);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38535,"byte_end":38602,"line_start":709,"line_end":709,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(*reader, 2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38607,"byte_end":38634,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38639,"byte_end":38642,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38647,"byte_end":38687,"line_start":712,"line_end":712,"column_start":5,"column_end":45}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38692,"byte_end":38731,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38736,"byte_end":38739,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ assert!(RwLockUpgradableReadGuard::try_upgrade(reader).is_ok())","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38744,"byte_end":38811,"line_start":715,"line_end":715,"column_start":5,"column_end":72}},{"value":"/ # })","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38816,"byte_end":38824,"line_start":716,"line_end":716,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":38829,"byte_end":38836,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40282,"byte_end":40291,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" A counter for limiting the number of concurrent operations.\n","sig":null,"attributes":[{"value":"/ A counter for limiting the number of concurrent operations.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40190,"byte_end":40253,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40585,"byte_end":40588,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<Semaphore>::new","value":"pub const fn new(usize) -> Semaphore","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with a limit of `n` concurrent operations.","sig":null,"attributes":[{"value":"/ Creates a new semaphore with a limit of `n` concurrent operations.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40360,"byte_end":40430,"line_start":14,"line_end":14,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40435,"byte_end":40438,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40443,"byte_end":40457,"line_start":16,"line_end":16,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40462,"byte_end":40465,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40470,"byte_end":40477,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40482,"byte_end":40512,"line_start":19,"line_end":19,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40517,"byte_end":40520,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(5);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40525,"byte_end":40555,"line_start":21,"line_end":21,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40560,"byte_end":40567,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41311,"byte_end":41322,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Option<SemaphoreGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Attempts to get a permit for a concurrent operation.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40728,"byte_end":40784,"line_start":30,"line_end":30,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40789,"byte_end":40792,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ If the permit could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40797,"byte_end":40890,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40895,"byte_end":40954,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40959,"byte_end":40962,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40967,"byte_end":40981,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40986,"byte_end":40989,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40994,"byte_end":41001,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41006,"byte_end":41036,"line_start":38,"line_end":38,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41041,"byte_end":41044,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41049,"byte_end":41079,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41084,"byte_end":41087,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let g1 = s.try_acquire().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41092,"byte_end":41130,"line_start":42,"line_end":42,"column_start":5,"column_end":43}},{"value":"/ let g2 = s.try_acquire().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41135,"byte_end":41173,"line_start":43,"line_end":43,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41178,"byte_end":41181,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert!(s.try_acquire().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41186,"byte_end":41225,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ drop(g2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41230,"byte_end":41243,"line_start":46,"line_end":46,"column_start":5,"column_end":18}},{"value":"/ assert!(s.try_acquire().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41248,"byte_end":41287,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41292,"byte_end":41299,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42206,"byte_end":42213,"line_start":82,"line_end":82,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Waits for a permit for a concurrent operation.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41828,"byte_end":41878,"line_start":68,"line_end":68,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41883,"byte_end":41886,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the permit when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41891,"byte_end":41949,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41954,"byte_end":41957,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41962,"byte_end":41976,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41981,"byte_end":41984,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":41989,"byte_end":41996,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42001,"byte_end":42045,"line_start":75,"line_end":75,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42050,"byte_end":42080,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42085,"byte_end":42088,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let s = Semaphore::new(2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42093,"byte_end":42123,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ let guard = s.acquire().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42128,"byte_end":42162,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42167,"byte_end":42176,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42181,"byte_end":42188,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43232,"byte_end":43247,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"try_acquire_arc","qualname":"<Semaphore>::try_acquire_arc","value":"pub fn try_acquire_arc(&Arc<Self>) -> Option<SemaphoreGuardArc>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get an owned permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Attempts to get an owned permit for a concurrent operation.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42581,"byte_end":42644,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42649,"byte_end":42652,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the permit could not be acquired at this time, then [`None`] is returned. Otherwise, an","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42657,"byte_end":42751,"line_start":101,"line_end":101,"column_start":5,"column_end":99}},{"value":"/ owned guard is returned that releases the mutex when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42756,"byte_end":42821,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42826,"byte_end":42829,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42834,"byte_end":42848,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42853,"byte_end":42856,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42861,"byte_end":42868,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42873,"byte_end":42903,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42908,"byte_end":42931,"line_start":108,"line_end":108,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42936,"byte_end":42939,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let s = Arc::new(Semaphore::new(2));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42944,"byte_end":42984,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42989,"byte_end":42992,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let g1 = s.try_acquire_arc().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42997,"byte_end":43039,"line_start":112,"line_end":112,"column_start":5,"column_end":47}},{"value":"/ let g2 = s.try_acquire_arc().unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43044,"byte_end":43086,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43091,"byte_end":43094,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert!(s.try_acquire_arc().is_none());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43099,"byte_end":43142,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ drop(g2);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43147,"byte_end":43160,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ assert!(s.try_acquire_arc().is_some());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43165,"byte_end":43208,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43213,"byte_end":43220,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44201,"byte_end":44212,"line_start":153,"line_end":153,"column_start":18,"column_end":29},"name":"acquire_arc","qualname":"<Semaphore>::acquire_arc","value":"pub async fn acquire_arc<'_>(&'_ Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for an owned permit for a concurrent operation.","sig":null,"attributes":[{"value":"/ Waits for an owned permit for a concurrent operation.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43774,"byte_end":43831,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43836,"byte_end":43839,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the permit when dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43844,"byte_end":43902,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43907,"byte_end":43910,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43915,"byte_end":43929,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43934,"byte_end":43937,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43942,"byte_end":43949,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":43954,"byte_end":43998,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/ use async_lock::Semaphore;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44003,"byte_end":44033,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44038,"byte_end":44061,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44066,"byte_end":44069,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let s = Arc::new(Semaphore::new(2));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44074,"byte_end":44114,"line_start":149,"line_end":149,"column_start":5,"column_end":45}},{"value":"/ let guard = s.acquire_arc().await;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44119,"byte_end":44157,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44162,"byte_end":44171,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44176,"byte_end":44183,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44648,"byte_end":44662,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"SemaphoreGuard","qualname":"::semaphore::SemaphoreGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the acquired permit.\n","sig":null,"attributes":[{"value":"/ A guard that releases the acquired permit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44573,"byte_end":44619,"line_start":169,"line_end":169,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44920,"byte_end":44937,"line_start":182,"line_end":182,"column_start":12,"column_end":29},"name":"SemaphoreGuardArc","qualname":"::semaphore::SemaphoreGuardArc","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned guard that releases the acquired permit.\n","sig":null,"attributes":[{"value":"/ An owned guard that releases the acquired permit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44838,"byte_end":44891,"line_start":180,"line_end":180,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1046,"byte_end":1053,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3825,"byte_end":3842,"line_start":114,"line_end":114,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5660,"byte_end":5665,"line_start":51,"line_end":51,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5711,"byte_end":5716,"line_start":52,"line_end":52,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5732,"byte_end":5737,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6433,"byte_end":6438,"line_start":87,"line_end":87,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11626,"byte_end":11631,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13216,"byte_end":13221,"line_start":322,"line_end":322,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13341,"byte_end":13347,"line_start":325,"line_end":325,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13719,"byte_end":13724,"line_start":338,"line_end":338,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13835,"byte_end":13840,"line_start":344,"line_end":344,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14067,"byte_end":14077,"line_start":353,"line_end":353,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14127,"byte_end":14137,"line_start":354,"line_end":354,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14169,"byte_end":14179,"line_start":356,"line_end":356,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14657,"byte_end":14667,"line_start":375,"line_end":375,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14912,"byte_end":14922,"line_start":383,"line_end":383,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15088,"byte_end":15098,"line_start":389,"line_end":389,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15230,"byte_end":15240,"line_start":395,"line_end":395,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15377,"byte_end":15387,"line_start":403,"line_end":403,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15638,"byte_end":15651,"line_start":412,"line_end":412,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15697,"byte_end":15710,"line_start":413,"line_end":413,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15734,"byte_end":15747,"line_start":415,"line_end":415,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16271,"byte_end":16284,"line_start":435,"line_end":435,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16525,"byte_end":16538,"line_start":443,"line_end":443,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16700,"byte_end":16713,"line_start":449,"line_end":449,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16841,"byte_end":16854,"line_start":455,"line_end":455,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16987,"byte_end":17000,"line_start":463,"line_end":463,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":17188,"byte_end":17198,"line_start":472,"line_end":472,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18970,"byte_end":18976,"line_start":66,"line_end":66,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19029,"byte_end":19035,"line_start":67,"line_end":67,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19051,"byte_end":19057,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19826,"byte_end":19832,"line_start":104,"line_end":104,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29958,"byte_end":29964,"line_start":423,"line_end":423,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30084,"byte_end":30090,"line_start":426,"line_end":426,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30466,"byte_end":30472,"line_start":439,"line_end":439,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30585,"byte_end":30591,"line_start":445,"line_end":445,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30830,"byte_end":30845,"line_start":454,"line_end":454,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30895,"byte_end":30910,"line_start":455,"line_end":455,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30947,"byte_end":30962,"line_start":457,"line_end":457,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31315,"byte_end":31330,"line_start":467,"line_end":467,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31496,"byte_end":31511,"line_start":473,"line_end":473,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31643,"byte_end":31658,"line_start":479,"line_end":479,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32005,"byte_end":32030,"line_start":493,"line_end":493,"column_start":47,"column_end":72},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32080,"byte_end":32105,"line_start":494,"line_end":494,"column_start":40,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32137,"byte_end":32162,"line_start":496,"line_end":496,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":35868,"byte_end":35893,"line_start":615,"line_end":615,"column_start":45,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36059,"byte_end":36084,"line_start":621,"line_end":621,"column_start":49,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36216,"byte_end":36241,"line_start":627,"line_end":627,"column_start":27,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36443,"byte_end":36464,"line_start":637,"line_end":637,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36898,"byte_end":36914,"line_start":652,"line_end":652,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36964,"byte_end":36980,"line_start":653,"line_end":653,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37012,"byte_end":37028,"line_start":655,"line_end":655,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39476,"byte_end":39492,"line_start":736,"line_end":736,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39658,"byte_end":39674,"line_start":742,"line_end":742,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39806,"byte_end":39822,"line_start":748,"line_end":748,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39967,"byte_end":39983,"line_start":756,"line_end":756,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40344,"byte_end":40353,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42565,"byte_end":42574,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44698,"byte_end":44712,"line_start":173,"line_end":173,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44970,"byte_end":44987,"line_start":184,"line_end":184,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":1046,"byte_end":1053,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/barrier.rs","byte_start":3825,"byte_end":3842,"line_start":114,"line_end":114,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5660,"byte_end":5665,"line_start":51,"line_end":51,"column_start":40,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5711,"byte_end":5716,"line_start":52,"line_end":52,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":5732,"byte_end":5737,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":6433,"byte_end":6438,"line_start":87,"line_end":87,"column_start":17,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":11626,"byte_end":11631,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13216,"byte_end":13221,"line_start":322,"line_end":322,"column_start":45,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13341,"byte_end":13347,"line_start":325,"line_end":325,"column_start":29,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13719,"byte_end":13724,"line_start":338,"line_end":338,"column_start":21,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":13835,"byte_end":13840,"line_start":344,"line_end":344,"column_start":39,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14067,"byte_end":14077,"line_start":353,"line_end":353,"column_start":40,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14127,"byte_end":14137,"line_start":354,"line_end":354,"column_start":40,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14169,"byte_end":14179,"line_start":356,"line_end":356,"column_start":21,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":75},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14657,"byte_end":14667,"line_start":375,"line_end":375,"column_start":26,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":14912,"byte_end":14922,"line_start":383,"line_end":383,"column_start":45,"column_end":55},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15088,"byte_end":15098,"line_start":389,"line_end":389,"column_start":49,"column_end":59},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15230,"byte_end":15240,"line_start":395,"line_end":395,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15377,"byte_end":15387,"line_start":403,"line_end":403,"column_start":30,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15638,"byte_end":15651,"line_start":412,"line_end":412,"column_start":40,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15697,"byte_end":15710,"line_start":413,"line_end":413,"column_start":40,"column_end":53},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":15734,"byte_end":15747,"line_start":415,"line_end":415,"column_start":17,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16271,"byte_end":16284,"line_start":435,"line_end":435,"column_start":26,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16525,"byte_end":16538,"line_start":443,"line_end":443,"column_start":45,"column_end":58},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16700,"byte_end":16713,"line_start":449,"line_end":449,"column_start":49,"column_end":62},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16841,"byte_end":16854,"line_start":455,"line_end":455,"column_start":27,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":16987,"byte_end":17000,"line_start":463,"line_end":463,"column_start":30,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/mutex.rs","byte_start":17188,"byte_end":17198,"line_start":472,"line_end":472,"column_start":24,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":18970,"byte_end":18976,"line_start":66,"line_end":66,"column_start":40,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19029,"byte_end":19035,"line_start":67,"line_end":67,"column_start":47,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19051,"byte_end":19057,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":19826,"byte_end":19832,"line_start":104,"line_end":104,"column_start":17,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":29958,"byte_end":29964,"line_start":423,"line_end":423,"column_start":45,"column_end":51},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30084,"byte_end":30090,"line_start":426,"line_end":426,"column_start":29,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":188},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30466,"byte_end":30472,"line_start":439,"line_end":439,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30585,"byte_end":30591,"line_start":445,"line_end":445,"column_start":39,"column_end":45},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30830,"byte_end":30845,"line_start":454,"line_end":454,"column_start":40,"column_end":55},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30895,"byte_end":30910,"line_start":455,"line_end":455,"column_start":40,"column_end":55},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":30947,"byte_end":30962,"line_start":457,"line_end":457,"column_start":26,"column_end":41},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31315,"byte_end":31330,"line_start":467,"line_end":467,"column_start":45,"column_end":60},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31496,"byte_end":31511,"line_start":473,"line_end":473,"column_start":49,"column_end":64},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":31643,"byte_end":31658,"line_start":479,"line_end":479,"column_start":27,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32005,"byte_end":32030,"line_start":493,"line_end":493,"column_start":47,"column_end":72},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32080,"byte_end":32105,"line_start":494,"line_end":494,"column_start":40,"column_end":65},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":32137,"byte_end":32162,"line_start":496,"line_end":496,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":35868,"byte_end":35893,"line_start":615,"line_end":615,"column_start":45,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36059,"byte_end":36084,"line_start":621,"line_end":621,"column_start":49,"column_end":74},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36216,"byte_end":36241,"line_start":627,"line_end":627,"column_start":27,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36443,"byte_end":36464,"line_start":637,"line_end":637,"column_start":26,"column_end":47},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":248},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36898,"byte_end":36914,"line_start":652,"line_end":652,"column_start":40,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":36964,"byte_end":36980,"line_start":653,"line_end":653,"column_start":40,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":37012,"byte_end":37028,"line_start":655,"line_end":655,"column_start":21,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39476,"byte_end":39492,"line_start":736,"line_end":736,"column_start":45,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39658,"byte_end":39674,"line_start":742,"line_end":742,"column_start":49,"column_end":65},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39806,"byte_end":39822,"line_start":748,"line_end":748,"column_start":27,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/rwlock.rs","byte_start":39967,"byte_end":39983,"line_start":756,"line_end":756,"column_start":30,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":40344,"byte_end":40353,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":42565,"byte_end":42574,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44698,"byte_end":44712,"line_start":173,"line_end":173,"column_start":15,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-lock-2.4.0/src/semaphore.rs","byte_start":44970,"byte_end":44987,"line_start":184,"line_end":184,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":2257}}]}