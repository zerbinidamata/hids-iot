{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0","program":"/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_net","--edition=2018","/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8144c6ee4f905136","-C","extra-filename=-8144c6ee4f905136","--out-dir","/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","-L","dependency=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","--extern","async_io=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libasync_io-e4bd184615bbff99.rmeta","--extern","blocking=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libblocking-890ee0d564b9c376.rmeta","--extern","fastrand=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libfastrand-673b75d09289217d.rmeta","--extern","futures_lite=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libfutures_lite-67e243f880328f2d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu"],"output":"/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libasync_net-8144c6ee4f905136.rmeta"},"prelude":{"crate_id":{"name":"async_net","disambiguator":[7651311882330951428,3090714804919366298]},"crate_root":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src","external_crates":[{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-lite-1.11.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":18,"id":{"name":"async_io","disambiguator":[13063298341276347554,1022904432523041848]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":19,"id":{"name":"futures_lite","disambiguator":[236732238567356365,12995901554002859926]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[8752250229915605731,5032511442079182267]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":21,"id":{"name":"parking","disambiguator":[1999498884191094626,9252083634413959091]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":22,"id":{"name":"waker_fn","disambiguator":[6477177352258648891,1408471870261056396]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":23,"id":{"name":"futures_core","disambiguator":[17387797789998290180,8957684133523654957]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":24,"id":{"name":"futures_io","disambiguator":[6824782900905729461,4638695658688622893]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":25,"id":{"name":"fastrand","disambiguator":[2557478997660195169,13453224216195452879]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":26,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":27,"id":{"name":"socket2","disambiguator":[5087978609298347259,9376823878177385951]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":28,"id":{"name":"libc","disambiguator":[18230274762250471530,14699791712207546824]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":29,"id":{"name":"once_cell","disambiguator":[11003055472096597441,2972392352729570343]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":30,"id":{"name":"parking_lot","disambiguator":[7756849129997653621,6606148246404574312]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":31,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":32,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":33,"id":{"name":"lock_api","disambiguator":[11531994514184985486,16527705314438861460]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":34,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":35,"id":{"name":"parking_lot_core","disambiguator":[9873190055940866410,7329379312384477631]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":36,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":37,"id":{"name":"concurrent_queue","disambiguator":[18213822786008996053,10867190005056278931]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":38,"id":{"name":"cache_padded","disambiguator":[18353092046062123632,1298457636792068056]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":39,"id":{"name":"polling","disambiguator":[17806240617201778155,7470152498904838731]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":40,"id":{"name":"log","disambiguator":[11013293275619222107,10669941403084918630]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","num":41,"id":{"name":"vec_arena","disambiguator":[5920446079712745720,7686973874760916517]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","num":42,"id":{"name":"blocking","disambiguator":[2676047812127011009,10684095428201536715]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","num":43,"id":{"name":"async_channel","disambiguator":[4588961325660855147,14306377785781028844]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","num":44,"id":{"name":"event_listener","disambiguator":[1329321184522063609,6930102895973449987]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","num":45,"id":{"name":"async_task","disambiguator":[1666060535690288555,1561392910602399679]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","num":46,"id":{"name":"atomic_waker","disambiguator":[4500734903781178819,12137793048633055083]}}],"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":0,"byte_end":1655,"line_start":1,"line_end":65,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":10115},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2165,"byte_end":2175,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":966,"byte_end":984,"line_start":40,"line_end":40,"column_start":15,"column_end":33},"alias_span":null,"name":"AsyncToSocketAddrs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1000,"byte_end":1008,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1010,"byte_end":1021,"line_start":41,"line_end":41,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1023,"byte_end":1032,"line_start":41,"line_end":41,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1048,"byte_end":1057,"line_start":42,"line_end":42,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7224},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1111,"byte_end":1117,"line_start":47,"line_end":47,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7252},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1119,"byte_end":1127,"line_start":47,"line_end":47,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7255},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1129,"byte_end":1137,"line_start":47,"line_end":47,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7315},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1139,"byte_end":1147,"line_start":47,"line_end":47,"column_start":48,"column_end":56},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7190},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1149,"byte_end":1159,"line_start":47,"line_end":47,"column_start":58,"column_end":68},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7218},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1161,"byte_end":1173,"line_start":47,"line_end":47,"column_start":70,"column_end":82},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7221},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1175,"byte_end":1187,"line_start":47,"line_end":47,"column_start":84,"column_end":96},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7295},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1227,"byte_end":1241,"line_start":50,"line_end":50,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":0,"byte_end":1655,"line_start":1,"line_end":65,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":127},{"krate":0,"index":221},{"krate":0,"index":325},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" Async networking primitives for TCP/UDP/Unix communication.","sig":null,"attributes":[{"value":"/ Async networking primitives for TCP/UDP/Unix communication.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":64,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is an async version of [`std::net`] and [`std::os::unix::net`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":68,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":147,"byte_end":150,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":151,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":172,"byte_end":175,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate uses [`async-io`] for async I/O and [`blocking`] for DNS lookups.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":176,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":257,"byte_end":260,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`async-io`]: https://docs.rs/async-io","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":261,"byte_end":303,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`blocking`]: https://docs.rs/blocking","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":304,"byte_end":346,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":347,"byte_end":350,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":351,"byte_end":365,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":366,"byte_end":369,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A simple UDP server that echoes messages back to the sender:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":370,"byte_end":434,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":435,"byte_end":438,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":439,"byte_end":452,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":453,"byte_end":482,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":483,"byte_end":486,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":487,"byte_end":531,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":532,"byte_end":590,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":591,"byte_end":625,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":626,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":630,"byte_end":640,"line_start":23,"line_end":23,"column_start":1,"column_end":11}},{"value":"/     let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":641,"byte_end":699,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":700,"byte_end":748,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":749,"byte_end":754,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":755,"byte_end":788,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":789,"byte_end":796,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":798,"byte_end":821,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":822,"byte_end":893,"line_start":31,"line_end":31,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::unix","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":414},{"krate":0,"index":418},{"krate":0,"index":416},{"krate":0,"index":28},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":420},{"krate":0,"index":424},{"krate":0,"index":422},{"krate":0,"index":94},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":125}],"decl_id":null,"docs":" Unix domain sockets.","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":895,"byte_end":907,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/ Unix domain sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":1657,"byte_end":1681,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":1682,"byte_end":1685,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::os::unix::net`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":1686,"byte_end":1748,"line_start":3,"line_end":3,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3224,"byte_end":3236,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::unix::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":415}],"decl_id":null,"docs":" A Unix server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix server, listening for connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2239,"byte_end":2284,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2285,"byte_end":2288,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ After creating a [`UnixListener`] by [`bind`][`UnixListener::bind()`]ing it to an address, it","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2289,"byte_end":2386,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ listens for incoming connections. These can be accepted by calling","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2387,"byte_end":2457,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`accept()`][`UnixListener::accept()`] or by awaiting items from the async stream of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2458,"byte_end":2546,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ [`incoming`][`UnixListener::incoming()`] connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2547,"byte_end":2604,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2605,"byte_end":2608,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`UnixListener`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2609,"byte_end":2708,"line_start":32,"line_end":32,"column_start":1,"column_end":100}},{"value":"/ when all handles to it are dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2709,"byte_end":2748,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2749,"byte_end":2752,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2753,"byte_end":2767,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2768,"byte_end":2771,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2772,"byte_end":2785,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use async_net::unix::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2786,"byte_end":2824,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2825,"byte_end":2858,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2859,"byte_end":2862,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2863,"byte_end":2907,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2908,"byte_end":2962,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":2963,"byte_end":3006,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3007,"byte_end":3010,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3011,"byte_end":3063,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3064,"byte_end":3097,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3098,"byte_end":3140,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3141,"byte_end":3146,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3147,"byte_end":3180,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3181,"byte_end":3188,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4022,"byte_end":4026,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`UnixListener`] bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a new [`UnixListener`] bound to the given path.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3443,"byte_end":3502,"line_start":61,"line_end":61,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3507,"byte_end":3510,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3515,"byte_end":3529,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3534,"byte_end":3537,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3542,"byte_end":3555,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3560,"byte_end":3598,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3603,"byte_end":3636,"line_start":67,"line_end":67,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3641,"byte_end":3644,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3649,"byte_end":3693,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3698,"byte_end":3752,"line_start":70,"line_end":70,"column_start":5,"column_end":59}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3757,"byte_end":3800,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3805,"byte_end":3808,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3813,"byte_end":3865,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3870,"byte_end":3903,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3908,"byte_end":3950,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3955,"byte_end":3960,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3965,"byte_end":3998,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4003,"byte_end":4010,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4668,"byte_end":4674,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4222,"byte_end":4260,"line_start":84,"line_end":84,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4265,"byte_end":4268,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Returns a TCP stream and the address it is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4273,"byte_end":4333,"line_start":86,"line_end":86,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4338,"byte_end":4341,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4346,"byte_end":4360,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4365,"byte_end":4368,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4373,"byte_end":4386,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4391,"byte_end":4429,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4434,"byte_end":4437,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4442,"byte_end":4486,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4491,"byte_end":4545,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4550,"byte_end":4600,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4605,"byte_end":4638,"line_start":96,"line_end":96,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4643,"byte_end":4650,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5648,"byte_end":5656,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4846,"byte_end":4891,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4896,"byte_end":4899,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept()`][`UnixListener::accept()`]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":4904,"byte_end":4998,"line_start":105,"line_end":105,"column_start":5,"column_end":99}},{"value":"/ in a loop. The stream of connections is infinite, i.e awaiting the next connection will","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5003,"byte_end":5094,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ never result in [`None`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5099,"byte_end":5128,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5133,"byte_end":5136,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5141,"byte_end":5155,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5160,"byte_end":5163,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5168,"byte_end":5181,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5186,"byte_end":5224,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5229,"byte_end":5262,"line_start":113,"line_end":113,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5267,"byte_end":5270,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5275,"byte_end":5319,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5324,"byte_end":5378,"line_start":116,"line_end":116,"column_start":5,"column_end":59}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5383,"byte_end":5426,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5431,"byte_end":5434,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5439,"byte_end":5491,"line_start":119,"line_end":119,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5496,"byte_end":5529,"line_start":120,"line_end":120,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5534,"byte_end":5576,"line_start":121,"line_end":121,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5581,"byte_end":5586,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5591,"byte_end":5624,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5629,"byte_end":5636,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6173,"byte_end":6183,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this listener is bound to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5776,"byte_end":5832,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5837,"byte_end":5840,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5845,"byte_end":5859,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5864,"byte_end":5867,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5872,"byte_end":5885,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5890,"byte_end":5928,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5933,"byte_end":5936,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5941,"byte_end":5985,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":5990,"byte_end":6044,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/ println!(\"Local address is {:?}\", listener.local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6049,"byte_end":6111,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6116,"byte_end":6149,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6154,"byte_end":6161,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7376,"byte_end":7384,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::unix::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" A stream of incoming Unix connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7163,"byte_end":7205,"line_start":183,"line_end":183,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7206,"byte_end":7209,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7210,"byte_end":7308,"line_start":185,"line_end":185,"column_start":1,"column_end":99}},{"value":"/ created by the [`UnixListener::incoming()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7309,"byte_end":7364,"line_start":186,"line_end":186,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":56},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9299,"byte_end":9309,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::unix::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A Unix connection.","sig":null,"attributes":[{"value":"/ A Unix connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8310,"byte_end":8332,"line_start":220,"line_end":220,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8333,"byte_end":8336,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ A [`UnixStream`] can be created by [`connect`][`UnixStream::connect()`]ing to an endpoint or by","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8337,"byte_end":8436,"line_start":222,"line_end":222,"column_start":1,"column_end":100}},{"value":"/ [`accept`][`UnixListener::accept()`]ing an incoming connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8437,"byte_end":8504,"line_start":223,"line_end":223,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8505,"byte_end":8508,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`] is a bidirectional stream that implements traits [`AsyncRead`] and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8509,"byte_end":8594,"line_start":225,"line_end":225,"column_start":1,"column_end":86}},{"value":"/ [`AsyncWrite`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8595,"byte_end":8614,"line_start":226,"line_end":226,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8615,"byte_end":8618,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`UnixStream`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8619,"byte_end":8716,"line_start":228,"line_end":228,"column_start":1,"column_end":98}},{"value":"/ when all handles to it are dropped. The reading and writing portions of the connection can also","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8717,"byte_end":8816,"line_start":229,"line_end":229,"column_start":1,"column_end":100}},{"value":"/ be shut down individually with the [`shutdown()`][`UnixStream::shutdown()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8817,"byte_end":8904,"line_start":230,"line_end":230,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8905,"byte_end":8908,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8909,"byte_end":8923,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8924,"byte_end":8927,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8928,"byte_end":8941,"line_start":234,"line_end":234,"column_start":1,"column_end":14}},{"value":"/ use async_net::unix::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8942,"byte_end":8978,"line_start":235,"line_end":235,"column_start":1,"column_end":37}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8979,"byte_end":9012,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9013,"byte_end":9016,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9017,"byte_end":9061,"line_start":238,"line_end":238,"column_start":1,"column_end":45}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9062,"byte_end":9125,"line_start":239,"line_end":239,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9126,"byte_end":9164,"line_start":240,"line_end":240,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9165,"byte_end":9168,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9169,"byte_end":9203,"line_start":242,"line_end":242,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9204,"byte_end":9245,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9246,"byte_end":9279,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9280,"byte_end":9287,"line_start":245,"line_end":245,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10148,"byte_end":10155,"line_start":275,"line_end":275,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix connection to given path.","sig":null,"attributes":[{"value":"/ Creates a Unix connection to given path.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9821,"byte_end":9865,"line_start":264,"line_end":264,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9870,"byte_end":9873,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9878,"byte_end":9892,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9897,"byte_end":9900,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9905,"byte_end":9918,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9923,"byte_end":9959,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9964,"byte_end":9967,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9972,"byte_end":10016,"line_start":271,"line_end":271,"column_start":5,"column_end":49}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10021,"byte_end":10080,"line_start":272,"line_end":272,"column_start":5,"column_end":64}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10085,"byte_end":10118,"line_start":273,"line_end":273,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10123,"byte_end":10130,"line_start":274,"line_end":274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10662,"byte_end":10666,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a pair of connected Unix sockets.","sig":null,"attributes":[{"value":"/ Creates a pair of connected Unix sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10350,"byte_end":10395,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10400,"byte_end":10403,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10408,"byte_end":10422,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10427,"byte_end":10430,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10435,"byte_end":10448,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10453,"byte_end":10489,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10494,"byte_end":10497,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10502,"byte_end":10546,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ let (stream1, stream2) = UnixStream::pair()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10551,"byte_end":10600,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10605,"byte_end":10638,"line_start":289,"line_end":289,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10643,"byte_end":10650,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11266,"byte_end":11276,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this socket is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address this socket is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10866,"byte_end":10924,"line_start":296,"line_end":296,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10929,"byte_end":10932,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10937,"byte_end":10951,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10956,"byte_end":10959,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10964,"byte_end":10977,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":10982,"byte_end":11018,"line_start":301,"line_end":301,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11023,"byte_end":11026,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11031,"byte_end":11075,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11080,"byte_end":11139,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/ println!(\"Local address is {:?}\", stream.local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11144,"byte_end":11204,"line_start":305,"line_end":305,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11209,"byte_end":11242,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11247,"byte_end":11254,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11761,"byte_end":11770,"line_start":324,"line_end":324,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address this socket is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address this socket is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11365,"byte_end":11424,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11429,"byte_end":11432,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11437,"byte_end":11451,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11456,"byte_end":11459,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11464,"byte_end":11477,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11482,"byte_end":11518,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11523,"byte_end":11526,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11531,"byte_end":11575,"line_start":319,"line_end":319,"column_start":5,"column_end":49}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11580,"byte_end":11639,"line_start":320,"line_end":320,"column_start":5,"column_end":64}},{"value":"/ println!(\"Connected to {:?}\", stream.peer_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11644,"byte_end":11699,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11704,"byte_end":11737,"line_start":322,"line_end":322,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11742,"byte_end":11749,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12425,"byte_end":12433,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read half, write half, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read half, write half, or both halves of this connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11858,"byte_end":11934,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11939,"byte_end":11942,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O in the given directions to return","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":11947,"byte_end":12034,"line_start":330,"line_end":330,"column_start":5,"column_end":92}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12039,"byte_end":12121,"line_start":331,"line_end":331,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12126,"byte_end":12129,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12134,"byte_end":12147,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/ use async_net::{Shutdown, unix::UnixStream};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12152,"byte_end":12200,"line_start":334,"line_end":334,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12205,"byte_end":12208,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12213,"byte_end":12257,"line_start":336,"line_end":336,"column_start":5,"column_end":49}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12262,"byte_end":12321,"line_start":337,"line_end":337,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12326,"byte_end":12363,"line_start":338,"line_end":338,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12368,"byte_end":12401,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12406,"byte_end":12413,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17695,"byte_end":17707,"line_start":512,"line_end":512,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::unix::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":421}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":16719,"byte_end":16746,"line_start":486,"line_end":486,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":16747,"byte_end":16750,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ After creating a [`UnixDatagram`] by [`bind`][`UnixDatagram::bind()`]ing it to a path, data can","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":16751,"byte_end":16850,"line_start":488,"line_end":488,"column_start":1,"column_end":100}},{"value":"/ be [sent to] and [received from] any other socket address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":16851,"byte_end":16913,"line_start":489,"line_end":489,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":16914,"byte_end":16917,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`UnixDatagram`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":16918,"byte_end":17017,"line_start":491,"line_end":491,"column_start":1,"column_end":100}},{"value":"/ when all handles to it are dropped. The reading and writing portions of the socket can also be","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17018,"byte_end":17116,"line_start":492,"line_end":492,"column_start":1,"column_end":99}},{"value":"/ shut down individually with the [`shutdown()`][`UnixStream::shutdown()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17117,"byte_end":17201,"line_start":493,"line_end":493,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17202,"byte_end":17205,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ [received from]: UnixDatagram::recv_from()","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17206,"byte_end":17252,"line_start":495,"line_end":495,"column_start":1,"column_end":47}},{"value":"/ [sent to]: UnixDatagram::send_to()","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17253,"byte_end":17291,"line_start":496,"line_end":496,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17292,"byte_end":17295,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17296,"byte_end":17310,"line_start":498,"line_end":498,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17311,"byte_end":17314,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17315,"byte_end":17328,"line_start":500,"line_end":500,"column_start":1,"column_end":14}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17329,"byte_end":17367,"line_start":501,"line_end":501,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17368,"byte_end":17371,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17372,"byte_end":17416,"line_start":503,"line_end":503,"column_start":1,"column_end":45}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17417,"byte_end":17470,"line_start":504,"line_end":504,"column_start":1,"column_end":54}},{"value":"/ socket.send_to(b\"hello\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17471,"byte_end":17523,"line_start":505,"line_end":505,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17524,"byte_end":17527,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17528,"byte_end":17562,"line_start":507,"line_end":507,"column_start":1,"column_end":35}},{"value":"/ let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17563,"byte_end":17617,"line_start":508,"line_end":508,"column_start":1,"column_end":55}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17618,"byte_end":17651,"line_start":509,"line_end":509,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17652,"byte_end":17659,"line_start":510,"line_end":510,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18248,"byte_end":18252,"line_start":532,"line_end":532,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`UnixDatagram`] bound to the given address.","sig":null,"attributes":[{"value":"/ Creates a new [`UnixDatagram`] bound to the given address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17914,"byte_end":17976,"line_start":521,"line_end":521,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17981,"byte_end":17984,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17989,"byte_end":18003,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18008,"byte_end":18011,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18016,"byte_end":18029,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18034,"byte_end":18072,"line_start":526,"line_end":526,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18077,"byte_end":18080,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18085,"byte_end":18129,"line_start":528,"line_end":528,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18134,"byte_end":18186,"line_start":529,"line_end":529,"column_start":5,"column_end":57}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18191,"byte_end":18224,"line_start":530,"line_end":530,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18229,"byte_end":18236,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18766,"byte_end":18773,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket not bound to any address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18444,"byte_end":18504,"line_start":537,"line_end":537,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18509,"byte_end":18512,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18517,"byte_end":18531,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18536,"byte_end":18539,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18544,"byte_end":18557,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18562,"byte_end":18600,"line_start":542,"line_end":542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18605,"byte_end":18608,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18613,"byte_end":18657,"line_start":544,"line_end":544,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18662,"byte_end":18704,"line_start":545,"line_end":545,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18709,"byte_end":18742,"line_start":546,"line_end":546,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18747,"byte_end":18754,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19266,"byte_end":19270,"line_start":564,"line_end":564,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a pair of connected Unix datagram sockets.","sig":null,"attributes":[{"value":"/ Creates a pair of connected Unix datagram sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":18941,"byte_end":18995,"line_start":553,"line_end":553,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19000,"byte_end":19003,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19008,"byte_end":19022,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19027,"byte_end":19030,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19035,"byte_end":19048,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19053,"byte_end":19091,"line_start":558,"line_end":558,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19096,"byte_end":19099,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19104,"byte_end":19148,"line_start":560,"line_end":560,"column_start":5,"column_end":49}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19153,"byte_end":19204,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19209,"byte_end":19242,"line_start":562,"line_end":562,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19247,"byte_end":19254,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20234,"byte_end":20241,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the Unix datagram socket to the given address.","sig":null,"attributes":[{"value":"/ Connects the Unix datagram socket to the given address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19515,"byte_end":19574,"line_start":572,"line_end":572,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19579,"byte_end":19582,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send()`][`UnixDatagram::send()`] and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19587,"byte_end":19653,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/ [`recv()`][`UnixDatagram::recv()`] will use the specified address for sending and receiving","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19658,"byte_end":19753,"line_start":575,"line_end":575,"column_start":5,"column_end":100}},{"value":"/ messages. Additionally, a filter will be applied to","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19758,"byte_end":19813,"line_start":576,"line_end":576,"column_start":5,"column_end":60}},{"value":"/ [`recv_from()`][`UnixDatagram::recv_from()`] so that it only receives messages from that","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19818,"byte_end":19910,"line_start":577,"line_end":577,"column_start":5,"column_end":97}},{"value":"/ same address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19915,"byte_end":19932,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19937,"byte_end":19940,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19945,"byte_end":19959,"line_start":580,"line_end":580,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19964,"byte_end":19967,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19972,"byte_end":19985,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":19990,"byte_end":20028,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20033,"byte_end":20036,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20041,"byte_end":20085,"line_start":585,"line_end":585,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20090,"byte_end":20132,"line_start":586,"line_end":586,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20137,"byte_end":20172,"line_start":587,"line_end":587,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20177,"byte_end":20210,"line_start":588,"line_end":588,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20215,"byte_end":20222,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20759,"byte_end":20769,"line_start":607,"line_end":607,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this socket is bound to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20376,"byte_end":20430,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20435,"byte_end":20438,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20443,"byte_end":20457,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20462,"byte_end":20465,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20470,"byte_end":20483,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20488,"byte_end":20526,"line_start":600,"line_end":600,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20531,"byte_end":20534,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20539,"byte_end":20583,"line_start":602,"line_end":602,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20588,"byte_end":20640,"line_start":603,"line_end":603,"column_start":5,"column_end":57}},{"value":"/ println!(\"Bound to {:?}\", socket.local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20645,"byte_end":20697,"line_start":604,"line_end":604,"column_start":5,"column_end":57}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20702,"byte_end":20735,"line_start":605,"line_end":605,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20740,"byte_end":20747,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21279,"byte_end":21288,"line_start":624,"line_end":624,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address this socket is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address this socket is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20858,"byte_end":20917,"line_start":611,"line_end":611,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20922,"byte_end":20925,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20930,"byte_end":20944,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20949,"byte_end":20952,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20957,"byte_end":20970,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":20975,"byte_end":21013,"line_start":616,"line_end":616,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21018,"byte_end":21021,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21026,"byte_end":21070,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21075,"byte_end":21117,"line_start":619,"line_end":619,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21122,"byte_end":21157,"line_start":620,"line_end":620,"column_start":5,"column_end":40}},{"value":"/ println!(\"Connected to {:?}\", socket.peer_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21162,"byte_end":21217,"line_start":621,"line_end":621,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21222,"byte_end":21255,"line_start":622,"line_end":622,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21260,"byte_end":21267,"line_start":623,"line_end":623,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21947,"byte_end":21956,"line_start":645,"line_end":645,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from an address.","sig":null,"attributes":[{"value":"/ Receives data from an address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21376,"byte_end":21410,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21415,"byte_end":21418,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes received and the address data came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21423,"byte_end":21507,"line_start":630,"line_end":630,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21512,"byte_end":21515,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21520,"byte_end":21534,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21539,"byte_end":21542,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21547,"byte_end":21560,"line_start":634,"line_end":634,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21565,"byte_end":21603,"line_start":635,"line_end":635,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21608,"byte_end":21611,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21616,"byte_end":21660,"line_start":637,"line_end":637,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21665,"byte_end":21717,"line_start":638,"line_end":638,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21722,"byte_end":21725,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21730,"byte_end":21762,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21767,"byte_end":21821,"line_start":641,"line_end":641,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {:?}\", n, addr);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21826,"byte_end":21879,"line_start":642,"line_end":642,"column_start":5,"column_end":58}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21884,"byte_end":21917,"line_start":643,"line_end":643,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":21922,"byte_end":21929,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22490,"byte_end":22497,"line_start":663,"line_end":663,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the given address.","sig":null,"attributes":[{"value":"/ Sends data to the given address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22068,"byte_end":22104,"line_start":649,"line_end":649,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22109,"byte_end":22112,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes sent.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22117,"byte_end":22166,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22171,"byte_end":22174,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22179,"byte_end":22193,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22198,"byte_end":22201,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22206,"byte_end":22219,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22224,"byte_end":22262,"line_start":656,"line_end":656,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22267,"byte_end":22270,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22275,"byte_end":22319,"line_start":658,"line_end":658,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22324,"byte_end":22366,"line_start":659,"line_end":659,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello\", \"/tmp/socket\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22371,"byte_end":22422,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22427,"byte_end":22460,"line_start":661,"line_end":661,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22465,"byte_end":22472,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23139,"byte_end":23143,"line_start":684,"line_end":684,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the connected address.","sig":null,"attributes":[{"value":"/ Receives data from the connected address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22629,"byte_end":22674,"line_start":667,"line_end":667,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22679,"byte_end":22682,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes received.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22687,"byte_end":22740,"line_start":669,"line_end":669,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22745,"byte_end":22748,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22753,"byte_end":22767,"line_start":671,"line_end":671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22772,"byte_end":22775,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22780,"byte_end":22793,"line_start":673,"line_end":673,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22798,"byte_end":22836,"line_start":674,"line_end":674,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22841,"byte_end":22844,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22849,"byte_end":22893,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22898,"byte_end":22940,"line_start":677,"line_end":677,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22945,"byte_end":22980,"line_start":678,"line_end":678,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22985,"byte_end":22988,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":22993,"byte_end":23025,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23030,"byte_end":23071,"line_start":681,"line_end":681,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23076,"byte_end":23109,"line_start":682,"line_end":682,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23114,"byte_end":23121,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23684,"byte_end":23688,"line_start":703,"line_end":703,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected address.","sig":null,"attributes":[{"value":"/ Sends data to the connected address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23236,"byte_end":23276,"line_start":688,"line_end":688,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23281,"byte_end":23284,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes sent.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23289,"byte_end":23338,"line_start":690,"line_end":690,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23343,"byte_end":23346,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23351,"byte_end":23365,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23370,"byte_end":23373,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23378,"byte_end":23391,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/ use async_net::unix::UnixDatagram;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23396,"byte_end":23434,"line_start":695,"line_end":695,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23439,"byte_end":23442,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23447,"byte_end":23491,"line_start":697,"line_end":697,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23496,"byte_end":23538,"line_start":698,"line_end":698,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\")?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23543,"byte_end":23578,"line_start":699,"line_end":699,"column_start":5,"column_end":40}},{"value":"/ socket.send(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23583,"byte_end":23616,"line_start":700,"line_end":700,"column_start":5,"column_end":38}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23621,"byte_end":23654,"line_start":701,"line_end":701,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23659,"byte_end":23666,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24352,"byte_end":24360,"line_start":722,"line_end":722,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read half, write half, or both halves of this socket.","sig":null,"attributes":[{"value":"/ Shuts down the read half, write half, or both halves of this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23777,"byte_end":23849,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23854,"byte_end":23857,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O in the given directions to return","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23862,"byte_end":23949,"line_start":709,"line_end":709,"column_start":5,"column_end":92}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":23954,"byte_end":24036,"line_start":710,"line_end":710,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24041,"byte_end":24044,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24049,"byte_end":24063,"line_start":712,"line_end":712,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24068,"byte_end":24071,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24076,"byte_end":24089,"line_start":714,"line_end":714,"column_start":5,"column_end":18}},{"value":"/ use async_net::{Shutdown, unix::UnixDatagram};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24094,"byte_end":24144,"line_start":715,"line_end":715,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24149,"byte_end":24152,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24157,"byte_end":24201,"line_start":717,"line_end":717,"column_start":5,"column_end":49}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24206,"byte_end":24248,"line_start":718,"line_end":718,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24253,"byte_end":24290,"line_start":719,"line_end":719,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24295,"byte_end":24328,"line_start":720,"line_end":720,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24333,"byte_end":24340,"line_start":721,"line_end":721,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25886,"byte_end":25904,"line_start":18,"line_end":18,"column_start":11,"column_end":29},"name":"AsyncToSocketAddrs","qualname":"::addr::AsyncToSocketAddrs","value":"AsyncToSocketAddrs: Sealed","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25623,"byte_end":25683,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25684,"byte_end":25687,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait currently only appears in function signatures and cannot be used directly.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25688,"byte_end":25777,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25778,"byte_end":25781,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ However, you can use the [`resolve()`][`super::resolve()`] function to resolve addresses.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25782,"byte_end":25875,"line_start":17,"line_end":17,"column_start":1,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25927,"byte_end":25933,"line_start":20,"line_end":20,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::addr::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":149},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26028,"byte_end":26032,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Iter","qualname":"::addr::Sealed::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Unpin;","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25940,"byte_end":26018,"line_start":21,"line_end":21,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26382,"byte_end":26397,"line_start":30,"line_end":30,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::addr::Sealed::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26076,"byte_end":26142,"line_start":24,"line_end":24,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26147,"byte_end":26150,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26155,"byte_end":26246,"line_start":26,"line_end":26,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26251,"byte_end":26276,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26281,"byte_end":26284,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26289,"byte_end":26374,"line_start":29,"line_end":29,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":153},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26482,"byte_end":26491,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(future::Boxed<io::Result<I>>)","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":156},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26527,"byte_end":26532,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Ready","qualname":"::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":159},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26553,"byte_end":26557,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Done","qualname":"::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":151},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26453,"byte_end":26472,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(future::Boxed<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33249,"byte_end":33260,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::tcp::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":427}],"decl_id":null,"docs":" A TCP server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP server, listening for connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32138,"byte_end":32182,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32183,"byte_end":32186,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a [`TcpListener`] by [`bind`][`TcpListener::bind()`]ing it to an address, it","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32187,"byte_end":32282,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ listens for incoming TCP connections. These can be accepted by calling","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32283,"byte_end":32357,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ [`accept()`][`TcpListener::accept()`] or by awaiting items from the stream of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32358,"byte_end":32439,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ [`incoming`][`TcpListener::incoming()`] connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32440,"byte_end":32496,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32497,"byte_end":32500,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`TcpListener`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32501,"byte_end":32599,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ when all handles to it are dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32600,"byte_end":32639,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32640,"byte_end":32643,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32644,"byte_end":32713,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32714,"byte_end":32717,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32718,"byte_end":32772,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32773,"byte_end":32776,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32777,"byte_end":32791,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32792,"byte_end":32795,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32796,"byte_end":32809,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32810,"byte_end":32841,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32842,"byte_end":32875,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32876,"byte_end":32879,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32880,"byte_end":32924,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32925,"byte_end":32987,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":32988,"byte_end":33031,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33032,"byte_end":33035,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33036,"byte_end":33088,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33089,"byte_end":33122,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33123,"byte_end":33165,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33166,"byte_end":33171,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33172,"byte_end":33205,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33206,"byte_end":33213,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34874,"byte_end":34878,"line_start":94,"line_end":94,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: AsyncToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`TcpListener`] bound to the given address.","sig":null,"attributes":[{"value":"/ Creates a new [`TcpListener`] bound to the given address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33442,"byte_end":33503,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33508,"byte_end":33511,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the operating system assigns an available","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33516,"byte_end":33611,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/ port to this listener. The assigned port can be queried via the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33616,"byte_end":33683,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ [`local_addr()`][`TcpListener::local_addr()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33688,"byte_end":33745,"line_start":63,"line_end":63,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33750,"byte_end":33753,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, binding will be attempted with each of the addresses","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33758,"byte_end":33851,"line_start":65,"line_end":65,"column_start":5,"column_end":98}},{"value":"/ until one succeeds and returns the listener. If none of the addresses succeed in creating a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33856,"byte_end":33951,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ listener, the error from the last attempt is returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33956,"byte_end":34014,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34019,"byte_end":34022,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34027,"byte_end":34041,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34046,"byte_end":34049,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Create a TCP listener bound to `127.0.0.1:80`:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34054,"byte_end":34104,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34109,"byte_end":34112,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34117,"byte_end":34130,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34135,"byte_end":34166,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34171,"byte_end":34174,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34179,"byte_end":34223,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:80\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34228,"byte_end":34288,"line_start":77,"line_end":77,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34293,"byte_end":34326,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34331,"byte_end":34338,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34343,"byte_end":34346,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Create a TCP listener bound to `127.0.0.1:80`. If that address is unavailable, then try","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34351,"byte_end":34442,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ binding to `127.0.0.1:443`:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34447,"byte_end":34478,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34483,"byte_end":34486,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34491,"byte_end":34504,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, TcpListener};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34509,"byte_end":34554,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34559,"byte_end":34562,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34567,"byte_end":34611,"line_start":87,"line_end":87,"column_start":5,"column_end":49}},{"value":"/ let addrs = [","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34616,"byte_end":34633,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 80)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34638,"byte_end":34685,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 443)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34690,"byte_end":34738,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ ];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34743,"byte_end":34749,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/ let listener = TcpListener::bind(&addrs[..]).await.unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34754,"byte_end":34818,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":34823,"byte_end":34856,"line_start":93,"line_end":93,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35941,"byte_end":35951,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this listener is bound to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35457,"byte_end":35513,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35518,"byte_end":35521,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35526,"byte_end":35540,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35545,"byte_end":35548,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Bind to port 0 and then see which port was assigned by the operating system:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35553,"byte_end":35633,"line_start":116,"line_end":116,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35638,"byte_end":35641,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35646,"byte_end":35659,"line_start":118,"line_end":118,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, TcpListener};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35664,"byte_end":35709,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35714,"byte_end":35717,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35722,"byte_end":35766,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35771,"byte_end":35830,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ println!(\"Listening on {}\", listener.local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35835,"byte_end":35891,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":35896,"byte_end":35929,"line_start":124,"line_end":124,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36487,"byte_end":36493,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36040,"byte_end":36078,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36083,"byte_end":36086,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Returns a TCP stream and the address it is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36091,"byte_end":36151,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36156,"byte_end":36159,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36164,"byte_end":36178,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36183,"byte_end":36186,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36191,"byte_end":36204,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36209,"byte_end":36240,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36245,"byte_end":36248,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36253,"byte_end":36297,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36302,"byte_end":36364,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36369,"byte_end":36419,"line_start":140,"line_end":140,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36424,"byte_end":36457,"line_start":141,"line_end":141,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36462,"byte_end":36469,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37462,"byte_end":37470,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36663,"byte_end":36708,"line_start":148,"line_end":148,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36713,"byte_end":36716,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept()`][`TcpListener::accept()`]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36721,"byte_end":36814,"line_start":150,"line_end":150,"column_start":5,"column_end":98}},{"value":"/ in a loop. The stream of connections is infinite, i.e awaiting the next connection will","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36819,"byte_end":36910,"line_start":151,"line_end":151,"column_start":5,"column_end":96}},{"value":"/ never result in [`None`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36915,"byte_end":36944,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36949,"byte_end":36952,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36957,"byte_end":36971,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36976,"byte_end":36979,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":36984,"byte_end":36997,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37002,"byte_end":37033,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37038,"byte_end":37071,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37076,"byte_end":37079,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37084,"byte_end":37128,"line_start":160,"line_end":160,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37133,"byte_end":37192,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37197,"byte_end":37240,"line_start":162,"line_end":162,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37245,"byte_end":37248,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37253,"byte_end":37305,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37310,"byte_end":37343,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37348,"byte_end":37390,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37395,"byte_end":37400,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37405,"byte_end":37438,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37443,"byte_end":37450,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38117,"byte_end":38120,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37590,"byte_end":37648,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37653,"byte_end":37656,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37661,"byte_end":37754,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37759,"byte_end":37770,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37775,"byte_end":37778,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37783,"byte_end":37797,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37802,"byte_end":37805,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37810,"byte_end":37823,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37828,"byte_end":37859,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37864,"byte_end":37867,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37872,"byte_end":37916,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:80\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37921,"byte_end":37981,"line_start":188,"line_end":188,"column_start":5,"column_end":65}},{"value":"/ listener.set_ttl(100)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":37986,"byte_end":38013,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38018,"byte_end":38055,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38060,"byte_end":38093,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38098,"byte_end":38105,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38680,"byte_end":38687,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38195,"byte_end":38253,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38258,"byte_end":38261,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38266,"byte_end":38359,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38364,"byte_end":38375,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38380,"byte_end":38383,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38388,"byte_end":38402,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38407,"byte_end":38410,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38415,"byte_end":38428,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpListener;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38433,"byte_end":38464,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38469,"byte_end":38472,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38477,"byte_end":38521,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:80\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38526,"byte_end":38586,"line_start":208,"line_end":208,"column_start":5,"column_end":65}},{"value":"/ listener.set_ttl(100)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38591,"byte_end":38618,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38623,"byte_end":38656,"line_start":210,"line_end":210,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38661,"byte_end":38668,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39805,"byte_end":39813,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39594,"byte_end":39635,"line_start":251,"line_end":251,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39636,"byte_end":39639,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39640,"byte_end":39738,"line_start":253,"line_end":253,"column_start":1,"column_end":99}},{"value":"/ created by the [`TcpListener::incoming()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39739,"byte_end":39793,"line_start":254,"line_end":254,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41846,"byte_end":41855,"line_start":318,"line_end":318,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::tcp::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" A TCP connection.","sig":null,"attributes":[{"value":"/ A TCP connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40736,"byte_end":40757,"line_start":288,"line_end":288,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40758,"byte_end":40761,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ A [`TcpStream`] can be created by [`connect`][`TcpStream::connect()`]ing to an endpoint or by","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40762,"byte_end":40859,"line_start":290,"line_end":290,"column_start":1,"column_end":98}},{"value":"/ [`accept`][`TcpListener::accept()`]ing an incoming connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40860,"byte_end":40926,"line_start":291,"line_end":291,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40927,"byte_end":40930,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`] is a bidirectional stream that implements traits [`AsyncRead`] and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40931,"byte_end":41015,"line_start":293,"line_end":293,"column_start":1,"column_end":85}},{"value":"/ [`AsyncWrite`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41016,"byte_end":41035,"line_start":294,"line_end":294,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41036,"byte_end":41039,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`TcpStream`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41040,"byte_end":41136,"line_start":296,"line_end":296,"column_start":1,"column_end":97}},{"value":"/ when all handles to it are dropped. The reading and writing portions of the connection can also","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41137,"byte_end":41236,"line_start":297,"line_end":297,"column_start":1,"column_end":100}},{"value":"/ be shut down individually with the [`shutdown()`][`TcpStream::shutdown()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41237,"byte_end":41323,"line_start":298,"line_end":298,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41324,"byte_end":41327,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41328,"byte_end":41397,"line_start":300,"line_end":300,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41398,"byte_end":41401,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41402,"byte_end":41456,"line_start":302,"line_end":302,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41457,"byte_end":41460,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41461,"byte_end":41475,"line_start":304,"line_end":304,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41476,"byte_end":41479,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41480,"byte_end":41493,"line_start":306,"line_end":306,"column_start":1,"column_end":14}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41494,"byte_end":41523,"line_start":307,"line_end":307,"column_start":1,"column_end":30}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41524,"byte_end":41557,"line_start":308,"line_end":308,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41558,"byte_end":41561,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41562,"byte_end":41606,"line_start":310,"line_end":310,"column_start":1,"column_end":45}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41607,"byte_end":41672,"line_start":311,"line_end":311,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41673,"byte_end":41711,"line_start":312,"line_end":312,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41712,"byte_end":41715,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41716,"byte_end":41750,"line_start":314,"line_end":314,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41751,"byte_end":41792,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41793,"byte_end":41826,"line_start":316,"line_end":316,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":41827,"byte_end":41834,"line_start":317,"line_end":317,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43573,"byte_end":43580,"line_start":369,"line_end":369,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: AsyncToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42340,"byte_end":42394,"line_start":336,"line_end":336,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42399,"byte_end":42402,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the provided `addr`,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42407,"byte_end":42501,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42506,"byte_end":42509,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connecting will be attempted with each of the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42514,"byte_end":42600,"line_start":340,"line_end":340,"column_start":5,"column_end":91}},{"value":"/ addresses until connecting to one succeeds. If none of the addresses result in a successful","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42605,"byte_end":42700,"line_start":341,"line_end":341,"column_start":5,"column_end":100}},{"value":"/ connection, the error from the last connect attempt is returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42705,"byte_end":42773,"line_start":342,"line_end":342,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42778,"byte_end":42781,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42786,"byte_end":42800,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42805,"byte_end":42808,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Connect to `example.com:80`:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42813,"byte_end":42845,"line_start":346,"line_end":346,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42850,"byte_end":42853,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42858,"byte_end":42865,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42870,"byte_end":42899,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42904,"byte_end":42907,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42912,"byte_end":42956,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42961,"byte_end":43022,"line_start":352,"line_end":352,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43027,"byte_end":43060,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43065,"byte_end":43072,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43077,"byte_end":43080,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Connect to `127.0.0.1:8080`. If that fails, then try connecting to `127.0.0.1:8081`:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43085,"byte_end":43173,"line_start":356,"line_end":356,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43178,"byte_end":43181,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43186,"byte_end":43199,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, TcpStream};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43204,"byte_end":43247,"line_start":359,"line_end":359,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43252,"byte_end":43255,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43260,"byte_end":43304,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ let addrs = [","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43309,"byte_end":43326,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 8080)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43331,"byte_end":43380,"line_start":363,"line_end":363,"column_start":5,"column_end":54}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 8081)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43385,"byte_end":43434,"line_start":364,"line_end":364,"column_start":5,"column_end":54}},{"value":"/ ];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43439,"byte_end":43445,"line_start":365,"line_end":365,"column_start":5,"column_end":11}},{"value":"/ let stream = TcpStream::connect(&addrs[..]).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43450,"byte_end":43505,"line_start":366,"line_end":366,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43510,"byte_end":43543,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":43548,"byte_end":43555,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44537,"byte_end":44547,"line_start":399,"line_end":399,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this stream is bound to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44154,"byte_end":44208,"line_start":387,"line_end":387,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44213,"byte_end":44216,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44221,"byte_end":44235,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44240,"byte_end":44243,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44248,"byte_end":44255,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44260,"byte_end":44289,"line_start":392,"line_end":392,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44294,"byte_end":44297,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44302,"byte_end":44346,"line_start":394,"line_end":394,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44351,"byte_end":44412,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/ println!(\"Local address is {}\", stream.local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44417,"byte_end":44475,"line_start":396,"line_end":396,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44480,"byte_end":44513,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44518,"byte_end":44525,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45019,"byte_end":45028,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address this stream is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44636,"byte_end":44695,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44700,"byte_end":44703,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44708,"byte_end":44722,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44727,"byte_end":44730,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44735,"byte_end":44742,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44747,"byte_end":44776,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44781,"byte_end":44784,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44789,"byte_end":44833,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44838,"byte_end":44899,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/ println!(\"Connected to {}\", stream.peer_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44904,"byte_end":44957,"line_start":412,"line_end":412,"column_start":5,"column_end":58}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":44962,"byte_end":44995,"line_start":413,"line_end":413,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45000,"byte_end":45007,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45788,"byte_end":45796,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read half, write half, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read half, write half, or both halves of this connection.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45116,"byte_end":45192,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45197,"byte_end":45200,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O in the given directions to return","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45205,"byte_end":45292,"line_start":421,"line_end":421,"column_start":5,"column_end":92}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45297,"byte_end":45379,"line_start":422,"line_end":422,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45384,"byte_end":45387,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45392,"byte_end":45462,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45467,"byte_end":45470,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45475,"byte_end":45489,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45494,"byte_end":45497,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45502,"byte_end":45515,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use async_net::{Shutdown, TcpStream};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45520,"byte_end":45561,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45566,"byte_end":45569,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45574,"byte_end":45618,"line_start":431,"line_end":431,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45623,"byte_end":45684,"line_start":432,"line_end":432,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45689,"byte_end":45726,"line_start":433,"line_end":433,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45731,"byte_end":45764,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45769,"byte_end":45776,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46548,"byte_end":46552,"line_start":459,"line_end":459,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data without removing it from the queue.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45908,"byte_end":45961,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45966,"byte_end":45969,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":45974,"byte_end":46025,"line_start":442,"line_end":442,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46030,"byte_end":46033,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46038,"byte_end":46133,"line_start":444,"line_end":444,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46138,"byte_end":46179,"line_start":445,"line_end":445,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46184,"byte_end":46187,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46192,"byte_end":46206,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46211,"byte_end":46214,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46219,"byte_end":46232,"line_start":449,"line_end":449,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46237,"byte_end":46266,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46271,"byte_end":46274,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46279,"byte_end":46323,"line_start":452,"line_end":452,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46328,"byte_end":46389,"line_start":453,"line_end":453,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46394,"byte_end":46397,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46402,"byte_end":46434,"line_start":455,"line_end":455,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46439,"byte_end":46480,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46485,"byte_end":46518,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46523,"byte_end":46530,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47511,"byte_end":47518,"line_start":484,"line_end":484,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46645,"byte_end":46708,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46713,"byte_end":46716,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this option disables the [Nagle algorithm][nagle-wiki]. This means that","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46721,"byte_end":46814,"line_start":465,"line_end":465,"column_start":5,"column_end":98}},{"value":"/ written data is always sent as soon as possible, even if there is only a small amount of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46819,"byte_end":46911,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"/ it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46916,"byte_end":46923,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46928,"byte_end":46931,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, written data is buffered until there is a certain amount to send out,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":46936,"byte_end":47030,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ thereby avoiding the frequent sending of small packets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47035,"byte_end":47094,"line_start":470,"line_end":470,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47099,"byte_end":47102,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ [nagle-wiki]: https://en.wikipedia.org/wiki/Nagle%27s_algorithm","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47107,"byte_end":47174,"line_start":472,"line_end":472,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47179,"byte_end":47182,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47187,"byte_end":47201,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47206,"byte_end":47209,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47214,"byte_end":47227,"line_start":476,"line_end":476,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47232,"byte_end":47261,"line_start":477,"line_end":477,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47266,"byte_end":47269,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47274,"byte_end":47318,"line_start":479,"line_end":479,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47323,"byte_end":47384,"line_start":480,"line_end":480,"column_start":5,"column_end":66}},{"value":"/ println!(\"TCP_NODELAY is set to {}\", stream.nodelay()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47389,"byte_end":47449,"line_start":481,"line_end":481,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47454,"byte_end":47487,"line_start":482,"line_end":482,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47492,"byte_end":47499,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48435,"byte_end":48446,"line_start":509,"line_end":509,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47598,"byte_end":47661,"line_start":488,"line_end":488,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47666,"byte_end":47669,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this option disables the [Nagle algorithm][nagle-wiki]. This means that","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47674,"byte_end":47767,"line_start":490,"line_end":490,"column_start":5,"column_end":98}},{"value":"/ written data is always sent as soon as possible, even if there is only a small amount of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47772,"byte_end":47864,"line_start":491,"line_end":491,"column_start":5,"column_end":97}},{"value":"/ it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47869,"byte_end":47876,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47881,"byte_end":47884,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, written data is buffered until there is a certain amount to send out,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47889,"byte_end":47983,"line_start":494,"line_end":494,"column_start":5,"column_end":99}},{"value":"/ thereby avoiding the frequent sending of small packets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":47988,"byte_end":48047,"line_start":495,"line_end":495,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48052,"byte_end":48055,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [nagle-wiki]: https://en.wikipedia.org/wiki/Nagle%27s_algorithm","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48060,"byte_end":48127,"line_start":497,"line_end":497,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48132,"byte_end":48135,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48140,"byte_end":48154,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48159,"byte_end":48162,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48167,"byte_end":48180,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48185,"byte_end":48214,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48219,"byte_end":48222,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48227,"byte_end":48271,"line_start":504,"line_end":504,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48276,"byte_end":48337,"line_start":505,"line_end":505,"column_start":5,"column_end":66}},{"value":"/ stream.set_nodelay(false)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48342,"byte_end":48373,"line_start":506,"line_end":506,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48378,"byte_end":48411,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48416,"byte_end":48423,"line_start":508,"line_end":508,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49058,"byte_end":49061,"line_start":528,"line_end":528,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48550,"byte_end":48608,"line_start":513,"line_end":513,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48613,"byte_end":48616,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48621,"byte_end":48714,"line_start":515,"line_end":515,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48719,"byte_end":48730,"line_start":516,"line_end":516,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48735,"byte_end":48738,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48743,"byte_end":48757,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48762,"byte_end":48765,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48770,"byte_end":48783,"line_start":520,"line_end":520,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48788,"byte_end":48817,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48822,"byte_end":48825,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48830,"byte_end":48874,"line_start":523,"line_end":523,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48879,"byte_end":48940,"line_start":524,"line_end":524,"column_start":5,"column_end":66}},{"value":"/ println!(\"IP_TTL is set to {}\", stream.ttl()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":48945,"byte_end":48996,"line_start":525,"line_end":525,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49001,"byte_end":49034,"line_start":526,"line_end":526,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49039,"byte_end":49046,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49618,"byte_end":49625,"line_start":547,"line_end":547,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49136,"byte_end":49194,"line_start":532,"line_end":532,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49199,"byte_end":49202,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49207,"byte_end":49300,"line_start":534,"line_end":534,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49305,"byte_end":49316,"line_start":535,"line_end":535,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49321,"byte_end":49324,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49329,"byte_end":49343,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49348,"byte_end":49351,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49356,"byte_end":49369,"line_start":539,"line_end":539,"column_start":5,"column_end":18}},{"value":"/ use async_net::TcpStream;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49374,"byte_end":49403,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49408,"byte_end":49411,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49416,"byte_end":49460,"line_start":542,"line_end":542,"column_start":5,"column_end":49}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49465,"byte_end":49526,"line_start":543,"line_end":543,"column_start":5,"column_end":66}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49531,"byte_end":49556,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49561,"byte_end":49594,"line_start":545,"line_end":545,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49599,"byte_end":49606,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55806,"byte_end":55815,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":433}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54115,"byte_end":54132,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54133,"byte_end":54136,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a [`UdpSocket`] by [`bind`][`UdpSocket::bind()`]ing it to a socket address, data","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54137,"byte_end":54236,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ can be [sent to] and [received from] any other socket address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54237,"byte_end":54303,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54304,"byte_end":54307,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Cloning a [`UdpSocket`] creates another handle to the same socket. The socket will be closed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54308,"byte_end":54404,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ when all handles to it are dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54405,"byte_end":54444,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54445,"byte_end":54448,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Although UDP is a connectionless protocol, this implementation provides an interface to set an","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54449,"byte_end":54547,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ address where data should be sent and received from. After setting a remote address with","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54548,"byte_end":54640,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ [`connect()`][`UdpSocket::connect()`], data can be sent to and received from that address with","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54641,"byte_end":54739,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ [`send()`][`UdpSocket::send()`] and [`recv()`][`UdpSocket::recv()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54740,"byte_end":54812,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54813,"byte_end":54816,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54817,"byte_end":54916,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`][`super::TcpListener`] and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54917,"byte_end":54992,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream`][`super::TcpStream`] for TCP primitives.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":54993,"byte_end":55050,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55051,"byte_end":55054,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [received from]: UdpSocket::recv_from()","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55055,"byte_end":55098,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ [sent to]: UdpSocket::send_to()","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55099,"byte_end":55134,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55135,"byte_end":55189,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55190,"byte_end":55193,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55194,"byte_end":55208,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55209,"byte_end":55212,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55213,"byte_end":55226,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55227,"byte_end":55256,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55257,"byte_end":55260,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55261,"byte_end":55305,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55306,"byte_end":55364,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 20];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55365,"byte_end":55397,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55398,"byte_end":55401,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55402,"byte_end":55412,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/     // Receive a single datagram message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55413,"byte_end":55458,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     // If `buf` is too small to hold the entire message, it will be cut off.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55459,"byte_end":55539,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/     let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55540,"byte_end":55598,"line_start":47,"line_end":47,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55599,"byte_end":55602,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // Send the message back to the same address that has sent it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55603,"byte_end":55673,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/     socket.send_to(&buf[..n], &addr).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55674,"byte_end":55722,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55723,"byte_end":55728,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55729,"byte_end":55762,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55763,"byte_end":55770,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57407,"byte_end":57411,"line_start":100,"line_end":100,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: AsyncToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`UdpSocket`] bound to the given address.","sig":null,"attributes":[{"value":"/ Creates a new [`UdpSocket`] bound to the given address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55987,"byte_end":56046,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56051,"byte_end":56054,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the operating system assigns an available","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56059,"byte_end":56154,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ port to this socket. The assigned port can be queried via the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56159,"byte_end":56224,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ [`local_addr()`][`UdpSocket::local_addr()`] method.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56229,"byte_end":56284,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56289,"byte_end":56292,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, binding will be attempted with each of the addresses","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56297,"byte_end":56390,"line_start":70,"line_end":70,"column_start":5,"column_end":98}},{"value":"/ until one succeeds and returns the socket. If none of the addresses succeed in creating a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56395,"byte_end":56488,"line_start":71,"line_end":71,"column_start":5,"column_end":98}},{"value":"/ socket, the error from the last attempt is returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56493,"byte_end":56549,"line_start":72,"line_end":72,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56554,"byte_end":56557,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56562,"byte_end":56576,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56581,"byte_end":56584,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Create a UDP socket bound to `127.0.0.1:3400`:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56589,"byte_end":56639,"line_start":76,"line_end":76,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56644,"byte_end":56647,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56652,"byte_end":56665,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56670,"byte_end":56699,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56704,"byte_end":56707,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56712,"byte_end":56756,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:3400\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56761,"byte_end":56819,"line_start":82,"line_end":82,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56824,"byte_end":56857,"line_start":83,"line_end":83,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56862,"byte_end":56869,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56874,"byte_end":56877,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Create a UDP socket bound to `127.0.0.1:3400`. If that address is unavailable, then try","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56882,"byte_end":56973,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ binding to `127.0.0.1:3401`:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":56978,"byte_end":57010,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57015,"byte_end":57018,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57023,"byte_end":57036,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, UdpSocket};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57041,"byte_end":57084,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57089,"byte_end":57092,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57097,"byte_end":57141,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/ let addrs = [","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57146,"byte_end":57163,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 3400)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57168,"byte_end":57217,"line_start":94,"line_end":94,"column_start":5,"column_end":54}},{"value":"/     SocketAddr::from(([127, 0, 0, 1], 3401)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57222,"byte_end":57271,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/ ];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57276,"byte_end":57282,"line_start":96,"line_end":96,"column_start":5,"column_end":11}},{"value":"/ let socket = UdpSocket::bind(&addrs[..]).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57287,"byte_end":57339,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57344,"byte_end":57377,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57382,"byte_end":57389,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58584,"byte_end":58594,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address this socket is bound to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":57977,"byte_end":58031,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58036,"byte_end":58039,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58044,"byte_end":58132,"line_start":120,"line_end":120,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58137,"byte_end":58156,"line_start":121,"line_end":121,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58161,"byte_end":58164,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58169,"byte_end":58183,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58188,"byte_end":58191,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Bind to port 0 and then see which port was assigned by the operating system:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58196,"byte_end":58276,"line_start":125,"line_end":125,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58281,"byte_end":58284,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58289,"byte_end":58302,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ use async_net::{SocketAddr, UdpSocket};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58307,"byte_end":58350,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58355,"byte_end":58358,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58363,"byte_end":58407,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58412,"byte_end":58467,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ println!(\"Bound to {}\", socket.local_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58472,"byte_end":58522,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58527,"byte_end":58560,"line_start":133,"line_end":133,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58565,"byte_end":58572,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59122,"byte_end":59131,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address this socket is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address this socket is connected to.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58683,"byte_end":58742,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58747,"byte_end":58750,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58755,"byte_end":58769,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58774,"byte_end":58777,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58782,"byte_end":58795,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58800,"byte_end":58829,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58834,"byte_end":58837,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58842,"byte_end":58886,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58891,"byte_end":58950,"line_start":147,"line_end":147,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"192.168.0.1:41203\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":58955,"byte_end":59002,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ println!(\"Connected to {}\", socket.peer_addr()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59007,"byte_end":59060,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59065,"byte_end":59098,"line_start":150,"line_end":150,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59103,"byte_end":59110,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60175,"byte_end":60182,"line_start":177,"line_end":177,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: AsyncToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to an address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to an address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59219,"byte_end":59261,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59266,"byte_end":59269,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send()`][`UdpSocket::send()`] and [`recv()`][`UdpSocket::recv()`]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59274,"byte_end":59369,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ will use the specified address for sending and receiving messages. Additionally, a filter","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59374,"byte_end":59467,"line_start":159,"line_end":159,"column_start":5,"column_end":98}},{"value":"/ will be applied to [`recv_from()`][`UdpSocket::recv_from()`] so that it only receives","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59472,"byte_end":59561,"line_start":160,"line_end":160,"column_start":5,"column_end":94}},{"value":"/ messages from that same address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59566,"byte_end":59602,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59607,"byte_end":59610,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connecting will be attempted with each of the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59615,"byte_end":59701,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ addresses until the operating system accepts one. If none of the addresses are accepted,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59706,"byte_end":59798,"line_start":164,"line_end":164,"column_start":5,"column_end":97}},{"value":"/ the error from the last attempt is returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59803,"byte_end":59851,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59856,"byte_end":59859,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59864,"byte_end":59878,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59883,"byte_end":59886,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59891,"byte_end":59904,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59909,"byte_end":59938,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59943,"byte_end":59946,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":59951,"byte_end":59995,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:3400\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60000,"byte_end":60058,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60063,"byte_end":60107,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60112,"byte_end":60145,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60150,"byte_end":60157,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61483,"byte_end":61492,"line_start":215,"line_end":215,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60711,"byte_end":60750,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60755,"byte_end":60758,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes received and the address message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60763,"byte_end":60850,"line_start":197,"line_end":197,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60855,"byte_end":60858,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60863,"byte_end":60956,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":60961,"byte_end":61045,"line_start":200,"line_end":200,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61050,"byte_end":61053,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61058,"byte_end":61072,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61077,"byte_end":61080,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61085,"byte_end":61098,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61103,"byte_end":61132,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61137,"byte_end":61140,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61145,"byte_end":61189,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61194,"byte_end":61253,"line_start":208,"line_end":208,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61258,"byte_end":61261,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61266,"byte_end":61300,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/ let (n, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61305,"byte_end":61359,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, addr);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61364,"byte_end":61415,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61420,"byte_end":61453,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61458,"byte_end":61465,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62568,"byte_end":62577,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61604,"byte_end":61678,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61683,"byte_end":61686,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the address message came from.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61691,"byte_end":61776,"line_start":221,"line_end":221,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61781,"byte_end":61784,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61789,"byte_end":61882,"line_start":223,"line_end":223,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61887,"byte_end":61971,"line_start":224,"line_end":224,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61976,"byte_end":61979,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same message. This is accomplished by passing `MSG_PEEK` as a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":61984,"byte_end":62077,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ flag to the underlying `recvfrom` system call.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62082,"byte_end":62132,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62137,"byte_end":62140,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62145,"byte_end":62159,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62164,"byte_end":62167,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62172,"byte_end":62185,"line_start":231,"line_end":231,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62190,"byte_end":62219,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62224,"byte_end":62227,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62232,"byte_end":62276,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62281,"byte_end":62340,"line_start":235,"line_end":235,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62345,"byte_end":62348,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62353,"byte_end":62387,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ let (n, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62392,"byte_end":62446,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, addr);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62451,"byte_end":62500,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62505,"byte_end":62538,"line_start":240,"line_end":240,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62543,"byte_end":62550,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63231,"byte_end":63238,"line_start":262,"line_end":262,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: AsyncToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the given address.","sig":null,"attributes":[{"value":"/ Sends data to the given address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62693,"byte_end":62729,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62734,"byte_end":62737,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes sent.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62742,"byte_end":62791,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62796,"byte_end":62799,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, the message will only be sent to the first address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62804,"byte_end":62896,"line_start":250,"line_end":250,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62901,"byte_end":62904,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62909,"byte_end":62923,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62928,"byte_end":62931,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62936,"byte_end":62949,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62954,"byte_end":62983,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62988,"byte_end":62991,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":62996,"byte_end":63040,"line_start":257,"line_end":257,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63045,"byte_end":63104,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/ socket.send_to(b\"hello\", \"127.0.0.1:4242\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63109,"byte_end":63163,"line_start":259,"line_end":259,"column_start":5,"column_end":59}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63168,"byte_end":63201,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63206,"byte_end":63213,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64625,"byte_end":64629,"line_start":300,"line_end":300,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected address.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63675,"byte_end":63741,"line_start":276,"line_end":276,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63746,"byte_end":63749,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes received.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63754,"byte_end":63807,"line_start":278,"line_end":278,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63812,"byte_end":63815,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63820,"byte_end":63913,"line_start":280,"line_end":280,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":63918,"byte_end":64002,"line_start":281,"line_end":281,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64007,"byte_end":64010,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The [`connect()`][`UdpSocket::connect()`] method connects this socket to an address. This","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64015,"byte_end":64108,"line_start":283,"line_end":283,"column_start":5,"column_end":98}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64113,"byte_end":64165,"line_start":284,"line_end":284,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64170,"byte_end":64173,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64178,"byte_end":64192,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64197,"byte_end":64200,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64205,"byte_end":64218,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64223,"byte_end":64252,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64257,"byte_end":64260,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64265,"byte_end":64309,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64314,"byte_end":64373,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64378,"byte_end":64422,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64427,"byte_end":64430,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64435,"byte_end":64469,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64474,"byte_end":64515,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64520,"byte_end":64557,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64562,"byte_end":64595,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64600,"byte_end":64607,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65852,"byte_end":65856,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram from the connected address without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram from the connected address without removing it from the queue.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64722,"byte_end":64815,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64820,"byte_end":64823,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64828,"byte_end":64879,"line_start":306,"line_end":306,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64884,"byte_end":64887,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte buffer of sufficient size to hold a message.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64892,"byte_end":64985,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ If the received message is too long to fit into the buffer, it may be truncated.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":64990,"byte_end":65074,"line_start":309,"line_end":309,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65079,"byte_end":65082,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same message. This is accomplished by passing `MSG_PEEK` as a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65087,"byte_end":65180,"line_start":311,"line_end":311,"column_start":5,"column_end":98}},{"value":"/ flag to the underlying `recv` system call.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65185,"byte_end":65231,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65236,"byte_end":65239,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The [`connect()`][`UdpSocket::connect()`] method connects this socket to an address. This","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65244,"byte_end":65337,"line_start":314,"line_end":314,"column_start":5,"column_end":98}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65342,"byte_end":65394,"line_start":315,"line_end":315,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65399,"byte_end":65402,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65407,"byte_end":65421,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65426,"byte_end":65429,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65434,"byte_end":65447,"line_start":319,"line_end":319,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65452,"byte_end":65481,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65486,"byte_end":65489,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65494,"byte_end":65538,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65543,"byte_end":65602,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65607,"byte_end":65651,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65656,"byte_end":65659,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65664,"byte_end":65698,"line_start":326,"line_end":326,"column_start":5,"column_end":39}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65703,"byte_end":65744,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65749,"byte_end":65784,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65789,"byte_end":65822,"line_start":329,"line_end":329,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65827,"byte_end":65834,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66515,"byte_end":66519,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected address.","sig":null,"attributes":[{"value":"/ Sends data to the connected address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65949,"byte_end":65989,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":65994,"byte_end":65997,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The [`connect()`][`UdpSocket::connect()`] method connects this socket to an address. This","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66002,"byte_end":66095,"line_start":337,"line_end":337,"column_start":5,"column_end":98}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66100,"byte_end":66152,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66157,"byte_end":66160,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66165,"byte_end":66179,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66184,"byte_end":66187,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66192,"byte_end":66205,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66210,"byte_end":66239,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66244,"byte_end":66247,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66252,"byte_end":66296,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66301,"byte_end":66360,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66365,"byte_end":66409,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/ socket.send(b\"hello\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66414,"byte_end":66447,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66452,"byte_end":66485,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66490,"byte_end":66497,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67107,"byte_end":67116,"line_start":369,"line_end":369,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66608,"byte_end":66672,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66677,"byte_end":66680,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66685,"byte_end":66769,"line_start":357,"line_end":357,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66774,"byte_end":66777,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66782,"byte_end":66796,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66801,"byte_end":66804,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66809,"byte_end":66822,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66827,"byte_end":66856,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66861,"byte_end":66864,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66869,"byte_end":66913,"line_start":364,"line_end":364,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66918,"byte_end":66977,"line_start":365,"line_end":365,"column_start":5,"column_end":64}},{"value":"/ println!(\"SO_BROADCAST is set to {}\", socket.broadcast()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":66982,"byte_end":67045,"line_start":366,"line_end":366,"column_start":5,"column_end":68}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67050,"byte_end":67083,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67088,"byte_end":67095,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67666,"byte_end":67679,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67198,"byte_end":67262,"line_start":373,"line_end":373,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67267,"byte_end":67270,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67275,"byte_end":67359,"line_start":375,"line_end":375,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67364,"byte_end":67367,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67372,"byte_end":67386,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67391,"byte_end":67394,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67399,"byte_end":67412,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67417,"byte_end":67446,"line_start":380,"line_end":380,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67451,"byte_end":67454,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67459,"byte_end":67503,"line_start":382,"line_end":382,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67508,"byte_end":67567,"line_start":383,"line_end":383,"column_start":5,"column_end":64}},{"value":"/ socket.set_broadcast(true)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67572,"byte_end":67604,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67609,"byte_end":67642,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67647,"byte_end":67654,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68381,"byte_end":68398,"line_start":407,"line_end":407,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67789,"byte_end":67858,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67863,"byte_end":67866,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67871,"byte_end":67951,"line_start":393,"line_end":393,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67956,"byte_end":67959,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any affect on IPv6 sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":67964,"byte_end":68030,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68035,"byte_end":68038,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68043,"byte_end":68057,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68062,"byte_end":68065,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68070,"byte_end":68083,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68088,"byte_end":68117,"line_start":400,"line_end":400,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68122,"byte_end":68125,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68130,"byte_end":68174,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68179,"byte_end":68238,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/ println!(\"IP_MULTICAST_LOOP is set to {}\", socket.multicast_loop_v4()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68243,"byte_end":68319,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68324,"byte_end":68357,"line_start":405,"line_end":405,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68362,"byte_end":68369,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69044,"byte_end":69065,"line_start":427,"line_end":427,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68488,"byte_end":68557,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68562,"byte_end":68565,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ If set to `true`, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68570,"byte_end":68650,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68655,"byte_end":68658,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any affect on IPv6 sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68663,"byte_end":68729,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68734,"byte_end":68737,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68742,"byte_end":68756,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68761,"byte_end":68764,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68769,"byte_end":68782,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68787,"byte_end":68816,"line_start":420,"line_end":420,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68821,"byte_end":68824,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68829,"byte_end":68873,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68878,"byte_end":68937,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/ socket.set_multicast_loop_v4(true)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68942,"byte_end":68982,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":68987,"byte_end":69020,"line_start":425,"line_end":425,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69025,"byte_end":69032,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69952,"byte_end":69968,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69225,"byte_end":69293,"line_start":433,"line_end":433,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69298,"byte_end":69301,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69306,"byte_end":69401,"line_start":435,"line_end":435,"column_start":5,"column_end":100}},{"value":"/ value is 1, which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69406,"byte_end":69493,"line_start":436,"line_end":436,"column_start":5,"column_end":92}},{"value":"/ explicitly requested.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69498,"byte_end":69523,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69528,"byte_end":69531,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv6 sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69536,"byte_end":69602,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69607,"byte_end":69610,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69615,"byte_end":69629,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69634,"byte_end":69637,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69642,"byte_end":69655,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69660,"byte_end":69689,"line_start":444,"line_end":444,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69694,"byte_end":69697,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69702,"byte_end":69746,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69751,"byte_end":69810,"line_start":447,"line_end":447,"column_start":5,"column_end":64}},{"value":"/ println!(\"IP_MULTICAST_TTL is set to {}\", socket.multicast_loop_v4()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69815,"byte_end":69890,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69895,"byte_end":69928,"line_start":449,"line_end":449,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":69933,"byte_end":69940,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70745,"byte_end":70765,"line_start":473,"line_end":473,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70056,"byte_end":70124,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70129,"byte_end":70132,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70137,"byte_end":70232,"line_start":457,"line_end":457,"column_start":5,"column_end":100}},{"value":"/ value is 1, which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70237,"byte_end":70324,"line_start":458,"line_end":458,"column_start":5,"column_end":92}},{"value":"/ explicitly requested.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70329,"byte_end":70354,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70359,"byte_end":70362,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv6 sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70367,"byte_end":70433,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70438,"byte_end":70441,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70446,"byte_end":70460,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70465,"byte_end":70468,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70473,"byte_end":70486,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70491,"byte_end":70520,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70525,"byte_end":70528,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70533,"byte_end":70577,"line_start":468,"line_end":468,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70582,"byte_end":70641,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"/ socket.set_multicast_ttl_v4(10)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70646,"byte_end":70683,"line_start":470,"line_end":470,"column_start":5,"column_end":42}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70688,"byte_end":70721,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70726,"byte_end":70733,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71461,"byte_end":71478,"line_start":493,"line_end":493,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70869,"byte_end":70940,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70945,"byte_end":70948,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":70953,"byte_end":71029,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71034,"byte_end":71037,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv4 sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71042,"byte_end":71108,"line_start":481,"line_end":481,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71113,"byte_end":71116,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71121,"byte_end":71135,"line_start":483,"line_end":483,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71140,"byte_end":71143,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71148,"byte_end":71161,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71166,"byte_end":71195,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71200,"byte_end":71203,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71208,"byte_end":71252,"line_start":488,"line_end":488,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71257,"byte_end":71316,"line_start":489,"line_end":489,"column_start":5,"column_end":64}},{"value":"/ println!(\"IPV6_MULTICAST_LOOP is set to {}\", socket.multicast_loop_v6()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71321,"byte_end":71399,"line_start":490,"line_end":490,"column_start":5,"column_end":83}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71404,"byte_end":71437,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71442,"byte_end":71449,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72122,"byte_end":72143,"line_start":513,"line_end":513,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71568,"byte_end":71639,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71644,"byte_end":71647,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71652,"byte_end":71728,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71733,"byte_end":71736,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Note that this option may not have any effect on IPv4 sockets.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71741,"byte_end":71807,"line_start":501,"line_end":501,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71812,"byte_end":71815,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71820,"byte_end":71834,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71839,"byte_end":71842,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71847,"byte_end":71860,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71865,"byte_end":71894,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71899,"byte_end":71902,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71907,"byte_end":71951,"line_start":508,"line_end":508,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":71956,"byte_end":72015,"line_start":509,"line_end":509,"column_start":5,"column_end":64}},{"value":"/ socket.set_multicast_loop_v6(true)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72020,"byte_end":72060,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72065,"byte_end":72098,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72103,"byte_end":72110,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72809,"byte_end":72812,"line_start":534,"line_end":534,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72303,"byte_end":72361,"line_start":519,"line_end":519,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72366,"byte_end":72369,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72374,"byte_end":72467,"line_start":521,"line_end":521,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72472,"byte_end":72483,"line_start":522,"line_end":522,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72488,"byte_end":72491,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72496,"byte_end":72510,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72515,"byte_end":72518,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72523,"byte_end":72536,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72541,"byte_end":72570,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72575,"byte_end":72578,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72583,"byte_end":72627,"line_start":529,"line_end":529,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72632,"byte_end":72691,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/ println!(\"IP_TTL is set to {}\", socket.ttl()?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72696,"byte_end":72747,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72752,"byte_end":72785,"line_start":532,"line_end":532,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72790,"byte_end":72797,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73367,"byte_end":73374,"line_start":553,"line_end":553,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72887,"byte_end":72945,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72950,"byte_end":72953,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This option configures the time-to-live field that is used in every packet sent from this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":72958,"byte_end":73051,"line_start":540,"line_end":540,"column_start":5,"column_end":98}},{"value":"/ socket.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73056,"byte_end":73067,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73072,"byte_end":73075,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73080,"byte_end":73094,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73099,"byte_end":73102,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73107,"byte_end":73120,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/ use async_net::UdpSocket;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73125,"byte_end":73154,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73159,"byte_end":73162,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73167,"byte_end":73211,"line_start":548,"line_end":548,"column_start":5,"column_end":49}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73216,"byte_end":73275,"line_start":549,"line_end":549,"column_start":5,"column_end":64}},{"value":"/ socket.set_ttl(100)?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73280,"byte_end":73305,"line_start":550,"line_end":550,"column_start":5,"column_end":30}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73310,"byte_end":73343,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73348,"byte_end":73355,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73894,"byte_end":73911,"line_start":563,"line_end":563,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73465,"byte_end":73523,"line_start":557,"line_end":557,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73528,"byte_end":73531,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. Argument `multiaddr`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73536,"byte_end":73629,"line_start":559,"line_end":559,"column_start":5,"column_end":98}},{"value":"/ must be a valid multicast address, and `interface` is the address of the local interface","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73634,"byte_end":73726,"line_start":560,"line_end":560,"column_start":5,"column_end":97}},{"value":"/ with which the system should join the multicast group. If it's equal to `INADDR_ANY` then","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73731,"byte_end":73824,"line_start":561,"line_end":561,"column_start":5,"column_end":98}},{"value":"/ an appropriate interface is chosen by the system.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":73829,"byte_end":73882,"line_start":562,"line_end":562,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74334,"byte_end":74352,"line_start":573,"line_end":573,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74089,"byte_end":74148,"line_start":569,"line_end":569,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74153,"byte_end":74156,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This method leaves a multicast group. Argument `multiaddr` must be a valid multicast","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74161,"byte_end":74249,"line_start":571,"line_end":571,"column_start":5,"column_end":93}},{"value":"/ address, and `interface` is the index of the interface to leave.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74254,"byte_end":74322,"line_start":572,"line_end":572,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74848,"byte_end":74865,"line_start":584,"line_end":584,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74531,"byte_end":74591,"line_start":579,"line_end":579,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74596,"byte_end":74599,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. Argument `multiaddr`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74604,"byte_end":74697,"line_start":581,"line_end":581,"column_start":5,"column_end":98}},{"value":"/ must be a valid multicast address, and `interface` is the index of the interface to join","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74702,"byte_end":74794,"line_start":582,"line_end":582,"column_start":5,"column_end":97}},{"value":"/ (or 0 to indicate any interface).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":74799,"byte_end":74836,"line_start":583,"line_end":583,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75258,"byte_end":75276,"line_start":592,"line_end":592,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75011,"byte_end":75072,"line_start":588,"line_end":588,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75077,"byte_end":75080,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This method leaves a multicast group. Argument `multiaddr` must be a valid multicast","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75085,"byte_end":75173,"line_start":590,"line_end":590,"column_start":5,"column_end":93}},{"value":"/ address, and `interface` is the index of the interface to leave.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75178,"byte_end":75246,"line_start":591,"line_end":591,"column_start":5,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1533,"byte_end":1540,"line_start":63,"line_end":63,"column_start":14,"column_end":21},"name":"resolve","qualname":"::resolve","value":"pub async fn resolve<A: AsyncToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1244,"byte_end":1304,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1305,"byte_end":1308,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1309,"byte_end":1323,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1324,"byte_end":1327,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1328,"byte_end":1335,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1336,"byte_end":1380,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ for addr in async_net::resolve(\"google.com:80\").await? {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1381,"byte_end":1441,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/     println!(\"{}\", addr);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1442,"byte_end":1471,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1472,"byte_end":1477,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1478,"byte_end":1511,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":1512,"byte_end":1519,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3304,"byte_end":3316,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6325,"byte_end":6337,"line_start":149,"line_end":149,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6527,"byte_end":6539,"line_start":155,"line_end":155,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6793,"byte_end":6805,"line_start":163,"line_end":163,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6934,"byte_end":6946,"line_start":170,"line_end":170,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7565,"byte_end":7573,"line_start":194,"line_end":194,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8120,"byte_end":8128,"line_start":212,"line_end":212,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9556,"byte_end":9566,"line_start":252,"line_end":252,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9593,"byte_end":9603,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9613,"byte_end":9623,"line_start":255,"line_end":255,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12548,"byte_end":12558,"line_start":346,"line_end":346,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12674,"byte_end":12684,"line_start":352,"line_end":352,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12829,"byte_end":12839,"line_start":358,"line_end":358,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13017,"byte_end":13027,"line_start":364,"line_end":364,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13269,"byte_end":13279,"line_start":372,"line_end":372,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13406,"byte_end":13416,"line_start":379,"line_end":379,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13650,"byte_end":13660,"line_start":392,"line_end":392,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":14655,"byte_end":14665,"line_start":424,"line_end":424,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17775,"byte_end":17787,"line_start":516,"line_end":516,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24510,"byte_end":24522,"line_start":727,"line_end":727,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24708,"byte_end":24720,"line_start":733,"line_end":733,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24970,"byte_end":24982,"line_start":741,"line_end":741,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":25111,"byte_end":25123,"line_start":748,"line_end":748,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26585,"byte_end":26604,"line_start":39,"line_end":39,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26779,"byte_end":26798,"line_start":45,"line_end":45,"column_start":57,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27481,"byte_end":27491,"line_start":65,"line_end":65,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27512,"byte_end":27522,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27745,"byte_end":27757,"line_start":75,"line_end":75,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27778,"byte_end":27790,"line_start":77,"line_end":77,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":28005,"byte_end":28017,"line_start":85,"line_end":85,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":28038,"byte_end":28050,"line_start":87,"line_end":87,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":31475,"byte_end":31481,"line_start":204,"line_end":204,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":31502,"byte_end":31508,"line_start":206,"line_end":206,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33317,"byte_end":33328,"line_start":54,"line_end":54,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38820,"byte_end":38831,"line_start":217,"line_end":217,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38997,"byte_end":39008,"line_start":223,"line_end":223,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39238,"byte_end":39249,"line_start":231,"line_end":231,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39367,"byte_end":39378,"line_start":238,"line_end":238,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39992,"byte_end":40000,"line_start":262,"line_end":262,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40546,"byte_end":40554,"line_start":280,"line_end":280,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42091,"byte_end":42100,"line_start":324,"line_end":324,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42127,"byte_end":42136,"line_start":325,"line_end":325,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42146,"byte_end":42155,"line_start":327,"line_end":327,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49734,"byte_end":49743,"line_start":552,"line_end":552,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49859,"byte_end":49868,"line_start":558,"line_end":558,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50000,"byte_end":50009,"line_start":564,"line_end":564,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50172,"byte_end":50181,"line_start":570,"line_end":570,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50305,"byte_end":50314,"line_start":576,"line_end":576,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50515,"byte_end":50524,"line_start":585,"line_end":585,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50757,"byte_end":50766,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":51761,"byte_end":51770,"line_start":630,"line_end":630,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55870,"byte_end":55879,"line_start":59,"line_end":59,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75489,"byte_end":75498,"line_start":599,"line_end":599,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75652,"byte_end":75661,"line_start":605,"line_end":605,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75879,"byte_end":75888,"line_start":613,"line_end":613,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":76004,"byte_end":76013,"line_start":620,"line_end":620,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/lib.rs","byte_start":916,"byte_end":920,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":3304,"byte_end":3316,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6325,"byte_end":6337,"line_start":149,"line_end":149,"column_start":56,"column_end":68},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6527,"byte_end":6539,"line_start":155,"line_end":155,"column_start":52,"column_end":64},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6793,"byte_end":6805,"line_start":163,"line_end":163,"column_start":61,"column_end":73},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":6934,"byte_end":6946,"line_start":170,"line_end":170,"column_start":18,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":414},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":7565,"byte_end":7573,"line_start":194,"line_end":194,"column_start":17,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":46},"to":{"krate":23,"index":68}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":8120,"byte_end":8128,"line_start":212,"line_end":212,"column_start":21,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9556,"byte_end":9566,"line_start":252,"line_end":252,"column_start":21,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":56},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9593,"byte_end":9603,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":56},"to":{"krate":1,"index":3872}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":9613,"byte_end":9623,"line_start":255,"line_end":255,"column_start":6,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":56},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12548,"byte_end":12558,"line_start":346,"line_end":346,"column_start":21,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12674,"byte_end":12684,"line_start":352,"line_end":352,"column_start":16,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":12829,"byte_end":12839,"line_start":358,"line_end":358,"column_start":54,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13017,"byte_end":13027,"line_start":364,"line_end":364,"column_start":50,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13269,"byte_end":13279,"line_start":372,"line_end":372,"column_start":59,"column_end":69},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13406,"byte_end":13416,"line_start":379,"line_end":379,"column_start":18,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":56},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":13650,"byte_end":13660,"line_start":392,"line_end":392,"column_start":20,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":56},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":14655,"byte_end":14665,"line_start":424,"line_end":424,"column_start":21,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":56},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":17775,"byte_end":17787,"line_start":516,"line_end":516,"column_start":6,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24510,"byte_end":24522,"line_start":727,"line_end":727,"column_start":56,"column_end":68},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24708,"byte_end":24720,"line_start":733,"line_end":733,"column_start":52,"column_end":64},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":24970,"byte_end":24982,"line_start":741,"line_end":741,"column_start":61,"column_end":73},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/unix.rs","byte_start":25111,"byte_end":25123,"line_start":748,"line_end":748,"column_start":18,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":25906,"byte_end":25912,"line_start":18,"line_end":18,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":148},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26585,"byte_end":26604,"line_start":39,"line_end":39,"column_start":24,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":26779,"byte_end":26798,"line_start":45,"line_end":45,"column_start":57,"column_end":76},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":9062}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27481,"byte_end":27491,"line_start":65,"line_end":65,"column_start":29,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7190},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27512,"byte_end":27522,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":7190},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27745,"byte_end":27757,"line_start":75,"line_end":75,"column_start":29,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":7218},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":27778,"byte_end":27790,"line_start":77,"line_end":77,"column_start":17,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":7218},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":28005,"byte_end":28017,"line_start":85,"line_end":85,"column_start":29,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":7221},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":28038,"byte_end":28050,"line_start":87,"line_end":87,"column_start":17,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":7221},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":31475,"byte_end":31481,"line_start":204,"line_end":204,"column_start":29,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/addr.rs","byte_start":31502,"byte_end":31508,"line_start":206,"line_end":206,"column_start":17,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":33317,"byte_end":33328,"line_start":54,"line_end":54,"column_start":6,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38820,"byte_end":38831,"line_start":217,"line_end":217,"column_start":45,"column_end":56},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":38997,"byte_end":39008,"line_start":223,"line_end":223,"column_start":41,"column_end":52},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39238,"byte_end":39249,"line_start":231,"line_end":231,"column_start":50,"column_end":61},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39367,"byte_end":39378,"line_start":238,"line_end":238,"column_start":18,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":39992,"byte_end":40000,"line_start":262,"line_end":262,"column_start":17,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":270},"to":{"krate":23,"index":68}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":40546,"byte_end":40554,"line_start":280,"line_end":280,"column_start":21,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42091,"byte_end":42100,"line_start":324,"line_end":324,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3871}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42127,"byte_end":42136,"line_start":325,"line_end":325,"column_start":24,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3872}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":42146,"byte_end":42155,"line_start":327,"line_end":327,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49734,"byte_end":49743,"line_start":552,"line_end":552,"column_start":21,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":49859,"byte_end":49868,"line_start":558,"line_end":558,"column_start":16,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50000,"byte_end":50009,"line_start":564,"line_end":564,"column_start":43,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50172,"byte_end":50181,"line_start":570,"line_end":570,"column_start":48,"column_end":57},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50305,"byte_end":50314,"line_start":576,"line_end":576,"column_start":39,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":280},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50515,"byte_end":50524,"line_start":585,"line_end":585,"column_start":18,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":8769}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":50757,"byte_end":50766,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":280},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/tcp.rs","byte_start":51761,"byte_end":51770,"line_start":630,"line_end":630,"column_start":21,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":280},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":55870,"byte_end":55879,"line_start":59,"line_end":59,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75489,"byte_end":75498,"line_start":599,"line_end":599,"column_start":43,"column_end":52},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75652,"byte_end":75661,"line_start":605,"line_end":605,"column_start":39,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":75879,"byte_end":75888,"line_start":613,"line_end":613,"column_start":48,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-net-1.5.0/src/udp.rs","byte_start":76004,"byte_end":76013,"line_start":620,"line_end":620,"column_start":18,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":432},"to":{"krate":1,"index":8769}}]}