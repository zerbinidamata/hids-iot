{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3","program":"/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bip39","--edition=2018","/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"chinese-simplified\"","--cfg","feature=\"chinese-traditional\"","--cfg","feature=\"default\"","--cfg","feature=\"french\"","--cfg","feature=\"italian\"","--cfg","feature=\"japanese\"","--cfg","feature=\"korean\"","--cfg","feature=\"spanish\"","-C","metadata=52807dfe5e086ec9","-C","extra-filename=-52807dfe5e086ec9","--out-dir","/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","-L","dependency=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","--extern","failure=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libfailure-882be419d912f423.rmeta","--extern","hmac=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libhmac-1f049cb784af3b01.rmeta","--extern","once_cell=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libonce_cell-36d29088a4f65987.rmeta","--extern","pbkdf2=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libpbkdf2-1be37f3735c45b79.rmeta","--extern","rand=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/librand-e8a5de3761150052.rmeta","--extern","rustc_hash=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/librustc_hash-b72ee979e5c83649.rmeta","--extern","sha2=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libsha2-d1cff6ba7e5f0b99.rmeta","--extern","unicode_normalization=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libunicode_normalization-dc118caf1cd82578.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu"],"output":"/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libbip39-52807dfe5e086ec9.rmeta"},"prelude":{"crate_id":{"name":"bip39","disambiguator":[6236229647752801186,4952076865520248303]},"crate_root":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src","external_crates":[{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":18,"id":{"name":"failure","disambiguator":[11831088602977107929,15299619397288062616]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":19,"id":{"name":"failure_derive","disambiguator":[3664726787689517824,3618482390841500381]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":20,"id":{"name":"backtrace","disambiguator":[9309387867310927252,4485396247196795723]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":21,"id":{"name":"rustc_demangle","disambiguator":[4050923033623787977,6585868120045361612]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":23,"id":{"name":"addr2line","disambiguator":[3660529096934478798,18165035533582110625]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":24,"id":{"name":"gimli","disambiguator":[467126543121056434,10447895090847301584]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[18230274762250471530,14699791712207546824]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":26,"id":{"name":"object","disambiguator":[8244884203215590527,3299812566441563853]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":27,"id":{"name":"miniz_oxide","disambiguator":[3272476372591374485,14660632617428449135]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","num":28,"id":{"name":"adler","disambiguator":[2705708406446853524,13444357598977729931]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":29,"id":{"name":"rand","disambiguator":[4659968796797094937,9175321218186041882]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":30,"id":{"name":"rand_core","disambiguator":[8117917336685663447,17463571095731030475]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":31,"id":{"name":"getrandom","disambiguator":[5001293322235198372,6811179816988731132]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":32,"id":{"name":"rand_chacha","disambiguator":[6708196951367086714,4514865697662962853]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":33,"id":{"name":"ppv_lite86","disambiguator":[4955318928114684575,7768061473571892432]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":34,"id":{"name":"rustc_hash","disambiguator":[2899680881299965521,3351650253772854689]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":35,"id":{"name":"once_cell","disambiguator":[11003055472096597441,2972392352729570343]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":36,"id":{"name":"parking_lot","disambiguator":[7756849129997653621,6606148246404574312]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":37,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":38,"id":{"name":"lock_api","disambiguator":[11531994514184985486,16527705314438861460]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":39,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":40,"id":{"name":"parking_lot_core","disambiguator":[9873190055940866410,7329379312384477631]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","num":41,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","num":42,"id":{"name":"unicode_normalization","disambiguator":[17396523243953084271,16085327971278709216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","num":43,"id":{"name":"tinyvec","disambiguator":[6927608017733428727,17547158427265738216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","num":44,"id":{"name":"tinyvec_macros","disambiguator":[12069190721701906036,1989476166457901195]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":45,"id":{"name":"hmac","disambiguator":[18173628802545763796,9997102177005553770]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":46,"id":{"name":"digest","disambiguator":[8135905660823846572,7976331011641593653]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":47,"id":{"name":"generic_array","disambiguator":[7792585385988569378,1048628986392467594]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":48,"id":{"name":"typenum","disambiguator":[9324505176739670608,7466037728328933032]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":49,"id":{"name":"crypto_mac","disambiguator":[9398085951998621489,1004082685279879334]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":50,"id":{"name":"subtle","disambiguator":[2461963045928777698,9783036260425898804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":51,"id":{"name":"sha2","disambiguator":[15320103801361821367,5795358369923728141]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":52,"id":{"name":"block_buffer","disambiguator":[17378167534436908997,11912961097034287803]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":53,"id":{"name":"byteorder","disambiguator":[9725841725534438382,15151977349478350136]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":54,"id":{"name":"block_padding","disambiguator":[6536457226507187524,13096456614147870598]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":55,"id":{"name":"byte_tools","disambiguator":[4563776192090798664,13975107662144777646]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":56,"id":{"name":"fake_simd","disambiguator":[8529024942259881634,1036883736573479363]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":57,"id":{"name":"opaque_debug","disambiguator":[14296233586290889095,7185983566499738172]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/crypto.rs","num":58,"id":{"name":"pbkdf2","disambiguator":[15085593870028543553,14709791485044618811]}}],"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":0,"byte_end":1077,"line_start":1,"line_end":46,"column_start":1,"column_end":20}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":954,"byte_end":963,"line_start":42,"line_end":42,"column_start":16,"column_end":25},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":983,"byte_end":991,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"alias_span":null,"name":"Language","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":1011,"byte_end":1019,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"Mnemonic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":1044,"byte_end":1056,"line_start":45,"line_end":45,"column_start":24,"column_end":36},"alias_span":null,"name":"MnemonicType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":1072,"byte_end":1076,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Seed","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":0,"byte_end":1077,"line_start":1,"line_end":46,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":71},{"krate":0,"index":111},{"krate":0,"index":128},{"krate":0,"index":144},{"krate":0,"index":209},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":"\n This is a Rust implementation of the [bip39][bip39-standard] standard for Bitcoin HD wallet\n mnemonic phrases.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":0,"byte_end":3,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"/ This is a Rust implementation of the [bip39][bip39-standard] standard for Bitcoin HD wallet","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":4,"byte_end":99,"line_start":2,"line_end":2,"column_start":1,"column_end":96}},{"value":"/ mnemonic phrases.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":100,"byte_end":121,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":122,"byte_end":125,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":126,"byte_end":129,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [bip39-standard]: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":130,"byte_end":214,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":215,"byte_end":218,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Quickstart","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":219,"byte_end":236,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":237,"byte_end":240,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":241,"byte_end":252,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ use bip39::{Mnemonic, MnemonicType, Language, Seed};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":253,"byte_end":309,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":310,"byte_end":313,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ /// create a new randomly generated mnemonic phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":314,"byte_end":369,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ let mnemonic = Mnemonic::new(MnemonicType::Words12, Language::English);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":370,"byte_end":445,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":446,"byte_end":449,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ /// get the phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":450,"byte_end":472,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ let phrase: &str = mnemonic.phrase();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":473,"byte_end":514,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ println!(\"phrase: {}\", phrase);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":515,"byte_end":550,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":551,"byte_end":554,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ /// get the HD wallet seed","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":555,"byte_end":585,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ let seed = Seed::new(&mnemonic, \"\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":586,"byte_end":626,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":627,"byte_end":630,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // get the HD wallet seed as raw bytes","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":631,"byte_end":673,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ let seed_bytes: &[u8] = seed.as_bytes();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":674,"byte_end":718,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":719,"byte_end":722,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // print the HD wallet seed as a hex string","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":723,"byte_end":770,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ println!(\"{:X}\", seed);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":771,"byte_end":798,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":799,"byte_end":806,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/lib.rs","byte_start":807,"byte_end":810,"line_start":29,"line_end":29,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1210,"byte_end":1225,"line_start":6,"line_end":6,"column_start":5,"column_end":20},"name":"InvalidChecksum","qualname":"::error::ErrorKind::InvalidChecksum","value":"ErrorKind::InvalidChecksum","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"invalid checksum\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1168,"byte_end":1205,"line_start":5,"line_end":5,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1279,"byte_end":1290,"line_start":8,"line_end":8,"column_start":5,"column_end":16},"name":"InvalidWord","qualname":"::error::ErrorKind::InvalidWord","value":"ErrorKind::InvalidWord","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"invalid word in phrase\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1231,"byte_end":1274,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1345,"byte_end":1359,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"InvalidKeysize","qualname":"::error::ErrorKind::InvalidKeysize","value":"ErrorKind::InvalidKeysize(usize)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"invalid keysize: {}\", _0)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1296,"byte_end":1340,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1439,"byte_end":1456,"line_start":12,"line_end":12,"column_start":5,"column_end":22},"name":"InvalidWordLength","qualname":"::error::ErrorKind::InvalidWordLength","value":"ErrorKind::InvalidWordLength(usize)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"invalid number of words in phrase: {}\", _0)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1372,"byte_end":1434,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":237},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1577,"byte_end":1597,"line_start":17,"line_end":17,"column_start":5,"column_end":25},"name":"InvalidEntropyLength","qualname":"::error::ErrorKind::InvalidEntropyLength","value":"ErrorKind::InvalidEntropyLength(usize, MnemonicType)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"fail(display = \"invalid entropy length {}bits for mnemonic type {:?}\", _0,\n       _1)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1469,"byte_end":1572,"line_start":13,"line_end":16,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":226},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/error.rs","byte_start":1152,"byte_end":1161,"line_start":4,"line_end":4,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    #[fail(display = \"invalid checksum\")]\n    InvalidChecksum,\n\n    #[fail(display = \"invalid word in phrase\")]\n    InvalidWord,\n\n    #[fail(display = \"invalid keysize: {}\", _0)]\n    InvalidKeysize(usize),\n\n    #[fail(display = \"invalid number of words in phrase: {}\", _0)]\n    InvalidWordLength(usize),\n\n    #[fail(display = \"invalid entropy length {}bits for mnemonic type {:?}\",\n           _0, _1)]\n    InvalidEntropyLength(usize, MnemonicType),\n}","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":1744,"byte_end":1751,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"WordMap","qualname":"::language::WordMap","value":"WordMap {  }","parent":null,"children":[{"krate":0,"index":14}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":1812,"byte_end":1820,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"WordList","qualname":"::language::WordList","value":"WordList {  }","parent":null,"children":[{"krate":0,"index":16}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":1882,"byte_end":1890,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"get_bits","qualname":"<WordMap>::get_bits","value":"pub fn get_bits(&Self, &str) -> Result<Bits11, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":2101,"byte_end":2109,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"get_word","qualname":"<WordList>::get_word","value":"pub fn get_word(&Self, Bits11) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":2208,"byte_end":2227,"line_start":28,"line_end":28,"column_start":12,"column_end":31},"name":"get_words_by_prefix","qualname":"<WordList>::get_words_by_prefix","value":"pub fn get_words_by_prefix(&Self, &str) -> &[&'static str]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":252},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6069,"byte_end":6076,"line_start":118,"line_end":118,"column_start":5,"column_end":12},"name":"English","qualname":"::language::Language::English","value":"Language::English","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6125,"byte_end":6142,"line_start":120,"line_end":120,"column_start":5,"column_end":22},"name":"ChineseSimplified","qualname":"::language::Language::ChineseSimplified","value":"Language::ChineseSimplified","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"chinese-simplified\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6082,"byte_end":6120,"line_start":119,"line_end":119,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6192,"byte_end":6210,"line_start":122,"line_end":122,"column_start":5,"column_end":23},"name":"ChineseTraditional","qualname":"::language::Language::ChineseTraditional","value":"Language::ChineseTraditional","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"chinese-traditional\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6148,"byte_end":6187,"line_start":121,"line_end":121,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6247,"byte_end":6253,"line_start":124,"line_end":124,"column_start":5,"column_end":11},"name":"French","qualname":"::language::Language::French","value":"Language::French","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"french\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6216,"byte_end":6242,"line_start":123,"line_end":123,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":260},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6291,"byte_end":6298,"line_start":126,"line_end":126,"column_start":5,"column_end":12},"name":"Italian","qualname":"::language::Language::Italian","value":"Language::Italian","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"italian\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6259,"byte_end":6286,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":262},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6337,"byte_end":6345,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Japanese","qualname":"::language::Language::Japanese","value":"Language::Japanese","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"japanese\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6304,"byte_end":6332,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6382,"byte_end":6388,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"Korean","qualname":"::language::Language::Korean","value":"Language::Korean","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"korean\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6351,"byte_end":6377,"line_start":129,"line_end":129,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6426,"byte_end":6433,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"Spanish","qualname":"::language::Language::Spanish","value":"Language::Spanish","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"spanish\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6394,"byte_end":6421,"line_start":131,"line_end":131,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":251},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6054,"byte_end":6062,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"Language","qualname":"::language::Language","value":"pub enum Language {\n    English,\n\n    #[cfg(feature = \"chinese-simplified\")]\n    ChineseSimplified,\n\n    #[cfg(feature = \"chinese-traditional\")]\n    ChineseTraditional,\n\n    #[cfg(feature = \"french\")]\n    French,\n\n    #[cfg(feature = \"italian\")]\n    Italian,\n\n    #[cfg(feature = \"japanese\")]\n    Japanese,\n\n    #[cfg(feature = \"korean\")]\n    Korean,\n\n    #[cfg(feature = \"spanish\")]\n    Spanish,\n}","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266}],"decl_id":null,"docs":" The language determines which words will be used in a mnemonic phrase, but also indirectly\n determines the binary value of each word when a [`Mnemonic`][Mnemonic] is turned into a [`Seed`][Seed].","sig":null,"attributes":[{"value":"/ The language determines which words will be used in a mnemonic phrase, but also indirectly","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5549,"byte_end":5643,"line_start":108,"line_end":108,"column_start":1,"column_end":95}},{"value":"/ determines the binary value of each word when a [`Mnemonic`][Mnemonic] is turned into a [`Seed`][Seed].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5644,"byte_end":5751,"line_start":109,"line_end":109,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5752,"byte_end":5755,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ These are not of much use right now, and may even be removed from the crate, as there is no","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5756,"byte_end":5851,"line_start":111,"line_end":111,"column_start":1,"column_end":96}},{"value":"/ official language specified by the standard except English.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5852,"byte_end":5915,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5916,"byte_end":5919,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [Mnemonic]: ./mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5920,"byte_end":5967,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/ [Seed]: ./seed/struct.Seed.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":5968,"byte_end":6003,"line_start":115,"line_end":115,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6592,"byte_end":6610,"line_start":138,"line_end":138,"column_start":12,"column_end":30},"name":"from_language_code","qualname":"<Language>::from_language_code","value":"pub fn from_language_code(&str) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a word list from its language code. Returns None\n if the language code is not valid or not supported.\n","sig":null,"attributes":[{"value":"/ Construct a word list from its language code. Returns None","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6458,"byte_end":6520,"line_start":136,"line_end":136,"column_start":5,"column_end":67}},{"value":"/ if the language code is not valid or not supported.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6525,"byte_end":6580,"line_start":137,"line_end":137,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":7493,"byte_end":7501,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"wordlist","qualname":"<Language>::wordlist","value":"pub fn wordlist(&Self) -> &'static WordList","parent":null,"children":[],"decl_id":null,"docs":" Get the word list for this language\n","sig":null,"attributes":[{"value":"/ Get the word list for this language","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":7442,"byte_end":7481,"line_start":159,"line_end":159,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":8639,"byte_end":8646,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"wordmap","qualname":"<Language>::wordmap","value":"pub fn wordmap(&Self) -> &'static WordMap","parent":null,"children":[],"decl_id":null,"docs":" Get a [`WordMap`][WordMap] that allows word -> index lookups in the word list","sig":null,"attributes":[{"value":"/ Get a [`WordMap`][WordMap] that allows word -> index lookups in the word list","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":8383,"byte_end":8464,"line_start":180,"line_end":180,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":8469,"byte_end":8472,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The index of an individual word in the word list is used as the binary value of that word","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":8477,"byte_end":8570,"line_start":182,"line_end":182,"column_start":5,"column_end":98}},{"value":"/ when the phrase is turned into a [`Seed`][Seed].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":8575,"byte_end":8627,"line_start":183,"line_end":183,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":276},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15306,"byte_end":15314,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Mnemonic","qualname":"::mnemonic::Mnemonic","value":"Mnemonic {  }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":" The primary type in this crate, most tasks require creating or using one.","sig":null,"attributes":[{"value":"/ The primary type in this crate, most tasks require creating or using one.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":13875,"byte_end":13952,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":13953,"byte_end":13956,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ To create a *new* [`Mnemonic`][Mnemonic] from a randomly generated key, call [`Mnemonic::new()`][Mnemonic::new()].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":13957,"byte_end":14075,"line_start":12,"line_end":12,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14076,"byte_end":14079,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To get a [`Mnemonic`][Mnemonic] instance for an existing mnemonic phrase, including","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14080,"byte_end":14167,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ those generated by other software or hardware wallets, use [`Mnemonic::from_phrase()`][Mnemonic::from_phrase()].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14168,"byte_end":14284,"line_start":15,"line_end":15,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14285,"byte_end":14288,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ You can get the HD wallet [`Seed`][Seed] from a [`Mnemonic`][Mnemonic] by calling [`Seed::new()`][Seed::new()].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14289,"byte_end":14404,"line_start":17,"line_end":17,"column_start":1,"column_end":116}},{"value":"/ From there you can either get the raw byte value with [`Seed::as_bytes()`][Seed::as_bytes()], or the hex","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14405,"byte_end":14513,"line_start":18,"line_end":18,"column_start":1,"column_end":109}},{"value":"/ representation using Rust formatting: `format!(\"{:X}\", seed)`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14514,"byte_end":14580,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14581,"byte_end":14584,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ You can also get the original entropy value back from a [`Mnemonic`][Mnemonic] with [`Mnemonic::entropy()`][Mnemonic::entropy()],","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14585,"byte_end":14718,"line_start":21,"line_end":21,"column_start":1,"column_end":134}},{"value":"/ but beware that the entropy value is **not the same thing** as an HD wallet seed, and should","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14719,"byte_end":14815,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ *never* be used that way.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14816,"byte_end":14845,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14846,"byte_end":14849,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Mnemonic]: ./mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14850,"byte_end":14897,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ [Mnemonic::new()]: ./mnemonic/struct.Mnemonic.html#method.new","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14898,"byte_end":14963,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ [Mnemonic::from_phrase()]: ./mnemonic/struct.Mnemonic.html#method.from_phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":14964,"byte_end":15045,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ [Mnemonic::entropy()]: ./mnemonic/struct.Mnemonic.html#method.entropy","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15046,"byte_end":15119,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ [Seed]: ./seed/struct.Seed.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15120,"byte_end":15155,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/ [Seed::new()]: ./seed/struct.Seed.html#method.new","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15156,"byte_end":15209,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ [Seed::as_bytes()]: ./seed/struct.Seed.html#method.as_bytes","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15210,"byte_end":15273,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15274,"byte_end":15277,"line_start":32,"line_end":32,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16050,"byte_end":16053,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Mnemonic>::new","value":"pub fn new(MnemonicType, Language) -> Mnemonic","parent":null,"children":[],"decl_id":null,"docs":" Generates a new [`Mnemonic`][Mnemonic]","sig":null,"attributes":[{"value":"/ Generates a new [`Mnemonic`][Mnemonic]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15402,"byte_end":15444,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15449,"byte_end":15452,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Use [`Mnemonic::phrase()`][Mnemonic::phrase()] to get an `str` slice of the generated phrase.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15457,"byte_end":15554,"line_start":43,"line_end":43,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15559,"byte_end":15562,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15567,"byte_end":15580,"line_start":45,"line_end":45,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15585,"byte_end":15588,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15593,"byte_end":15600,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use bip39::{Mnemonic, MnemonicType, Language};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15605,"byte_end":15655,"line_start":48,"line_end":48,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15660,"byte_end":15663,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let mnemonic = Mnemonic::new(MnemonicType::Words12, Language::English);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15668,"byte_end":15743,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ let phrase = mnemonic.phrase();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15748,"byte_end":15783,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15788,"byte_end":15791,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ println!(\"phrase: {}\", phrase);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15796,"byte_end":15831,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15836,"byte_end":15839,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(phrase.split(\" \").count(), 12);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15844,"byte_end":15890,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15895,"byte_end":15902,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15907,"byte_end":15910,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ [Mnemonic]: ./mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15915,"byte_end":15962,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/ [Mnemonic::phrase()]: ./mnemonic/struct.Mnemonic.html#method.phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15967,"byte_end":16038,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16906,"byte_end":16918,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"from_entropy","qualname":"<Mnemonic>::from_entropy","value":"pub fn from_entropy(&[u8], Language) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Mnemonic`][Mnemonic] from pre-generated entropy","sig":null,"attributes":[{"value":"/ Create a [`Mnemonic`][Mnemonic] from pre-generated entropy","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16239,"byte_end":16301,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16306,"byte_end":16309,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16314,"byte_end":16327,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16332,"byte_end":16335,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16340,"byte_end":16347,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use bip39::{Mnemonic, MnemonicType, Language};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16352,"byte_end":16402,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16407,"byte_end":16410,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let entropy = &[0x33, 0xE4, 0x6B, 0xB1, 0x3A, 0x74, 0x6E, 0xA4, 0x1C, 0xDD, 0xE4, 0x5C, 0x90, 0x84, 0x6A, 0x79];","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16415,"byte_end":16531,"line_start":73,"line_end":73,"column_start":5,"column_end":121}},{"value":"/ let mnemonic = Mnemonic::from_entropy(entropy, Language::English).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16536,"byte_end":16615,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16620,"byte_end":16623,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"crop cash unable insane eight faith inflict route frame loud box vibrant\", mnemonic.phrase());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16628,"byte_end":16738,"line_start":76,"line_end":76,"column_start":5,"column_end":115}},{"value":"/ assert_eq!(\"33E46BB13A746EA41CDDE45C90846A79\", format!(\"{:X}\", mnemonic));","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16743,"byte_end":16821,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16826,"byte_end":16833,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16838,"byte_end":16841,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [Mnemonic]: ../mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":16846,"byte_end":16894,"line_start":80,"line_end":80,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18778,"byte_end":18789,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"from_phrase","qualname":"<Mnemonic>::from_phrase","value":"pub fn from_phrase(&str, Language) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Mnemonic`][Mnemonic] from an existing mnemonic phrase","sig":null,"attributes":[{"value":"/ Create a [`Mnemonic`][Mnemonic] from an existing mnemonic phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18158,"byte_end":18226,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18231,"byte_end":18234,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The phrase supplied will be checked for word length and validated according to the checksum","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18239,"byte_end":18334,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ specified in BIP0039","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18339,"byte_end":18363,"line_start":123,"line_end":123,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18368,"byte_end":18371,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18376,"byte_end":18389,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18394,"byte_end":18397,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18402,"byte_end":18409,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use bip39::{Mnemonic, Language};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18414,"byte_end":18450,"line_start":128,"line_end":128,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18455,"byte_end":18458,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18463,"byte_end":18556,"line_start":130,"line_end":130,"column_start":5,"column_end":98}},{"value":"/ let mnemonic = Mnemonic::from_phrase(phrase, Language::English).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18561,"byte_end":18638,"line_start":131,"line_end":131,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18643,"byte_end":18646,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(phrase, mnemonic.phrase());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18651,"byte_end":18693,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18698,"byte_end":18705,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18710,"byte_end":18713,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [Mnemonic]: ../mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":18718,"byte_end":18766,"line_start":136,"line_end":136,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19922,"byte_end":19930,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"validate","qualname":"<Mnemonic>::validate","value":"pub fn validate(&str, Language) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Validate a mnemonic phrase","sig":null,"attributes":[{"value":"/ Validate a mnemonic phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19443,"byte_end":19473,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19478,"byte_end":19481,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The phrase supplied will be checked for word length and validated according to the checksum","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19486,"byte_end":19581,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ specified in BIP0039.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19586,"byte_end":19611,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19616,"byte_end":19619,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19624,"byte_end":19637,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19642,"byte_end":19645,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19650,"byte_end":19657,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use bip39::{Mnemonic, Language};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19662,"byte_end":19698,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19703,"byte_end":19706,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let test_mnemonic = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19711,"byte_end":19811,"line_start":167,"line_end":167,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19816,"byte_end":19819,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert!(Mnemonic::validate(test_mnemonic, Language::English).is_ok());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19824,"byte_end":19898,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":19903,"byte_end":19910,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21613,"byte_end":21619,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"phrase","qualname":"<Mnemonic>::phrase","value":"pub fn phrase(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the mnemonic phrase as a string reference.\n","sig":null,"attributes":[{"value":"/ Get the mnemonic phrase as a string reference.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21551,"byte_end":21601,"line_start":217,"line_end":217,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21808,"byte_end":21819,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"into_phrase","qualname":"<Mnemonic>::into_phrase","value":"pub fn into_phrase(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Mnemonic` and return the phrase as a `String`.","sig":null,"attributes":[{"value":"/ Consume the `Mnemonic` and return the phrase as a `String`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21669,"byte_end":21732,"line_start":222,"line_end":222,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21737,"byte_end":21740,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This operation doesn't perform any allocations.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21745,"byte_end":21796,"line_start":224,"line_end":224,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22440,"byte_end":22447,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"entropy","qualname":"<Mnemonic>::entropy","value":"pub fn entropy(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the original entropy value of the mnemonic phrase as a slice.","sig":null,"attributes":[{"value":"/ Get the original entropy value of the mnemonic phrase as a slice.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21869,"byte_end":21938,"line_start":229,"line_end":229,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21943,"byte_end":21946,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21951,"byte_end":21964,"line_start":231,"line_end":231,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21969,"byte_end":21972,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21977,"byte_end":21984,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use bip39::{Mnemonic, Language};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":21989,"byte_end":22025,"line_start":234,"line_end":234,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22030,"byte_end":22033,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22038,"byte_end":22131,"line_start":236,"line_end":236,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22136,"byte_end":22139,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let mnemonic = Mnemonic::from_phrase(phrase, Language::English).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22144,"byte_end":22221,"line_start":238,"line_end":238,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22226,"byte_end":22229,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ let entropy: &[u8] = mnemonic.entropy();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22234,"byte_end":22278,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22283,"byte_end":22290,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22295,"byte_end":22298,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ **Note:** You shouldn't use the generated entropy as secrets, for that generate a new","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22303,"byte_end":22392,"line_start":243,"line_end":243,"column_start":5,"column_end":94}},{"value":"/ `Seed` from the `Mnemonic`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22397,"byte_end":22428,"line_start":244,"line_end":244,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22606,"byte_end":22614,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"language","qualname":"<Mnemonic>::language","value":"pub fn language(&Self) -> Language","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Language`][Language]","sig":null,"attributes":[{"value":"/ Get the [`Language`][Language]","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22499,"byte_end":22533,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22538,"byte_end":22541,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [Language]: ../language/struct.Language.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22546,"byte_end":22594,"line_start":251,"line_end":251,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":283},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27421,"byte_end":27428,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Words12","qualname":"::mnemonic_type::MnemonicType::Words12","value":"MnemonicType::Words12","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":286},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27464,"byte_end":27471,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Words15","qualname":"::mnemonic_type::MnemonicType::Words15","value":"MnemonicType::Words15","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":289},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27507,"byte_end":27514,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"Words18","qualname":"::mnemonic_type::MnemonicType::Words18","value":"MnemonicType::Words18","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":292},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27550,"byte_end":27557,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Words21","qualname":"::mnemonic_type::MnemonicType::Words21","value":"MnemonicType::Words21","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27593,"byte_end":27600,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"name":"Words24","qualname":"::mnemonic_type::MnemonicType::Words24","value":"MnemonicType::Words24","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":282},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27348,"byte_end":27360,"line_start":33,"line_end":33,"column_start":10,"column_end":22},"name":"MnemonicType","qualname":"::mnemonic_type::MnemonicType","value":"pub enum MnemonicType {\n    Words12 = ,\n    Words15 = ,\n    Words18 = ,\n    Words21 = ,\n    Words24 = ,\n}","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295}],"decl_id":null,"docs":" Determines the number of words that will be present in a [`Mnemonic`][Mnemonic] phrase","sig":null,"attributes":[{"value":"/ Determines the number of words that will be present in a [`Mnemonic`][Mnemonic] phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26254,"byte_end":26344,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26345,"byte_end":26348,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Also directly affects the amount of entropy that will be used to create a [`Mnemonic`][Mnemonic],","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26349,"byte_end":26450,"line_start":9,"line_end":9,"column_start":1,"column_end":102}},{"value":"/ and therefore the cryptographic strength of the HD wallet keys/addresses that can be derived from","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26451,"byte_end":26552,"line_start":10,"line_end":10,"column_start":1,"column_end":102}},{"value":"/ it using the [`Seed`][Seed].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26553,"byte_end":26585,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26586,"byte_end":26589,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For example, a 12 word mnemonic phrase is essentially a friendly representation of a 128-bit key,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26590,"byte_end":26691,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/ while a 24 word mnemonic phrase is essentially a 256-bit key.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26692,"byte_end":26757,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26758,"byte_end":26761,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If you know you want a specific phrase length, you can use the enum variant directly, for example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26762,"byte_end":26863,"line_start":16,"line_end":16,"column_start":1,"column_end":102}},{"value":"/ `MnemonicType::Words12`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26864,"byte_end":26892,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26893,"byte_end":26896,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ You can also get a `MnemonicType` that corresponds to one of the standard BIP39 key sizes by","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26897,"byte_end":26993,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ passing arbitrary `usize` values:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":26994,"byte_end":27031,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27032,"byte_end":27035,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27036,"byte_end":27043,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27044,"byte_end":27074,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27075,"byte_end":27078,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mnemonic_type = MnemonicType::for_key_size(128).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27079,"byte_end":27144,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27145,"byte_end":27152,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27153,"byte_end":27156,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [MnemonicType]: ../mnemonic_type/struct.MnemonicType.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27157,"byte_end":27218,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/ [Mnemonic]: ../mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27219,"byte_end":27267,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ [Seed]: ../seed/struct.Seed.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27268,"byte_end":27304,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27305,"byte_end":27308,"line_start":31,"line_end":31,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28063,"byte_end":28077,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"for_word_count","qualname":"<MnemonicType>::for_word_count","value":"pub fn for_word_count(usize) -> Result<MnemonicType, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a `MnemonicType` for a mnemonic phrase with a specific number of words","sig":null,"attributes":[{"value":"/ Get a `MnemonicType` for a mnemonic phrase with a specific number of words","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27659,"byte_end":27737,"line_start":43,"line_end":43,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27742,"byte_end":27745,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Specifying a word count not provided for by the BIP39 standard will return an `Error`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27750,"byte_end":27839,"line_start":45,"line_end":45,"column_start":5,"column_end":94}},{"value":"/ of kind `ErrorKind::InvalidWordLength`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27844,"byte_end":27887,"line_start":46,"line_end":46,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27892,"byte_end":27895,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27900,"byte_end":27913,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27918,"byte_end":27925,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27930,"byte_end":27960,"line_start":50,"line_end":50,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27965,"byte_end":27968,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::for_word_count(12).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27973,"byte_end":28039,"line_start":52,"line_end":52,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28044,"byte_end":28051,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28884,"byte_end":28896,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"for_key_size","qualname":"<MnemonicType>::for_key_size","value":"pub fn for_key_size(usize) -> Result<MnemonicType, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a `MnemonicType` for a mnemonic phrase representing the given key size as bits","sig":null,"attributes":[{"value":"/ Get a `MnemonicType` for a mnemonic phrase representing the given key size as bits","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28478,"byte_end":28564,"line_start":67,"line_end":67,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28569,"byte_end":28572,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Specifying a key size not provided for by the BIP39 standard will return an `Error`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28577,"byte_end":28664,"line_start":69,"line_end":69,"column_start":5,"column_end":92}},{"value":"/ of kind `ErrorKind::InvalidKeysize`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28669,"byte_end":28709,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28714,"byte_end":28717,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28722,"byte_end":28735,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28740,"byte_end":28747,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28752,"byte_end":28782,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28787,"byte_end":28790,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::for_key_size(128).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28795,"byte_end":28860,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":28865,"byte_end":28872,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30267,"byte_end":30277,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"for_phrase","qualname":"<MnemonicType>::for_phrase","value":"pub fn for_phrase(&str) -> Result<MnemonicType, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a `MnemonicType` for an existing mnemonic phrase","sig":null,"attributes":[{"value":"/ Get a `MnemonicType` for an existing mnemonic phrase","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29299,"byte_end":29355,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29360,"byte_end":29363,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be used when you need information about a mnemonic phrase based on the number of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29368,"byte_end":29461,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/ words, for example you can get the entropy value using [`MnemonicType::entropy_bits`][MnemonicType::entropy_bits()].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29466,"byte_end":29586,"line_start":94,"line_end":94,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29591,"byte_end":29594,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Specifying a phrase that does not match one of the standard BIP39 phrase lengths will return","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29599,"byte_end":29695,"line_start":96,"line_end":96,"column_start":5,"column_end":101}},{"value":"/ an `Error` of kind `ErrorKind::InvalidWordLength`. The phrase will not be validated in any","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29700,"byte_end":29794,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ other way.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29799,"byte_end":29813,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29818,"byte_end":29821,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29826,"byte_end":29839,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29844,"byte_end":29851,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29856,"byte_end":29886,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29891,"byte_end":29894,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let test_mnemonic = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":29899,"byte_end":29999,"line_start":104,"line_end":104,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30004,"byte_end":30007,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::for_phrase(test_mnemonic).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30012,"byte_end":30085,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30090,"byte_end":30093,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let entropy_bits = mnemonic_type.entropy_bits();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30098,"byte_end":30150,"line_start":108,"line_end":108,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30155,"byte_end":30162,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30167,"byte_end":30170,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [MnemonicType::entropy_bits()]: ./enum.MnemonicType.html#method.entropy_bits","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30175,"byte_end":30255,"line_start":111,"line_end":111,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30841,"byte_end":30851,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"total_bits","qualname":"<MnemonicType>::total_bits","value":"pub fn total_bits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of entropy+checksum bits","sig":null,"attributes":[{"value":"/ Return the number of entropy+checksum bits","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30430,"byte_end":30476,"line_start":118,"line_end":118,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30481,"byte_end":30484,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30489,"byte_end":30492,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30497,"byte_end":30510,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30515,"byte_end":30522,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30527,"byte_end":30557,"line_start":123,"line_end":123,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30562,"byte_end":30565,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let test_mnemonic = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30570,"byte_end":30670,"line_start":125,"line_end":125,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30675,"byte_end":30678,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::for_phrase(test_mnemonic).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30683,"byte_end":30756,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30761,"byte_end":30764,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let total_bits = mnemonic_type.total_bits();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30769,"byte_end":30817,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30822,"byte_end":30829,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31347,"byte_end":31359,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"entropy_bits","qualname":"<MnemonicType>::entropy_bits","value":"pub fn entropy_bits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of entropy bits","sig":null,"attributes":[{"value":"/ Return the number of entropy bits","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30941,"byte_end":30978,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30983,"byte_end":30986,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30991,"byte_end":30994,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":30999,"byte_end":31012,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31017,"byte_end":31024,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31029,"byte_end":31059,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31064,"byte_end":31067,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let test_mnemonic = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31072,"byte_end":31172,"line_start":142,"line_end":142,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31177,"byte_end":31180,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::for_phrase(test_mnemonic).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31185,"byte_end":31258,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31263,"byte_end":31266,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let entropy_bits = mnemonic_type.entropy_bits();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31271,"byte_end":31323,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31328,"byte_end":31335,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31841,"byte_end":31854,"line_start":165,"line_end":165,"column_start":12,"column_end":25},"name":"checksum_bits","qualname":"<MnemonicType>::checksum_bits","value":"pub fn checksum_bits(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the number of checksum bits","sig":null,"attributes":[{"value":"/ Return the number of checksum bits","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31432,"byte_end":31470,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31475,"byte_end":31478,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31483,"byte_end":31486,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31491,"byte_end":31504,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31509,"byte_end":31516,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31521,"byte_end":31551,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31556,"byte_end":31559,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let test_mnemonic = \"park remain person kitchen mule spell knee armed position rail grid ankle\";","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31564,"byte_end":31664,"line_start":159,"line_end":159,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31669,"byte_end":31672,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::for_phrase(test_mnemonic).unwrap();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31677,"byte_end":31750,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31755,"byte_end":31758,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let checksum_bits = mnemonic_type.checksum_bits();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31763,"byte_end":31817,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31822,"byte_end":31829,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32167,"byte_end":32177,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"word_count","qualname":"<MnemonicType>::word_count","value":"pub fn word_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of words","sig":null,"attributes":[{"value":"/ Return the number of words","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31912,"byte_end":31942,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31947,"byte_end":31950,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31955,"byte_end":31958,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31963,"byte_end":31976,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31981,"byte_end":31988,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use bip39::{MnemonicType};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":31993,"byte_end":32023,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32028,"byte_end":32031,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let mnemonic_type = MnemonicType::Words12;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32036,"byte_end":32082,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32087,"byte_end":32090,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let word_count = mnemonic_type.word_count();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32095,"byte_end":32143,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32148,"byte_end":32155,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34606,"byte_end":34610,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Seed","qualname":"::seed::Seed","value":"Seed {  }","parent":null,"children":[{"krate":0,"index":304}],"decl_id":null,"docs":" The secret value used to derive HD wallet addresses from a [`Mnemonic`][Mnemonic] phrase.","sig":null,"attributes":[{"value":"/ The secret value used to derive HD wallet addresses from a [`Mnemonic`][Mnemonic] phrase.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":33804,"byte_end":33897,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":33898,"byte_end":33901,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Because it is not possible to create a [`Mnemonic`][Mnemonic] instance that is invalid, it is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":33902,"byte_end":33999,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ therefore impossible to have a [`Seed`][Seed] instance that is invalid. This guarantees that only","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34000,"byte_end":34101,"line_start":9,"line_end":9,"column_start":1,"column_end":102}},{"value":"/ a valid, intact mnemonic phrase can be used to derive HD wallet addresses.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34102,"byte_end":34180,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34181,"byte_end":34184,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ To get the raw byte value use [`Seed::as_bytes()`][Seed::as_bytes()]. These can be used to derive","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34185,"byte_end":34286,"line_start":12,"line_end":12,"column_start":1,"column_end":102}},{"value":"/ HD wallet addresses using another crate (deriving HD wallet addresses is outside the scope of this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34287,"byte_end":34389,"line_start":13,"line_end":13,"column_start":1,"column_end":103}},{"value":"/ crate and the BIP39 standard).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34390,"byte_end":34424,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34425,"byte_end":34428,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [Mnemonic]: ./mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34429,"byte_end":34476,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ [Seed]: ./seed/struct.Seed.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34477,"byte_end":34512,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ [Seed::as_bytes()]: ./seed/struct.Seed.html#method.as_bytes","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34513,"byte_end":34576,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34796,"byte_end":34799,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Seed>::new","value":"pub fn new(&Mnemonic, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates the seed from the [`Mnemonic`][Mnemonic] and the password.","sig":null,"attributes":[{"value":"/ Generates the seed from the [`Mnemonic`][Mnemonic] and the password.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34652,"byte_end":34724,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34729,"byte_end":34732,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [Mnemonic]: ./mnemonic/struct.Mnemonic.html","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34737,"byte_end":34784,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35115,"byte_end":35123,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Seed>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the seed value as a byte slice\n","sig":null,"attributes":[{"value":"/ Get the seed value as a byte slice","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35065,"byte_end":35103,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42001,"byte_end":42007,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Bits11","qualname":"::util::Bits11","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":1861,"byte_end":1868,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":2079,"byte_end":2087,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6443,"byte_end":6451,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":9534,"byte_end":9542,"line_start":205,"line_end":205,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15387,"byte_end":15395,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22683,"byte_end":22691,"line_start":257,"line_end":257,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22778,"byte_end":22786,"line_start":263,"line_end":263,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22921,"byte_end":22929,"line_start":269,"line_end":269,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":23065,"byte_end":23073,"line_start":275,"line_end":275,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":23340,"byte_end":23348,"line_start":289,"line_end":289,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":23616,"byte_end":23622,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27640,"byte_end":27652,"line_start":42,"line_end":42,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32253,"byte_end":32265,"line_start":185,"line_end":185,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32364,"byte_end":32376,"line_start":191,"line_end":191,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34641,"byte_end":34645,"line_start":25,"line_end":25,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35192,"byte_end":35196,"line_start":43,"line_end":43,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35284,"byte_end":35288,"line_start":49,"line_end":49,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35415,"byte_end":35419,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35683,"byte_end":35687,"line_start":69,"line_end":69,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":41533,"byte_end":41547,"line_start":50,"line_end":50,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":41662,"byte_end":41663,"line_start":56,"line_end":56,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42029,"byte_end":42035,"line_start":83,"line_end":83,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42144,"byte_end":42150,"line_start":91,"line_end":91,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42397,"byte_end":42406,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":43503,"byte_end":43510,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":43843,"byte_end":43850,"line_start":175,"line_end":175,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":1861,"byte_end":1868,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":2079,"byte_end":2087,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":15},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":6443,"byte_end":6451,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/language.rs","byte_start":9534,"byte_end":9542,"line_start":205,"line_end":205,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":15387,"byte_end":15395,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22683,"byte_end":22691,"line_start":257,"line_end":257,"column_start":21,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22778,"byte_end":22786,"line_start":263,"line_end":263,"column_start":23,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":22921,"byte_end":22929,"line_start":269,"line_end":269,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":23065,"byte_end":23073,"line_start":275,"line_end":275,"column_start":24,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6574}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":23340,"byte_end":23348,"line_start":289,"line_end":289,"column_start":24,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6576}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic.rs","byte_start":23616,"byte_end":23622,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":5316},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":27640,"byte_end":27652,"line_start":42,"line_end":42,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32253,"byte_end":32265,"line_start":185,"line_end":185,"column_start":18,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/mnemonic_type.rs","byte_start":32364,"byte_end":32376,"line_start":191,"line_end":191,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":34641,"byte_end":34645,"line_start":25,"line_end":25,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35192,"byte_end":35196,"line_start":43,"line_end":43,"column_start":22,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35284,"byte_end":35288,"line_start":49,"line_end":49,"column_start":21,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35415,"byte_end":35419,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":6574}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/seed.rs","byte_start":35683,"byte_end":35687,"line_start":69,"line_end":69,"column_start":24,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":6576}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":40467,"byte_end":40475,"line_start":3,"line_end":3,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":5283},"to":{"krate":0,"index":146}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":41533,"byte_end":41547,"line_start":50,"line_end":50,"column_start":45,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":42,"index":253},"to":{"krate":0,"index":151}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":41662,"byte_end":41663,"line_start":56,"line_end":56,"column_start":31,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":159},"to":{"krate":0,"index":146}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42029,"byte_end":42035,"line_start":83,"line_end":83,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":307},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42144,"byte_end":42150,"line_start":91,"line_end":91,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":42397,"byte_end":42406,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":43503,"byte_end":43510,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/tiny-bip39-0.7.3/src/util.rs","byte_start":43843,"byte_end":43850,"line_start":175,"line_end":175,"column_start":31,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":5283}}]}