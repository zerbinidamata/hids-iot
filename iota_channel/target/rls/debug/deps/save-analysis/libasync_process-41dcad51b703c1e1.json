{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2","program":"/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_process","--edition=2018","/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=41dcad51b703c1e1","-C","extra-filename=-41dcad51b703c1e1","--out-dir","/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","-L","dependency=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","--extern","async_io=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libasync_io-e4bd184615bbff99.rmeta","--extern","cfg_if=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libcfg_if-7cda86b417f03dc6.rmeta","--extern","event_listener=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libevent_listener-c4d2e533b814973a.rmeta","--extern","futures_lite=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libfutures_lite-67e243f880328f2d.rmeta","--extern","once_cell=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libonce_cell-36d29088a4f65987.rmeta","--extern","signal_hook=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libsignal_hook-76561943443d006b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu"],"output":"/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libasync_process-41dcad51b703c1e1.rmeta"},"prelude":{"crate_id":{"name":"async_process","disambiguator":[15717120775238126817,6498736184327218046]},"crate_root":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src","external_crates":[{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":18,"id":{"name":"async_io","disambiguator":[13063298341276347554,1022904432523041848]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":19,"id":{"name":"futures_lite","disambiguator":[236732238567356365,12995901554002859926]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[8752250229915605731,5032511442079182267]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":21,"id":{"name":"parking","disambiguator":[1999498884191094626,9252083634413959091]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":22,"id":{"name":"waker_fn","disambiguator":[6477177352258648891,1408471870261056396]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":23,"id":{"name":"futures_core","disambiguator":[17387797789998290180,8957684133523654957]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":24,"id":{"name":"futures_io","disambiguator":[6824782900905729461,4638695658688622893]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":25,"id":{"name":"fastrand","disambiguator":[2557478997660195169,13453224216195452879]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":26,"id":{"name":"memchr","disambiguator":[8299827481518300842,8423653226847344489]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":27,"id":{"name":"socket2","disambiguator":[5087978609298347259,9376823878177385951]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[18230274762250471530,14699791712207546824]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":29,"id":{"name":"once_cell","disambiguator":[11003055472096597441,2972392352729570343]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":30,"id":{"name":"parking_lot","disambiguator":[7756849129997653621,6606148246404574312]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":31,"id":{"name":"instant","disambiguator":[16657590810520803667,6600116491891240348]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":32,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":33,"id":{"name":"lock_api","disambiguator":[11531994514184985486,16527705314438861460]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":34,"id":{"name":"scopeguard","disambiguator":[10393400622481042710,15774391541485536781]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":35,"id":{"name":"parking_lot_core","disambiguator":[9873190055940866410,7329379312384477631]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":36,"id":{"name":"smallvec","disambiguator":[2602844660267825758,15179553114549196714]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":37,"id":{"name":"concurrent_queue","disambiguator":[18213822786008996053,10867190005056278931]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":38,"id":{"name":"cache_padded","disambiguator":[18353092046062123632,1298457636792068056]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":39,"id":{"name":"polling","disambiguator":[17806240617201778155,7470152498904838731]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":40,"id":{"name":"log","disambiguator":[11013293275619222107,10669941403084918630]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":41,"id":{"name":"vec_arena","disambiguator":[5920446079712745720,7686973874760916517]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":42,"id":{"name":"event_listener","disambiguator":[1329321184522063609,6930102895973449987]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":43,"id":{"name":"signal_hook","disambiguator":[3292557207749384517,13187433273203132554]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","num":44,"id":{"name":"signal_hook_registry","disambiguator":[13939289767268831830,1815055154828635874]}}],"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":0,"byte_end":25925,"line_start":1,"line_end":839,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":7938},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1977,"byte_end":1987,"line_start":70,"line_end":70,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":7925},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1989,"byte_end":1995,"line_start":70,"line_end":70,"column_start":36,"column_end":42},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":4448},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1997,"byte_end":2002,"line_start":70,"line_end":70,"column_start":44,"column_end":49},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":0,"byte_end":25925,"line_start":1,"line_end":839,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":76},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":78},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":82},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":84},{"krate":0,"index":141},{"krate":0,"index":148},{"krate":0,"index":86}],"decl_id":null,"docs":" Async interface for working with processes.","sig":null,"attributes":[{"value":"/ Async interface for working with processes.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":0,"byte_end":47,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":48,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is an async version of [`std::process`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":52,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":108,"byte_end":111,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":112,"byte_end":132,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":133,"byte_end":136,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A background thread named \"async-process\" is lazily created on first use, which waits for","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":137,"byte_end":230,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/ spawned child processes to exit and then calls the `wait()` syscall to clean up the \"zombie\"","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":231,"byte_end":327,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ processes. This is unlike the `process` API in the standard library, where dropping a running","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":328,"byte_end":425,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ `Child` leaks its resources.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":426,"byte_end":458,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":459,"byte_end":462,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate uses [`async-io`] for async I/O on Unix-like systems and [`blocking`] for async I/O","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":463,"byte_end":561,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"/ on Windows.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":562,"byte_end":577,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":578,"byte_end":581,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`async-io`]: https://docs.rs/async-io","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":582,"byte_end":624,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [`blocking`]: https://docs.rs/blocking","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":625,"byte_end":667,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":668,"byte_end":671,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":672,"byte_end":686,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":687,"byte_end":690,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Spawn a process and collect its output:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":691,"byte_end":734,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":735,"byte_end":738,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":739,"byte_end":752,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":753,"byte_end":797,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":798,"byte_end":829,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":830,"byte_end":833,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let out = Command::new(\"echo\").arg(\"hello\").arg(\"world\").output().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":834,"byte_end":911,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(out.stdout, b\"hello world\\n\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":912,"byte_end":957,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":958,"byte_end":991,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":992,"byte_end":999,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1000,"byte_end":1003,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Read the output line-by-line as it gets produced:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1004,"byte_end":1057,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1058,"byte_end":1061,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1062,"byte_end":1075,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1076,"byte_end":1120,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1121,"byte_end":1161,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ use futures_lite::{io::BufReader, prelude::*};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1162,"byte_end":1212,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1213,"byte_end":1216,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut child = Command::new(\"find\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1217,"byte_end":1257,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     .arg(\".\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1258,"byte_end":1275,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/     .stdout(Stdio::piped())","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1276,"byte_end":1307,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/     .spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1308,"byte_end":1326,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1327,"byte_end":1330,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut lines = BufReader::new(child.stdout.take().unwrap()).lines();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1331,"byte_end":1404,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1405,"byte_end":1408,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1409,"byte_end":1456,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1457,"byte_end":1487,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1488,"byte_end":1493,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1494,"byte_end":1527,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1528,"byte_end":1535,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":1537,"byte_end":1608,"line_start":51,"line_end":51,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::unix","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":38}],"decl_id":null,"docs":" Unix-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2006,"byte_end":2018,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/ Unix-specific extensions.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":25927,"byte_end":25956,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26126,"byte_end":26136,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"CommandExt","qualname":"::unix::CommandExt","value":"CommandExt","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" Unix-specific extensions to the [`Command`] builder.\n","sig":null,"attributes":[{"value":"/ Unix-specific extensions to the [`Command`] builder.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26059,"byte_end":26115,"line_start":9,"line_end":9,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26320,"byte_end":26323,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"uid","qualname":"::unix::CommandExt::uid","value":"pub fn uid(&mut Self, u32) -> &mut Command","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26143,"byte_end":26201,"line_start":11,"line_end":11,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26206,"byte_end":26269,"line_start":12,"line_end":12,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26274,"byte_end":26312,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26495,"byte_end":26498,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"gid","qualname":"::unix::CommandExt::gid","value":"pub fn gid(&mut Self, u32) -> &mut Command","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Similar to `uid`, but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid`, but sets the group ID of the child process. This has","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26366,"byte_end":26440,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26445,"byte_end":26487,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28095,"byte_end":28103,"line_start":49,"line_end":49,"column_start":15,"column_end":23},"name":"pre_exec","qualname":"::unix::CommandExt::pre_exec","value":"pub unsafe fn pre_exec<F>(&mut Self, F) -> &mut Command where F: FnMut() ->\nio::Result<()> + Send + Sync + 'static","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26541,"byte_end":26609,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26614,"byte_end":26626,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26631,"byte_end":26634,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26639,"byte_end":26713,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26718,"byte_end":26791,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26796,"byte_end":26824,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26829,"byte_end":26832,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26837,"byte_end":26912,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26917,"byte_end":26992,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":26997,"byte_end":27070,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27075,"byte_end":27087,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27092,"byte_end":27095,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Notes and Safety","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27100,"byte_end":27122,"line_start":32,"line_end":32,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27127,"byte_end":27130,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27135,"byte_end":27207,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27212,"byte_end":27285,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27290,"byte_end":27363,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27368,"byte_end":27440,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27445,"byte_end":27518,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27523,"byte_end":27588,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27593,"byte_end":27596,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27601,"byte_end":27668,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27673,"byte_end":27748,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27753,"byte_end":27824,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27829,"byte_end":27865,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27870,"byte_end":27873,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27878,"byte_end":27954,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":27959,"byte_end":28031,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28036,"byte_end":28080,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29757,"byte_end":29761,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"exec","qualname":"::unix::CommandExt::exec","value":"pub fn exec(&mut Self) -> io::Error","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Performs all the required setup by this `Command`, followed by calling\n the `execvp` syscall.","sig":null,"attributes":[{"value":"/ Performs all the required setup by this `Command`, followed by calling","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28217,"byte_end":28291,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the `execvp` syscall.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28296,"byte_end":28321,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28326,"byte_end":28329,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ On success this function will not return, and otherwise it will return","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28334,"byte_end":28408,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ an error indicating why the exec (or another part of the setup of the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28413,"byte_end":28486,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ `Command`) failed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28491,"byte_end":28513,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28518,"byte_end":28521,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `exec` not returning has the same implications as calling","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28526,"byte_end":28587,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ [`std::process::exit`] – no destructors on the current stack or any other","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28592,"byte_end":28671,"line_start":61,"line_end":61,"column_start":5,"column_end":82}},{"value":"/ thread’s stack will be run. Therefore, it is recommended to only call","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28676,"byte_end":28751,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ `exec` at a point where it is fine to not run any destructors. Note,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28756,"byte_end":28828,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ that the `execvp` syscall independently guarantees that all memory is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28833,"byte_end":28906,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ freed and all file descriptors with the `CLOEXEC` option (set by default","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28911,"byte_end":28987,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ on all file descriptors opened by the standard library) are closed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":28992,"byte_end":29063,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29068,"byte_end":29071,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function, unlike `spawn`, will **not** `fork` the process to create","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29076,"byte_end":29152,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ a new child. Like spawn, however, the default behavior for the stdio","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29157,"byte_end":29229,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ descriptors will be to inherited from the current process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29234,"byte_end":29296,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29301,"byte_end":29304,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29309,"byte_end":29320,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29325,"byte_end":29328,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The process may be in a \"broken state\" if this function returns in","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29333,"byte_end":29403,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ error. For example the working directory, environment variables, signal","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29408,"byte_end":29483,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ handling settings, various user/group information, or aspects of stdio","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29488,"byte_end":29562,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ file descriptors may have changed. If a \"transactional spawn\" is","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29567,"byte_end":29635,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/ required to gracefully handle errors it is recommended to use the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29640,"byte_end":29709,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ cross-platform `spawn` instead.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29714,"byte_end":29749,"line_start":79,"line_end":79,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29947,"byte_end":29951,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"arg0","qualname":"::unix::CommandExt::arg0","value":"pub fn arg0<S>(&mut Self, S) -> &mut Command where S: AsRef<OsStr>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Set executable argument","sig":null,"attributes":[{"value":"/ Set executable argument","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29792,"byte_end":29819,"line_start":82,"line_end":82,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29824,"byte_end":29827,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Set the first process argument, `argv[0]`, to something other than the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29832,"byte_end":29906,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ default executable path.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":29911,"byte_end":29939,"line_start":85,"line_end":85,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3031,"byte_end":3036,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"Child","qualname":"::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" A spawned child process.","sig":null,"attributes":[{"value":"/ A spawned child process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2476,"byte_end":2504,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2505,"byte_end":2508,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The process can be in running or exited state. Use [`status()`][`Child::status()`] or","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2509,"byte_end":2598,"line_start":95,"line_end":95,"column_start":1,"column_end":90}},{"value":"/ [`output()`][`Child::output()`] to wait for it to exit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2599,"byte_end":2658,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2659,"byte_end":2662,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ If the [`Child`] is dropped, the process keeps running in the background.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2663,"byte_end":2740,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2741,"byte_end":2744,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2745,"byte_end":2759,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2760,"byte_end":2763,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Spawn a process and wait for it to complete:","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2764,"byte_end":2812,"line_start":102,"line_end":102,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2813,"byte_end":2816,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2817,"byte_end":2830,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2831,"byte_end":2875,"line_start":105,"line_end":105,"column_start":1,"column_end":45}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2876,"byte_end":2907,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Command::new(\"cp\").arg(\"a.txt\").arg(\"b.txt\").status().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2912,"byte_end":2977,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2978,"byte_end":3011,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3012,"byte_end":3019,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":54},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3142,"byte_end":3147,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"name":"stdin","qualname":"::Child::stdin","value":"std::option::Option<ChildStdin>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has been captured.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3043,"byte_end":3133,"line_start":112,"line_end":112,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":55},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3277,"byte_end":3283,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"stdout","qualname":"::Child::stdout","value":"std::option::Option<ChildStdout>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it has been captured.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3174,"byte_end":3268,"line_start":115,"line_end":115,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":56},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3413,"byte_end":3419,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"stderr","qualname":"::Child::stderr","value":"std::option::Option<ChildStderr>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it has been captured.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3311,"byte_end":3404,"line_start":118,"line_end":118,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9476,"byte_end":9478,"line_start":280,"line_end":280,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9101,"byte_end":9175,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9180,"byte_end":9183,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9188,"byte_end":9202,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9207,"byte_end":9210,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9215,"byte_end":9228,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9233,"byte_end":9277,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9282,"byte_end":9313,"line_start":274,"line_end":274,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9318,"byte_end":9321,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9326,"byte_end":9374,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ println!(\"id: {}\", child.id());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9379,"byte_end":9414,"line_start":277,"line_end":277,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9419,"byte_end":9452,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9457,"byte_end":9464,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10170,"byte_end":10174,"line_start":303,"line_end":303,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child process to exit.","sig":null,"attributes":[{"value":"/ Forces the child process to exit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9556,"byte_end":9593,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9598,"byte_end":9601,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ If the child has already exited, an [`InvalidInput`] error is returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9606,"byte_end":9681,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9686,"byte_end":9689,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on Unix platforms.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9694,"byte_end":9756,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9761,"byte_end":9764,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ [`InvalidInput`]: `std::io::ErrorKind::InvalidInput`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9769,"byte_end":9825,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9830,"byte_end":9833,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9838,"byte_end":9852,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9857,"byte_end":9860,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9865,"byte_end":9878,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9883,"byte_end":9927,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9932,"byte_end":9963,"line_start":296,"line_end":296,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9968,"byte_end":9971,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"yes\").spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":9976,"byte_end":10025,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/ child.kill()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10030,"byte_end":10048,"line_start":299,"line_end":299,"column_start":5,"column_end":23}},{"value":"/ println!(\"exit status: {}\", child.status().await?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10053,"byte_end":10108,"line_start":300,"line_end":300,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10113,"byte_end":10146,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10151,"byte_end":10158,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10850,"byte_end":10860,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"try_status","qualname":"<Child>::try_status","value":"pub fn try_status(&mut Self) -> io::Result<Option<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the exit status if the process has exited.","sig":null,"attributes":[{"value":"/ Returns the exit status if the process has exited.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10269,"byte_end":10323,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10328,"byte_end":10331,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Unlike [`status()`][`Child::status()`], this method will not drop the stdin handle.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10336,"byte_end":10423,"line_start":309,"line_end":309,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10428,"byte_end":10431,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10436,"byte_end":10450,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10455,"byte_end":10458,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10463,"byte_end":10476,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10481,"byte_end":10525,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10530,"byte_end":10561,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10566,"byte_end":10569,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10574,"byte_end":10622,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ match child.try_status()? {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10635,"byte_end":10666,"line_start":319,"line_end":319,"column_start":5,"column_end":36}},{"value":"/     None => println!(\"still running\"),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10671,"byte_end":10713,"line_start":320,"line_end":320,"column_start":5,"column_end":47}},{"value":"/     Some(status) => println!(\"exited with: {}\", status),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10718,"byte_end":10778,"line_start":321,"line_end":321,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10783,"byte_end":10788,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10793,"byte_end":10826,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10831,"byte_end":10838,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11658,"byte_end":11664,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"status","qualname":"<Child>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Drops the stdin handle and waits for the process to exit.","sig":null,"attributes":[{"value":"/ Drops the stdin handle and waits for the process to exit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":10975,"byte_end":11036,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11041,"byte_end":11044,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Closing the stdin of the process helps avoid deadlocks. It ensures that the process does","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11049,"byte_end":11141,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/ not block waiting for input from the parent process while the parent waits for the child to","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11146,"byte_end":11241,"line_start":332,"line_end":332,"column_start":5,"column_end":100}},{"value":"/ exit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11246,"byte_end":11255,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11260,"byte_end":11263,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11268,"byte_end":11282,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11287,"byte_end":11290,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11295,"byte_end":11308,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11313,"byte_end":11357,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11362,"byte_end":11402,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11407,"byte_end":11410,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let mut child = Command::new(\"cp\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11415,"byte_end":11453,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/     .arg(\"a.txt\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11458,"byte_end":11479,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/     .arg(\"b.txt\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11484,"byte_end":11505,"line_start":343,"line_end":343,"column_start":5,"column_end":26}},{"value":"/     .spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11510,"byte_end":11528,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11533,"byte_end":11536,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ println!(\"exit status: {}\", child.status().await?);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11541,"byte_end":11596,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11601,"byte_end":11634,"line_start":347,"line_end":347,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":11639,"byte_end":11646,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":13070,"byte_end":13076,"line_start":390,"line_end":390,"column_start":12,"column_end":18},"name":"output","qualname":"<Child>::output","value":"pub fn output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Drops the stdin handle and collects the output of the process.","sig":null,"attributes":[{"value":"/ Drops the stdin handle and collects the output of the process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12222,"byte_end":12288,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12293,"byte_end":12296,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Closing the stdin of the process helps avoid deadlocks. It ensures that the process does","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12301,"byte_end":12393,"line_start":369,"line_end":369,"column_start":5,"column_end":97}},{"value":"/ not block waiting for input from the parent process while the parent waits for the child to","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12398,"byte_end":12493,"line_start":370,"line_end":370,"column_start":5,"column_end":100}},{"value":"/ exit.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12498,"byte_end":12507,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12512,"byte_end":12515,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ In order to capture the output of the process, [`Command::stdout()`] and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12520,"byte_end":12596,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ [`Command::stderr()`] must be configured with [`Stdio::piped()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12601,"byte_end":12670,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12675,"byte_end":12678,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12683,"byte_end":12697,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12702,"byte_end":12705,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12710,"byte_end":12723,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12728,"byte_end":12772,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12777,"byte_end":12817,"line_start":380,"line_end":380,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12822,"byte_end":12825,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let child = Command::new(\"ls\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12830,"byte_end":12864,"line_start":382,"line_end":382,"column_start":5,"column_end":39}},{"value":"/     .stdout(Stdio::piped())","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12869,"byte_end":12900,"line_start":383,"line_end":383,"column_start":5,"column_end":36}},{"value":"/     .stderr(Stdio::piped())","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12905,"byte_end":12936,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/     .spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12941,"byte_end":12959,"line_start":385,"line_end":385,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12964,"byte_end":12967,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let out = child.output().await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":12972,"byte_end":13008,"line_start":387,"line_end":387,"column_start":5,"column_end":41}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":13013,"byte_end":13046,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":13051,"byte_end":13058,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14622,"byte_end":14632,"line_start":441,"line_end":441,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::ChildStdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a child process's standard input (stdin).","sig":null,"attributes":[{"value":"/ A handle to a child process's standard input (stdin).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14363,"byte_end":14420,"line_start":436,"line_end":436,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14421,"byte_end":14424,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ When a [`ChildStdin`] is dropped, the underlying handle gets clossed. If the child process was","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14425,"byte_end":14523,"line_start":438,"line_end":438,"column_start":1,"column_end":99}},{"value":"/ previously blocked on input, it becomes unblocked after dropping.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14524,"byte_end":14593,"line_start":439,"line_end":439,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15431,"byte_end":15442,"line_start":468,"line_end":468,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::ChildStdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a child process's standard output (stdout).","sig":null,"attributes":[{"value":"/ A handle to a child process's standard output (stdout).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15265,"byte_end":15324,"line_start":464,"line_end":464,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15325,"byte_end":15328,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ When a [`ChildStdout`] is dropped, the underlying handle gets closed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15329,"byte_end":15402,"line_start":466,"line_end":466,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15956,"byte_end":15967,"line_start":487,"line_end":487,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::ChildStderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a child process's standard error (stderr).","sig":null,"attributes":[{"value":"/ A handle to a child process's standard error (stderr).","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15791,"byte_end":15849,"line_start":483,"line_end":483,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15850,"byte_end":15853,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ When a [`ChildStderr`] is dropped, the underlying handle gets closed.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15854,"byte_end":15927,"line_start":485,"line_end":485,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16755,"byte_end":16762,"line_start":518,"line_end":518,"column_start":12,"column_end":19},"name":"Command","qualname":"::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" A builder for spawning processes.","sig":null,"attributes":[{"value":"/ A builder for spawning processes.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16316,"byte_end":16353,"line_start":502,"line_end":502,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16354,"byte_end":16357,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16358,"byte_end":16372,"line_start":504,"line_end":504,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16373,"byte_end":16376,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16377,"byte_end":16390,"line_start":506,"line_end":506,"column_start":1,"column_end":14}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16391,"byte_end":16435,"line_start":507,"line_end":507,"column_start":1,"column_end":45}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16436,"byte_end":16467,"line_start":508,"line_end":508,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16468,"byte_end":16471,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ let output = if cfg!(target_os = \"windows\") {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16472,"byte_end":16521,"line_start":510,"line_end":510,"column_start":1,"column_end":50}},{"value":"/     Command::new(\"cmd\").args(&[\"/C\", \"echo hello\"]).output().await?","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16522,"byte_end":16593,"line_start":511,"line_end":511,"column_start":1,"column_end":72}},{"value":"/ } else {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16594,"byte_end":16606,"line_start":512,"line_end":512,"column_start":1,"column_end":13}},{"value":"/     Command::new(\"sh\").arg(\"-c\").arg(\"echo hello\").output().await?","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16607,"byte_end":16677,"line_start":513,"line_end":513,"column_start":1,"column_end":71}},{"value":"/ };","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16678,"byte_end":16684,"line_start":514,"line_end":514,"column_start":1,"column_end":7}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16685,"byte_end":16718,"line_start":515,"line_end":515,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16719,"byte_end":16726,"line_start":516,"line_end":516,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17302,"byte_end":17305,"line_start":540,"line_end":540,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`Command`] for launching `program`.","sig":null,"attributes":[{"value":"/ Constructs a new [`Command`] for launching `program`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16949,"byte_end":17006,"line_start":528,"line_end":528,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17011,"byte_end":17014,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The initial configuration (the working directory and environment variables) is inherited","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17019,"byte_end":17111,"line_start":530,"line_end":530,"column_start":5,"column_end":97}},{"value":"/ from the current process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17116,"byte_end":17145,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17150,"byte_end":17153,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17158,"byte_end":17172,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17177,"byte_end":17180,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17185,"byte_end":17192,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17197,"byte_end":17228,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17233,"byte_end":17236,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17241,"byte_end":17278,"line_start":538,"line_end":538,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17283,"byte_end":17290,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17846,"byte_end":17849,"line_start":562,"line_end":562,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds a single argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds a single argument to pass to the program.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17585,"byte_end":17635,"line_start":551,"line_end":551,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17640,"byte_end":17643,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17648,"byte_end":17662,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17667,"byte_end":17670,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17675,"byte_end":17682,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17687,"byte_end":17718,"line_start":556,"line_end":556,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17723,"byte_end":17726,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"echo\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17731,"byte_end":17770,"line_start":558,"line_end":558,"column_start":5,"column_end":44}},{"value":"/ cmd.arg(\"hello\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17775,"byte_end":17796,"line_start":559,"line_end":559,"column_start":5,"column_end":26}},{"value":"/ cmd.arg(\"world\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17801,"byte_end":17822,"line_start":560,"line_end":560,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17827,"byte_end":17834,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18206,"byte_end":18210,"line_start":577,"line_end":577,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":17957,"byte_end":18008,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18013,"byte_end":18016,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18021,"byte_end":18035,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18040,"byte_end":18043,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18048,"byte_end":18055,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18060,"byte_end":18091,"line_start":572,"line_end":572,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18096,"byte_end":18099,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"echo\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18104,"byte_end":18143,"line_start":574,"line_end":574,"column_start":5,"column_end":44}},{"value":"/ cmd.args(&[\"hello\", \"world\"]);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18148,"byte_end":18182,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18187,"byte_end":18194,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18792,"byte_end":18795,"line_start":599,"line_end":599,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Configures an environment variable for the new process.","sig":null,"attributes":[{"value":"/ Configures an environment variable for the new process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18384,"byte_end":18443,"line_start":586,"line_end":586,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18448,"byte_end":18451,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18456,"byte_end":18551,"line_start":588,"line_end":588,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18556,"byte_end":18602,"line_start":589,"line_end":589,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18607,"byte_end":18610,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18615,"byte_end":18629,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18634,"byte_end":18637,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18642,"byte_end":18649,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18654,"byte_end":18685,"line_start":594,"line_end":594,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18690,"byte_end":18693,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18698,"byte_end":18735,"line_start":596,"line_end":596,"column_start":5,"column_end":42}},{"value":"/ cmd.env(\"PATH\", \"/bin\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18740,"byte_end":18768,"line_start":597,"line_end":597,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18773,"byte_end":18780,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19421,"byte_end":19425,"line_start":621,"line_end":621,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Configures multiple environment variables for the new process.","sig":null,"attributes":[{"value":"/ Configures multiple environment variables for the new process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":18969,"byte_end":19035,"line_start":608,"line_end":608,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19040,"byte_end":19043,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19048,"byte_end":19143,"line_start":610,"line_end":610,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19148,"byte_end":19194,"line_start":611,"line_end":611,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19199,"byte_end":19202,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19207,"byte_end":19221,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19226,"byte_end":19229,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19234,"byte_end":19241,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19246,"byte_end":19277,"line_start":616,"line_end":616,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19282,"byte_end":19285,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19290,"byte_end":19327,"line_start":618,"line_end":618,"column_start":5,"column_end":42}},{"value":"/ cmd.envs(vec![(\"PATH\", \"/bin\"), (\"TERM\", \"xterm-256color\")]);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19332,"byte_end":19397,"line_start":619,"line_end":619,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19402,"byte_end":19409,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19865,"byte_end":19875,"line_start":641,"line_end":641,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19632,"byte_end":19676,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19681,"byte_end":19684,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19689,"byte_end":19703,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19708,"byte_end":19711,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19716,"byte_end":19723,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19728,"byte_end":19759,"line_start":636,"line_end":636,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19764,"byte_end":19767,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19772,"byte_end":19809,"line_start":638,"line_end":638,"column_start":5,"column_end":42}},{"value":"/ cmd.env_remove(\"PATH\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19814,"byte_end":19841,"line_start":639,"line_end":639,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19846,"byte_end":19853,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20218,"byte_end":20227,"line_start":656,"line_end":656,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes all environment variable mappings.","sig":null,"attributes":[{"value":"/ Removes all environment variable mappings.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":19990,"byte_end":20036,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20041,"byte_end":20044,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20049,"byte_end":20063,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20068,"byte_end":20071,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20076,"byte_end":20083,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20088,"byte_end":20119,"line_start":651,"line_end":651,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20124,"byte_end":20127,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20132,"byte_end":20169,"line_start":653,"line_end":653,"column_start":5,"column_end":42}},{"value":"/ cmd.env_clear();","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20174,"byte_end":20194,"line_start":654,"line_end":654,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20199,"byte_end":20206,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20557,"byte_end":20568,"line_start":671,"line_end":671,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the working directory for the new process.","sig":null,"attributes":[{"value":"/ Configures the working directory for the new process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20313,"byte_end":20370,"line_start":661,"line_end":661,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20375,"byte_end":20378,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20383,"byte_end":20397,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20402,"byte_end":20405,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20410,"byte_end":20417,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20422,"byte_end":20453,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20458,"byte_end":20461,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20466,"byte_end":20503,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ cmd.current_dir(\"/\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20508,"byte_end":20533,"line_start":669,"line_end":669,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20538,"byte_end":20545,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20946,"byte_end":20951,"line_start":686,"line_end":686,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the standard input (stdin) for the new process.","sig":null,"attributes":[{"value":"/ Configures the standard input (stdin) for the new process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20683,"byte_end":20745,"line_start":676,"line_end":676,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20750,"byte_end":20753,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20758,"byte_end":20772,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20777,"byte_end":20780,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20785,"byte_end":20792,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20797,"byte_end":20837,"line_start":681,"line_end":681,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20842,"byte_end":20845,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20850,"byte_end":20888,"line_start":683,"line_end":683,"column_start":5,"column_end":43}},{"value":"/ cmd.stdin(Stdio::null());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20893,"byte_end":20922,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":20927,"byte_end":20934,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21334,"byte_end":21340,"line_start":701,"line_end":701,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the standard output (stdout) for the new process.","sig":null,"attributes":[{"value":"/ Configures the standard output (stdout) for the new process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21068,"byte_end":21132,"line_start":691,"line_end":691,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21137,"byte_end":21140,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21145,"byte_end":21159,"line_start":693,"line_end":693,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21164,"byte_end":21167,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21172,"byte_end":21179,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21184,"byte_end":21224,"line_start":696,"line_end":696,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21229,"byte_end":21232,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21237,"byte_end":21274,"line_start":698,"line_end":698,"column_start":5,"column_end":42}},{"value":"/ cmd.stdout(Stdio::piped());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21279,"byte_end":21310,"line_start":699,"line_end":699,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21315,"byte_end":21322,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21723,"byte_end":21729,"line_start":716,"line_end":716,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures the standard error (stderr) for the new process.","sig":null,"attributes":[{"value":"/ Configures the standard error (stderr) for the new process.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21458,"byte_end":21521,"line_start":706,"line_end":706,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21526,"byte_end":21529,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21534,"byte_end":21548,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21553,"byte_end":21556,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21561,"byte_end":21568,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21573,"byte_end":21613,"line_start":711,"line_end":711,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21618,"byte_end":21621,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"ls\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21626,"byte_end":21663,"line_start":713,"line_end":713,"column_start":5,"column_end":42}},{"value":"/ cmd.stderr(Stdio::piped());","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21668,"byte_end":21699,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21704,"byte_end":21711,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22663,"byte_end":22675,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"reap_on_drop","qualname":"<Command>::reap_on_drop","value":"pub fn reap_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures whether to reap the zombie process when [`Child`] is dropped.","sig":null,"attributes":[{"value":"/ Configures whether to reap the zombie process when [`Child`] is dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21847,"byte_end":21923,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21928,"byte_end":21931,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When the process finishes, it becomes a \"zombie\" and some resources associated with it","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":21936,"byte_end":22026,"line_start":723,"line_end":723,"column_start":5,"column_end":95}},{"value":"/ remain until [`Child::try_status()`], [`Child::status()`], or [`Child::output()`] collects","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22031,"byte_end":22125,"line_start":724,"line_end":724,"column_start":5,"column_end":99}},{"value":"/ its exit code.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22130,"byte_end":22148,"line_start":725,"line_end":725,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22153,"byte_end":22156,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ If its exit code is never collected, the resources may leak forever. This crate has a","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22161,"byte_end":22250,"line_start":727,"line_end":727,"column_start":5,"column_end":94}},{"value":"/ background thread named \"async-process\" that collects such \"zombie\" processes and then","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22255,"byte_end":22345,"line_start":728,"line_end":728,"column_start":5,"column_end":95}},{"value":"/ \"reaps\" them, thus preventing the resource leaks.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22350,"byte_end":22403,"line_start":729,"line_end":729,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22408,"byte_end":22411,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ The default value of this option is `true`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22416,"byte_end":22463,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22468,"byte_end":22471,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22476,"byte_end":22490,"line_start":733,"line_end":733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22495,"byte_end":22498,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22503,"byte_end":22510,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22515,"byte_end":22555,"line_start":736,"line_end":736,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22560,"byte_end":22563,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22568,"byte_end":22606,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/ cmd.reap_on_drop(false);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22611,"byte_end":22639,"line_start":739,"line_end":739,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22644,"byte_end":22651,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23120,"byte_end":23132,"line_start":758,"line_end":758,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Configures whether to kill the process when [`Child`] is dropped.","sig":null,"attributes":[{"value":"/ Configures whether to kill the process when [`Child`] is dropped.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22791,"byte_end":22860,"line_start":746,"line_end":746,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22865,"byte_end":22868,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ The default value of this option is `false`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22873,"byte_end":22921,"line_start":748,"line_end":748,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22926,"byte_end":22929,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22934,"byte_end":22948,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22953,"byte_end":22956,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22961,"byte_end":22968,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use async_process::{Command, Stdio};","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":22973,"byte_end":23013,"line_start":753,"line_end":753,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23018,"byte_end":23021,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23026,"byte_end":23064,"line_start":755,"line_end":755,"column_start":5,"column_end":43}},{"value":"/ cmd.kill_on_drop(true);","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23069,"byte_end":23096,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23101,"byte_end":23108,"line_start":757,"line_end":757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23763,"byte_end":23768,"line_start":778,"line_end":778,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command and returns the [`Child`] handle to it.","sig":null,"attributes":[{"value":"/ Executes the command and returns the [`Child`] handle to it.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23248,"byte_end":23312,"line_start":763,"line_end":763,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23317,"byte_end":23320,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If not configured, stdin, stdout and stderr will be set to [`Stdio::inherit()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23325,"byte_end":23409,"line_start":765,"line_end":765,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23414,"byte_end":23417,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ After spawning the process, stdin, stdout, and stderr become unconfigured again.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23422,"byte_end":23506,"line_start":767,"line_end":767,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23511,"byte_end":23514,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23519,"byte_end":23533,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23538,"byte_end":23541,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23546,"byte_end":23559,"line_start":771,"line_end":771,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23564,"byte_end":23608,"line_start":772,"line_end":772,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23613,"byte_end":23644,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23649,"byte_end":23652,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let child = Command::new(\"ls\").spawn()?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23657,"byte_end":23701,"line_start":775,"line_end":775,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23706,"byte_end":23739,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":23744,"byte_end":23751,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24739,"byte_end":24745,"line_start":806,"line_end":806,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command, waits for it to exit, and returns the exit status.","sig":null,"attributes":[{"value":"/ Executes the command, waits for it to exit, and returns the exit status.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24126,"byte_end":24202,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24207,"byte_end":24210,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ If not configured, stdin, stdout and stderr will be set to [`Stdio::inherit()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24215,"byte_end":24299,"line_start":789,"line_end":789,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24304,"byte_end":24307,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ After spawning the process, stdin, stdout, and stderr become unconfigured again.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24312,"byte_end":24396,"line_start":791,"line_end":791,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24401,"byte_end":24404,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24409,"byte_end":24423,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24428,"byte_end":24431,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24436,"byte_end":24449,"line_start":795,"line_end":795,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24454,"byte_end":24498,"line_start":796,"line_end":796,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24503,"byte_end":24534,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24539,"byte_end":24542,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ let status = Command::new(\"cp\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24547,"byte_end":24582,"line_start":799,"line_end":799,"column_start":5,"column_end":40}},{"value":"/     .arg(\"a.txt\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24587,"byte_end":24608,"line_start":800,"line_end":800,"column_start":5,"column_end":26}},{"value":"/     .arg(\"b.txt\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24613,"byte_end":24634,"line_start":801,"line_end":801,"column_start":5,"column_end":26}},{"value":"/     .status()","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24639,"byte_end":24656,"line_start":802,"line_end":802,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24661,"byte_end":24677,"line_start":803,"line_end":803,"column_start":5,"column_end":21}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24682,"byte_end":24715,"line_start":804,"line_end":804,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24720,"byte_end":24727,"line_start":805,"line_end":805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25496,"byte_end":25502,"line_start":830,"line_end":830,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command and collects its output.","sig":null,"attributes":[{"value":"/ Executes the command and collects its output.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24892,"byte_end":24941,"line_start":811,"line_end":811,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24946,"byte_end":24949,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ If not configured, stdin will be set to [`Stdio::null()`], and stdout and stderr will be","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":24954,"byte_end":25046,"line_start":813,"line_end":813,"column_start":5,"column_end":97}},{"value":"/ set to [`Stdio::piped()`].","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25051,"byte_end":25081,"line_start":814,"line_end":814,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25086,"byte_end":25089,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ After spawning the process, stdin, stdout, and stderr become unconfigured again.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25094,"byte_end":25178,"line_start":816,"line_end":816,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25183,"byte_end":25186,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25191,"byte_end":25205,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25210,"byte_end":25213,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25218,"byte_end":25231,"line_start":820,"line_end":820,"column_start":5,"column_end":18}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25236,"byte_end":25280,"line_start":821,"line_end":821,"column_start":5,"column_end":49}},{"value":"/ use async_process::Command;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25285,"byte_end":25316,"line_start":822,"line_end":822,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25321,"byte_end":25324,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let output = Command::new(\"cat\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25329,"byte_end":25365,"line_start":824,"line_end":824,"column_start":5,"column_end":41}},{"value":"/     .arg(\"a.txt\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25370,"byte_end":25391,"line_start":825,"line_end":825,"column_start":5,"column_end":26}},{"value":"/     .output()","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25396,"byte_end":25413,"line_start":826,"line_end":826,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25418,"byte_end":25434,"line_start":827,"line_end":827,"column_start":5,"column_end":21}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25439,"byte_end":25472,"line_start":828,"line_end":828,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":25477,"byte_end":25484,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":30048,"byte_end":30055,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2361,"byte_end":2371,"line_start":87,"line_end":87,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3526,"byte_end":3531,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":8350,"byte_end":8360,"line_start":242,"line_end":242,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14102,"byte_end":14107,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14767,"byte_end":14777,"line_start":446,"line_end":446,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15578,"byte_end":15589,"line_start":473,"line_end":473,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16103,"byte_end":16114,"line_start":492,"line_end":492,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16935,"byte_end":16942,"line_start":527,"line_end":527,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2027,"byte_end":2031,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":25}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/unix.rs","byte_start":30048,"byte_end":30055,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":141},"to":{"krate":0,"index":30}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":2361,"byte_end":2371,"line_start":87,"line_end":87,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":3526,"byte_end":3531,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":8350,"byte_end":8360,"line_start":242,"line_end":242,"column_start":23,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14102,"byte_end":14107,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":6563}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":14767,"byte_end":14777,"line_start":446,"line_end":446,"column_start":25,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":126},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":15578,"byte_end":15589,"line_start":473,"line_end":473,"column_start":24,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":131},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16103,"byte_end":16114,"line_start":492,"line_end":492,"column_start":24,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":136},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/async-process-1.0.2/src/lib.rs","byte_start":16935,"byte_end":16942,"line_start":527,"line_end":527,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}}]}