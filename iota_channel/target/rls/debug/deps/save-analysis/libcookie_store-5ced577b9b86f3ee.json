{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0","program":"/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cookie_store","--edition=2018","/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=5ced577b9b86f3ee","-C","extra-filename=-5ced577b9b86f3ee","--out-dir","/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","-L","dependency=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps","--extern","cookie=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libcookie-165163bf1d8f87f7.rmeta","--extern","idna=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libidna-fa1a3736f9bfea15.rmeta","--extern","log=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/liblog-741686558bfd5a51.rmeta","--extern","publicsuffix=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libpublicsuffix-6cbda0305bb85f85.rmeta","--extern","serde=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libserde-288c9f28920809d8.rmeta","--extern","serde_json=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libserde_json-fc940f2d65d80b2f.rmeta","--extern","time=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libtime-80cbbbf60d23676a.rmeta","--extern","url=/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/liburl-18794b3067e171c9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zerbs/.rustup/toolchains/nightly-2020-10-05-x86_64-unknown-linux-gnu"],"output":"/home/zerbs/hids-iot/iota_channel/target/rls/debug/deps/libcookie_store-5ced577b9b86f3ee.rmeta"},"prelude":{"crate_id":{"name":"cookie_store","disambiguator":[9060773468014056159,5397290685345729719]},"crate_root":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src","external_crates":[{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12552152252844610669,861143519395295934]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6114913909297575976,2747657943747640239]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17650494196611787224,16696351671010573705]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[11646022853023642053,10781225934013639530]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","num":18,"id":{"name":"idna","disambiguator":[15758671800105814630,6826886889586784349]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":19,"id":{"name":"matches","disambiguator":[5287378215073979129,18361979022213203125]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":20,"id":{"name":"unicode_bidi","disambiguator":[398795138868039335,14092636972201067143]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":21,"id":{"name":"unicode_normalization","disambiguator":[17396523243953084271,16085327971278709216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":22,"id":{"name":"tinyvec","disambiguator":[6927608017733428727,17547158427265738216]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":23,"id":{"name":"tinyvec_macros","disambiguator":[12069190721701906036,1989476166457901195]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":24,"id":{"name":"cookie","disambiguator":[12866618362304289521,1064762953246943115]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":25,"id":{"name":"percent_encoding","disambiguator":[4191107805003336903,1295654285536293621]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","num":26,"id":{"name":"time","disambiguator":[16200005918744758086,359364304996721942]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":27,"id":{"name":"const_fn","disambiguator":[3045120493541021903,5886681101239820108]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":28,"id":{"name":"standback","disambiguator":[14955413991936924282,3183471262081063868]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":29,"id":{"name":"time_macros","disambiguator":[14837632672316603719,1582334269235719305]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":30,"id":{"name":"proc_macro_hack","disambiguator":[16105205298844134494,461428951662562663]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":31,"id":{"name":"time_macros_impl","disambiguator":[5725487146340027838,17062803868796107362]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":32,"id":{"name":"serde","disambiguator":[5334120086637002649,8248794652872379428]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":33,"id":{"name":"serde_derive","disambiguator":[6083439792641253131,5791579193039739630]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":34,"id":{"name":"url","disambiguator":[7364648401324500555,16375530601740704096]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","num":35,"id":{"name":"form_urlencoded","disambiguator":[9338366802694473119,6613580433416692069]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","num":36,"id":{"name":"publicsuffix","disambiguator":[3315919114080135789,8884888179174962959]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","num":37,"id":{"name":"log","disambiguator":[11013293275619222107,10669941403084918630]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","num":38,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","num":39,"id":{"name":"serde_json","disambiguator":[3281082017659157551,15884870385329207415]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","num":40,"id":{"name":"itoa","disambiguator":[6211768908287461300,15276921088856462233]}},{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","num":41,"id":{"name":"ryu","disambiguator":[2595139073293063990,3633285781182786758]}}],"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":0,"byte_end":1707,"line_start":1,"line_end":59,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":46,"byte_end":51,"line_start":4,"line_end":4,"column_start":24,"column_end":29},"alias_span":null,"name":"CookieError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":92,"byte_end":98,"line_start":5,"line_end":5,"column_start":25,"column_end":31},"alias_span":null,"name":"Cookie","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":100,"byte_end":112,"line_start":5,"line_end":5,"column_start":33,"column_end":45},"alias_span":null,"name":"CookieResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":221,"byte_end":232,"line_start":10,"line_end":10,"column_start":30,"column_end":41},"alias_span":null,"name":"CookieStore","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":0,"byte_end":1707,"line_start":1,"line_end":59,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":109},{"krate":0,"index":129},{"krate":0,"index":154},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2280,"byte_end":2293,"line_start":19,"line_end":19,"column_start":5,"column_end":18},"name":"NonHttpScheme","qualname":"::cookie::Error::NonHttpScheme","value":"Error::NonHttpScheme","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Cookie had attribute HttpOnly but was received from a request-uri which was not an http\n scheme\n","sig":null,"attributes":[{"value":"/ Cookie had attribute HttpOnly but was received from a request-uri which was not an http","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2169,"byte_end":2260,"line_start":17,"line_end":17,"column_start":5,"column_end":96}},{"value":"/ scheme","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2265,"byte_end":2275,"line_start":18,"line_end":18,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2439,"byte_end":2456,"line_start":22,"line_end":22,"column_start":5,"column_end":22},"name":"NonRelativeScheme","qualname":"::cookie::Error::NonRelativeScheme","value":"Error::NonRelativeScheme","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Cookie did not specify domain but was recevied from non-relative-scheme request-uri from\n which host could not be determined\n","sig":null,"attributes":[{"value":"/ Cookie did not specify domain but was recevied from non-relative-scheme request-uri from","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2299,"byte_end":2391,"line_start":20,"line_end":20,"column_start":5,"column_end":97}},{"value":"/ which host could not be determined","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2396,"byte_end":2434,"line_start":21,"line_end":21,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2532,"byte_end":2546,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"DomainMismatch","qualname":"::cookie::Error::DomainMismatch","value":"Error::DomainMismatch","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Cookie received from a request-uri that does not domain-match\n","sig":null,"attributes":[{"value":"/ Cookie received from a request-uri that does not domain-match","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2462,"byte_end":2527,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":327},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2578,"byte_end":2585,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"Expired","qualname":"::cookie::Error::Expired","value":"Error::Expired","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Cookie is Expired\n","sig":null,"attributes":[{"value":"/ Cookie is Expired","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2552,"byte_end":2573,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2628,"byte_end":2633,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Parse","qualname":"::cookie::Error::Parse","value":"Error::Parse","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" `cookie::Cookie` Parse error\n","sig":null,"attributes":[{"value":"/ `cookie::Cookie` Parse error","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2591,"byte_end":2623,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2760,"byte_end":2772,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"PublicSuffix","qualname":"::cookie::Error::PublicSuffix","value":"Error::PublicSuffix","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Cookie specified a public suffix domain-attribute that does not match the canonicalized\n request-uri host\n","sig":null,"attributes":[{"value":"/ Cookie specified a public suffix domain-attribute that does not match the canonicalized","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2639,"byte_end":2730,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ request-uri host","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2735,"byte_end":2755,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2887,"byte_end":2904,"line_start":33,"line_end":33,"column_start":5,"column_end":22},"name":"UnspecifiedDomain","qualname":"::cookie::Error::UnspecifiedDomain","value":"Error::UnspecifiedDomain","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":" Tried to use a CookieDomain variant of `Empty` or `NotPresent` in a context requiring a Domain value\n","sig":null,"attributes":[{"value":"/ Tried to use a CookieDomain variant of `Empty` or `NotPresent` in a context requiring a Domain value","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2778,"byte_end":2882,"line_start":32,"line_end":32,"column_start":5,"column_end":109}}]},{"kind":"Enum","id":{"krate":0,"index":320},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2157,"byte_end":2162,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Error","qualname":"::cookie::Error","value":"pub enum Error {\n\n    /// Cookie had attribute HttpOnly but was received from a request-uri which was not an http\n    /// scheme\n    NonHttpScheme,\n\n    /// Cookie did not specify domain but was recevied from non-relative-scheme request-uri from\n    /// which host could not be determined\n    NonRelativeScheme,\n\n    /// Cookie received from a request-uri that does not domain-match\n    DomainMismatch,\n\n    /// Cookie is Expired\n    Expired,\n\n    /// `cookie::Cookie` Parse error\n    Parse,\n\n    /// Cookie specified a public suffix domain-attribute that does not match the canonicalized\n    /// request-uri host\n    PublicSuffix,\n\n    /// Tried to use a CookieDomain variant of `Empty` or `NotPresent` in a context requiring a Domain value\n    UnspecifiedDomain,\n}","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":3986,"byte_end":3998,"line_start":66,"line_end":66,"column_start":10,"column_end":22},"name":"CookieResult","qualname":"::cookie::CookieResult","value":"Result<Cookie, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4194,"byte_end":4200,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Cookie","qualname":"::cookie::Cookie","value":"Cookie { path, domain, expires }","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"decl_id":null,"docs":" A cookie conforming more closely to [IETF RFC6265](http://tools.ietf.org/html/rfc6265)\n","sig":null,"attributes":[{"value":"/ A cookie conforming more closely to [IETF RFC6265](http://tools.ietf.org/html/rfc6265)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4033,"byte_end":4123,"line_start":68,"line_end":68,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":347},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4530,"byte_end":4534,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"path","qualname":"::cookie::Cookie::path","value":"cookie_path::CookiePath","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":" The Path attribute from a Set-Cookie header or the default-path as\n determined from\n the request-uri\n","sig":null,"attributes":[{"value":"/ The Path attribute from a Set-Cookie header or the default-path as","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4403,"byte_end":4473,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ determined from","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4478,"byte_end":4497,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ the request-uri","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4502,"byte_end":4521,"line_start":77,"line_end":77,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":348},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4688,"byte_end":4694,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"name":"domain","qualname":"::cookie::Cookie::domain","value":"cookie_domain::CookieDomain","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":" The Domain attribute from a Set-Cookie header, or a HostOnly variant if no\n non-empty Domain attribute\n found\n","sig":null,"attributes":[{"value":"/ The Domain attribute from a Set-Cookie header, or a HostOnly variant if no","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4552,"byte_end":4630,"line_start":79,"line_end":79,"column_start":5,"column_end":83}},{"value":"/ non-empty Domain attribute","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4635,"byte_end":4665,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ found","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4670,"byte_end":4679,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":349},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":5044,"byte_end":5051,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"name":"expires","qualname":"::cookie::Cookie::expires","value":"cookie_expiration::CookieExpiration","parent":{"krate":0,"index":345},"children":[],"decl_id":null,"docs":" For a persistent Cookie (see [IETF RFC6265 Section\n 5.3](http://tools.ietf.org/html/rfc6265#section-5.3)),\n the expiration time as defined by the Max-Age or Expires attribute,\n otherwise SessionEnd,\n indicating a non-persistent `Cookie` that should expire at the end of the\n session\n","sig":null,"attributes":[{"value":"/ For a persistent Cookie (see [IETF RFC6265 Section","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4714,"byte_end":4768,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/ 5.3](http://tools.ietf.org/html/rfc6265#section-5.3)),","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4773,"byte_end":4831,"line_start":84,"line_end":84,"column_start":5,"column_end":63}},{"value":"/ the expiration time as defined by the Max-Age or Expires attribute,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4836,"byte_end":4907,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ otherwise SessionEnd,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4912,"byte_end":4937,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/ indicating a non-persistent `Cookie` that should expire at the end of the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":4942,"byte_end":5019,"line_start":87,"line_end":87,"column_start":5,"column_end":82}},{"value":"/ session","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":5024,"byte_end":5035,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6007,"byte_end":6014,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"matches","qualname":"<Cookie>::matches","value":"pub fn matches(&Self, &Url) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this `Cookie` should be included for `request_url`\n","sig":null,"attributes":[{"value":"/ Whether this `Cookie` should be included for `request_url`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":5933,"byte_end":5995,"line_start":122,"line_end":122,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6395,"byte_end":6408,"line_start":131,"line_end":131,"column_start":12,"column_end":25},"name":"is_persistent","qualname":"<Cookie>::is_persistent","value":"pub fn is_persistent(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this `Cookie` be persisted across sessions?\n","sig":null,"attributes":[{"value":"/ Should this `Cookie` be persisted across sessions?","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6329,"byte_end":6383,"line_start":130,"line_end":130,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6609,"byte_end":6615,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"expire","qualname":"<Cookie>::expire","value":"pub fn expire(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Expire this cookie\n","sig":null,"attributes":[{"value":"/ Expire this cookie","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6575,"byte_end":6597,"line_start":138,"line_end":138,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6753,"byte_end":6763,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"is_expired","qualname":"<Cookie>::is_expired","value":"pub fn is_expired(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the `Cookie` is expired *now*\n","sig":null,"attributes":[{"value":"/ Return whether the `Cookie` is expired *now*","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6693,"byte_end":6741,"line_start":143,"line_end":143,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6891,"byte_end":6901,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"expires_by","qualname":"<Cookie>::expires_by","value":"pub fn expires_by(&Self, &time::OffsetDateTime) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the `Cookie` expires as of `utc_tm`.\n","sig":null,"attributes":[{"value":"/ Indicates if the `Cookie` expires as of `utc_tm`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":6826,"byte_end":6879,"line_start":148,"line_end":148,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":7071,"byte_end":7076,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"parse","qualname":"<Cookie>::parse","value":"pub fn parse<S>(S, &Url) -> CookieResult where S: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Parses a new `cookie_store::Cookie` from `cookie_str`.\n","sig":null,"attributes":[{"value":"/ Parses a new `cookie_store::Cookie` from `cookie_str`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":7001,"byte_end":7059,"line_start":153,"line_end":153,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":7411,"byte_end":7430,"line_start":163,"line_end":163,"column_start":12,"column_end":31},"name":"try_from_raw_cookie","qualname":"<Cookie>::try_from_raw_cookie","value":"pub fn try_from_raw_cookie(&RawCookie, &Url) -> CookieResult","parent":null,"children":[],"decl_id":null,"docs":" Create a new `cookie_store::Cookie` from a `cookie::Cookie` (from the `cookie` crate)\n received from `request_url`.\n","sig":null,"attributes":[{"value":"/ Create a new `cookie_store::Cookie` from a `cookie::Cookie` (from the `cookie` crate)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":7273,"byte_end":7362,"line_start":161,"line_end":161,"column_start":5,"column_end":94}},{"value":"/ received from `request_url`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":7367,"byte_end":7399,"line_start":162,"line_end":162,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":10104,"byte_end":10114,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Cookie>::into_owned","value":"pub fn into_owned(Self) -> Cookie","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32199,"byte_end":32207,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"HostOnly","qualname":"::cookie_domain::CookieDomain::HostOnly","value":"CookieDomain::HostOnly(String)","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" No Domain attribute in Set-Cookie header\n","sig":null,"attributes":[{"value":"/ No Domain attribute in Set-Cookie header","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32150,"byte_end":32194,"line_start":22,"line_end":22,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":457},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32269,"byte_end":32275,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Suffix","qualname":"::cookie_domain::CookieDomain::Suffix","value":"CookieDomain::Suffix(String)","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" Domain attribute from Set-Cookie header\n","sig":null,"attributes":[{"value":"/ Domain attribute from Set-Cookie header","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32221,"byte_end":32264,"line_start":24,"line_end":24,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32355,"byte_end":32365,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"NotPresent","qualname":"::cookie_domain::CookieDomain::NotPresent","value":"CookieDomain::NotPresent","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" Domain attribute was not present in the Set-Cookie header\n","sig":null,"attributes":[{"value":"/ Domain attribute was not present in the Set-Cookie header","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32289,"byte_end":32350,"line_start":26,"line_end":26,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":462},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32499,"byte_end":32504,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"Empty","qualname":"::cookie_domain::CookieDomain::Empty","value":"CookieDomain::Empty","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":" Domain attribute-value was empty; technically undefined behavior, but suggested that this\n be treated as invalid\n","sig":null,"attributes":[{"value":"/ Domain attribute-value was empty; technically undefined behavior, but suggested that this","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32371,"byte_end":32464,"line_start":28,"line_end":28,"column_start":5,"column_end":98}},{"value":"/ be treated as invalid","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32469,"byte_end":32494,"line_start":29,"line_end":29,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":453},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32131,"byte_end":32143,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"CookieDomain","qualname":"::cookie_domain::CookieDomain","value":"pub enum CookieDomain {\n\n    /// No Domain attribute in Set-Cookie header\n    HostOnly(String),\n\n    /// Domain attribute from Set-Cookie header\n    Suffix(String),\n\n    /// Domain attribute was not present in the Set-Cookie header\n    NotPresent,\n\n    /// Domain attribute-value was empty; technically undefined behavior, but suggested that this\n    /// be treated as invalid\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":462}],"decl_id":null,"docs":" The domain of a `Cookie`\n","sig":null,"attributes":[{"value":"/ The domain of a `Cookie`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":32007,"byte_end":32035,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33411,"byte_end":33420,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"host_only","qualname":"<CookieDomain>::host_only","value":"pub fn host_only(&Url) -> Result<CookieDomain, CookieError>","parent":null,"children":[],"decl_id":null,"docs":" Get the CookieDomain::HostOnly variant based on `request_url`. This is the effective behavior of\n setting the domain-attribute to empty\n","sig":null,"attributes":[{"value":"/ Get the CookieDomain::HostOnly variant based on `request_url`. This is the effective behavior of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33253,"byte_end":33353,"line_start":52,"line_end":52,"column_start":5,"column_end":105}},{"value":"/ setting the domain-attribute to empty","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33358,"byte_end":33399,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33937,"byte_end":33944,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"matches","qualname":"<CookieDomain>::matches","value":"pub fn matches(&Self, &Url) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the given `url::Url` meets the domain-match criteria\n","sig":null,"attributes":[{"value":"/ Tests if the given `url::Url` meets the domain-match criteria","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33860,"byte_end":33925,"line_start":65,"line_end":65,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":34754,"byte_end":34771,"line_start":84,"line_end":84,"column_start":12,"column_end":29},"name":"host_is_identical","qualname":"<CookieDomain>::host_is_identical","value":"pub fn host_is_identical(&Self, &Url) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the given `url::Url` has a request-host identical to the domain attribute\n","sig":null,"attributes":[{"value":"/ Tests if the given `url::Url` has a request-host identical to the domain attribute","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":34656,"byte_end":34742,"line_start":83,"line_end":83,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":35361,"byte_end":35377,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"is_public_suffix","qualname":"<CookieDomain>::is_public_suffix","value":"pub fn is_public_suffix(&Self, &publicsuffix::List) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the domain-attribute is a public suffix as indicated by the provided\n `publicsuffix::List`.\n","sig":null,"attributes":[{"value":"/ Tests if the domain-attribute is a public suffix as indicated by the provided","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":35238,"byte_end":35319,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ `publicsuffix::List`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":35324,"byte_end":35349,"line_start":97,"line_end":97,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":36150,"byte_end":36156,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"as_cow","qualname":"<CookieDomain>::as_cow","value":"pub fn as_cow(&Self) -> Option<std::borrow::Cow<, str>>","parent":null,"children":[],"decl_id":null,"docs":" Get a borrowed string representation of the domain. For `Empty` and `NotPresent` variants,\n `None` shall be returned;\n","sig":null,"attributes":[{"value":"/ Get a borrowed string representation of the domain. For `Empty` and `NotPresent` variants,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":36010,"byte_end":36104,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ `None` shall be returned;","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":36109,"byte_end":36138,"line_start":114,"line_end":114,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":538},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47917,"byte_end":47922,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"AtUtc","qualname":"::cookie_expiration::CookieExpiration::AtUtc","value":"CookieExpiration::AtUtc(OffsetDateTime)","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" `Cookie` expires at the given UTC time, as set from either the Max-Age\n or Expires attribute of a Set-Cookie header\n","sig":null,"attributes":[{"value":"/ `Cookie` expires at the given UTC time, as set from either the Max-Age","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47744,"byte_end":47818,"line_start":9,"line_end":9,"column_start":5,"column_end":79}},{"value":"/ or Expires attribute of a Set-Cookie header","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47823,"byte_end":47870,"line_start":10,"line_end":10,"column_start":5,"column_end":52}},{"value":"serde(with = \"crate::rfc3339_fmt\")","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47875,"byte_end":47912,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":536},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48054,"byte_end":48064,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"SessionEnd","qualname":"::cookie_expiration::CookieExpiration::SessionEnd","value":"CookieExpiration::SessionEnd","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" `Cookie` expires at the end of the current `Session`; this means the cookie\n is not persistent\n","sig":null,"attributes":[{"value":"/ `Cookie` expires at the end of the current `Session`; this means the cookie","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47944,"byte_end":48023,"line_start":13,"line_end":13,"column_start":5,"column_end":84}},{"value":"/ is not persistent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48028,"byte_end":48049,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":535},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47721,"byte_end":47737,"line_start":8,"line_end":8,"column_start":10,"column_end":26},"name":"CookieExpiration","qualname":"::cookie_expiration::CookieExpiration","value":"pub enum CookieExpiration {\n\n    /// `Cookie` expires at the given UTC time, as set from either the Max-Age\n    /// or Expires attribute of a Set-Cookie header\n    #[serde(with = \"crate::rfc3339_fmt\")]\n    AtUtc(OffsetDateTime),\n\n    /// `Cookie` expires at the end of the current `Session`; this means the cookie\n    /// is not persistent\n    SessionEnd,\n}","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":536}],"decl_id":null,"docs":" When a given `Cookie` expires\n","sig":null,"attributes":[{"value":"/ When a given `Cookie` expires","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":47626,"byte_end":47659,"line_start":6,"line_end":6,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48982,"byte_end":48992,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"is_expired","qualname":"<CookieExpiration>::is_expired","value":"pub fn is_expired(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the `Cookie` is expired as of *now*.\n","sig":null,"attributes":[{"value":"/ Indicates if the `Cookie` is expired as of *now*.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48917,"byte_end":48970,"line_start":36,"line_end":36,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":49144,"byte_end":49154,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"expires_by","qualname":"<CookieExpiration>::expires_by","value":"pub fn expires_by(&Self, &time::OffsetDateTime) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the `Cookie` expires as of `utc_tm`.\n","sig":null,"attributes":[{"value":"/ Indicates if the `Cookie` expires as of `utc_tm`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":49079,"byte_end":49132,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52628,"byte_end":52638,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"CookiePath","qualname":"::cookie_path::CookiePath","value":"","parent":null,"children":[],"decl_id":null,"docs":" The path of a `Cookie`\n","sig":null,"attributes":[{"value":"/ The path of a `Cookie`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52504,"byte_end":52530,"line_start":12,"line_end":12,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52840,"byte_end":52847,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"matches","qualname":"<CookiePath>::matches","value":"pub fn matches(&Self, &Url) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if `request_url` path-matches this `CookiePath` per\n [IETF RFC6265 Section 5.1.4](http://tools.ietf.org/html/rfc6265#section-5.1.4)\n","sig":null,"attributes":[{"value":"/ Determine if `request_url` path-matches this `CookiePath` per","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52676,"byte_end":52741,"line_start":16,"line_end":16,"column_start":5,"column_end":70}},{"value":"/ [IETF RFC6265 Section 5.1.4](http://tools.ietf.org/html/rfc6265#section-5.1.4)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52746,"byte_end":52828,"line_start":17,"line_end":17,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":53552,"byte_end":53569,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"is_from_path_attr","qualname":"<CookiePath>::is_from_path_attr","value":"pub fn is_from_path_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `CookiePath` was set from a Path attribute; this allows us to\n distinguish from the case where Path was explicitly set to \"/\"\n","sig":null,"attributes":[{"value":"/ Returns true if this `CookiePath` was set from a Path attribute; this allows us to","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":53383,"byte_end":53469,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ distinguish from the case where Path was explicitly set to \"/\"","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":53474,"byte_end":53540,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":54804,"byte_end":54816,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"default_path","qualname":"<CookiePath>::default_path","value":"pub fn default_path(&Url) -> CookiePath","parent":null,"children":[],"decl_id":null,"docs":" Determine the default-path of `request_url` per\n [IETF RFC6265 Section 5.1.4](http://tools.ietf.org/html/rfc6265#section-5.1.4)\n","sig":null,"attributes":[{"value":"/ Determine the default-path of `request_url` per","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":54654,"byte_end":54705,"line_start":57,"line_end":57,"column_start":5,"column_end":56}},{"value":"/ [IETF RFC6265 Section 5.1.4](http://tools.ietf.org/html/rfc6265#section-5.1.4)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":54710,"byte_end":54792,"line_start":58,"line_end":58,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":55509,"byte_end":55512,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<CookiePath>::new","value":"pub fn new(&str, &Url) -> CookiePath","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse `path` as a `CookiePath`; if unsuccessful, the default-path of\n `request_url` will be returned as the `CookiePath`.\n","sig":null,"attributes":[{"value":"/ Attempt to parse `path` as a `CookiePath`; if unsuccessful, the default-path of","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":55354,"byte_end":55437,"line_start":73,"line_end":73,"column_start":5,"column_end":88}},{"value":"/ `request_url` will be returned as the `CookiePath`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":55442,"byte_end":55497,"line_start":74,"line_end":74,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":55833,"byte_end":55838,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"parse","qualname":"<CookiePath>::parse","value":"pub fn parse(&str) -> Option<CookiePath>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse `path` as a `CookiePath`. If `path` does not have a leading \"/\",\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Attempt to parse `path` as a `CookiePath`. If `path` does not have a leading \"/\",","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":55708,"byte_end":55793,"line_start":82,"line_end":82,"column_start":5,"column_end":90}},{"value":"/ `None` is returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":55798,"byte_end":55821,"line_start":83,"line_end":83,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61709,"byte_end":61717,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Inserted","qualname":"::cookie_store::StoreAction::Inserted","value":"StoreAction::Inserted","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" The `Cookie` was successfully added to the store\n","sig":null,"attributes":[{"value":"/ The `Cookie` was successfully added to the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61652,"byte_end":61704,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":677},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61797,"byte_end":61812,"line_start":37,"line_end":37,"column_start":5,"column_end":20},"name":"ExpiredExisting","qualname":"::cookie_store::StoreAction::ExpiredExisting","value":"StoreAction::ExpiredExisting","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" The `Cookie` successfully expired a `Cookie` already in the store\n","sig":null,"attributes":[{"value":"/ The `Cookie` successfully expired a `Cookie` already in the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61723,"byte_end":61792,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61891,"byte_end":61906,"line_start":39,"line_end":39,"column_start":5,"column_end":20},"name":"UpdatedExisting","qualname":"::cookie_store::StoreAction::UpdatedExisting","value":"StoreAction::UpdatedExisting","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" The `Cookie` was added to the store, replacing an existing entry\n","sig":null,"attributes":[{"value":"/ The `Cookie` was added to the store, replacing an existing entry","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61818,"byte_end":61886,"line_start":38,"line_end":38,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":674},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":61634,"byte_end":61645,"line_start":33,"line_end":33,"column_start":10,"column_end":21},"name":"StoreAction","qualname":"::cookie_store::StoreAction","value":"pub enum StoreAction {\n\n    /// The `Cookie` was successfully added to the store\n    Inserted,\n\n    /// The `Cookie` successfully expired a `Cookie` already in the store\n    ExpiredExisting,\n\n    /// The `Cookie` was added to the store, replacing an existing entry\n    UpdatedExisting,\n}","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62057,"byte_end":62068,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"CookieStore","qualname":"::cookie_store::CookieStore","value":"CookieStore {  }","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62439,"byte_end":62458,"line_start":54,"line_end":54,"column_start":12,"column_end":31},"name":"get_request_cookies","qualname":"<CookieStore>::get_request_cookies","value":"pub fn get_request_cookies(&Self, &Url) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` of the cookies for `url` in the store\n","sig":null,"attributes":[{"value":"/ Return an `Iterator` of the cookies for `url` in the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62365,"byte_end":62427,"line_start":53,"line_end":53,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62647,"byte_end":62669,"line_start":59,"line_end":59,"column_start":12,"column_end":34},"name":"store_response_cookies","qualname":"<CookieStore>::store_response_cookies","value":"pub fn store_response_cookies<I: Iterator<Item =\n                              RawCookie>>(&mut Self, I, &Url)","parent":null,"children":[],"decl_id":null,"docs":" Store the `cookies` received from `url`\n","sig":null,"attributes":[{"value":"/ Store the `cookies` received from `url`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62592,"byte_end":62635,"line_start":58,"line_end":58,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63185,"byte_end":63201,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"with_suffix_list","qualname":"<CookieStore>::with_suffix_list","value":"pub fn with_suffix_list(Self, publicsuffix::List) -> CookieStore","parent":null,"children":[],"decl_id":null,"docs":" Specify a `publicsuffix::List` for the `CookieStore` to allow [public suffix\n matching](https://tools.ietf.org/html/rfc6265#section-5.3)\n","sig":null,"attributes":[{"value":"/ Specify a `publicsuffix::List` for the `CookieStore` to allow [public suffix","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63026,"byte_end":63106,"line_start":72,"line_end":72,"column_start":5,"column_end":85}},{"value":"/ matching](https://tools.ietf.org/html/rfc6265#section-5.3)","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63111,"byte_end":63173,"line_start":73,"line_end":73,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63524,"byte_end":63532,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"contains","qualname":"<CookieStore>::contains","value":"pub fn contains(&Self, &str, &str, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `CookieStore` contains an __unexpired__ `Cookie` corresponding to the\n specified `domain`, `path`, and `name`.\n","sig":null,"attributes":[{"value":"/ Returns true if the `CookieStore` contains an __unexpired__ `Cookie` corresponding to the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63371,"byte_end":63464,"line_start":81,"line_end":81,"column_start":5,"column_end":98}},{"value":"/ specified `domain`, `path`, and `name`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63469,"byte_end":63512,"line_start":82,"line_end":82,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63808,"byte_end":63820,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"contains_any","qualname":"<CookieStore>::contains_any","value":"pub fn contains_any(&Self, &str, &str, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `CookieStore` contains any (even an __expired__) `Cookie` corresponding\n to the specified `domain`, `path`, and `name`.\n","sig":null,"attributes":[{"value":"/ Returns true if the `CookieStore` contains any (even an __expired__) `Cookie` corresponding","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63646,"byte_end":63741,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ to the specified `domain`, `path`, and `name`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63746,"byte_end":63796,"line_start":88,"line_end":88,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":64072,"byte_end":64075,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"get","qualname":"<CookieStore>::get","value":"pub fn get(&Self, &str, &str, &str) -> Option<&Cookie>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the __unexpired__ `Cookie` corresponding to the specified `domain`,\n `path`, and `name`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the __unexpired__ `Cookie` corresponding to the specified `domain`,","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":63938,"byte_end":64032,"line_start":93,"line_end":93,"column_start":5,"column_end":99}},{"value":"/ `path`, and `name`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":64037,"byte_end":64060,"line_start":94,"line_end":94,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":64932,"byte_end":64939,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"get_any","qualname":"<CookieStore>::get_any","value":"pub fn get_any(&Self, &str, &str, &str) -> Option<&Cookie>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the (possibly __expired__) `Cookie` corresponding to the specified\n `domain`, `path`, and `name`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the (possibly __expired__) `Cookie` corresponding to the specified","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":64789,"byte_end":64882,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ `domain`, `path`, and `name`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":64887,"byte_end":64920,"line_start":118,"line_end":118,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":65808,"byte_end":65814,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"remove","qualname":"<CookieStore>::remove","value":"pub fn remove(&mut Self, &str, &str, &str) -> Option<Cookie>","parent":null,"children":[],"decl_id":null,"docs":" Removes a `Cookie` from the store, returning the `Cookie` if it was in the store\n","sig":null,"attributes":[{"value":"/ Removes a `Cookie` from the store, returning the `Cookie` if it was in the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":65712,"byte_end":65796,"line_start":142,"line_end":142,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":67592,"byte_end":67599,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"matches","qualname":"<CookieStore>::matches","value":"pub fn matches(&Self, &Url) -> Vec<&Cookie>","parent":null,"children":[],"decl_id":null,"docs":" Returns a collection of references to __unexpired__ cookies that path- and domain-match\n `request_url`, as well as having HttpOnly and Secure attributes compatible with the\n `request_url`.\n","sig":null,"attributes":[{"value":"/ Returns a collection of references to __unexpired__ cookies that path- and domain-match","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":67374,"byte_end":67465,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ `request_url`, as well as having HttpOnly and Secure attributes compatible with the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":67470,"byte_end":67557,"line_start":189,"line_end":189,"column_start":5,"column_end":92}},{"value":"/ `request_url`.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":67562,"byte_end":67580,"line_start":190,"line_end":190,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":68967,"byte_end":68972,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"parse","qualname":"<CookieStore>::parse","value":"pub fn parse(&mut Self, &str, &Url) -> InsertResult","parent":null,"children":[],"decl_id":null,"docs":" Parses a new `Cookie` from `cookie_str` and inserts it into the store.\n","sig":null,"attributes":[{"value":"/ Parses a new `Cookie` from `cookie_str` and inserts it into the store.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":68881,"byte_end":68955,"line_start":221,"line_end":221,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69313,"byte_end":69323,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"insert_raw","qualname":"<CookieStore>::insert_raw","value":"pub fn insert_raw(&mut Self, &RawCookie, &Url) -> InsertResult","parent":null,"children":[],"decl_id":null,"docs":" Converts a `cookie::Cookie` (from the `cookie` crate) into a `cookie_store::Cookie` and\n inserts it into the store.\n","sig":null,"attributes":[{"value":"/ Converts a `cookie::Cookie` (from the `cookie` crate) into a `cookie_store::Cookie` and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69175,"byte_end":69266,"line_start":227,"line_end":227,"column_start":5,"column_end":96}},{"value":"/ inserts it into the store.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69271,"byte_end":69301,"line_start":228,"line_end":228,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":70043,"byte_end":70049,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"insert","qualname":"<CookieStore>::insert","value":"pub fn insert(&mut Self, Cookie, &Url) -> InsertResult","parent":null,"children":[],"decl_id":null,"docs":" Inserts `cookie`, received from `request_url`, into the store, following the rules of the\n [IETF RFC6265 Storage Model](http://tools.ietf.org/html/rfc6265#section-5.3). If the\n `Cookie` is __unexpired__ and is successfully inserted, returns\n `Ok(StoreAction::Inserted)`. If the `Cookie` is __expired__ *and* matches an existing\n `Cookie` in the store, the existing `Cookie` wil be `expired()` and\n `Ok(StoreAction::ExpiredExisting)` will be returned.\n","sig":null,"attributes":[{"value":"/ Inserts `cookie`, received from `request_url`, into the store, following the rules of the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69542,"byte_end":69635,"line_start":234,"line_end":234,"column_start":5,"column_end":98}},{"value":"/ [IETF RFC6265 Storage Model](http://tools.ietf.org/html/rfc6265#section-5.3). If the","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69640,"byte_end":69728,"line_start":235,"line_end":235,"column_start":5,"column_end":93}},{"value":"/ `Cookie` is __unexpired__ and is successfully inserted, returns","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69733,"byte_end":69800,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/ `Ok(StoreAction::Inserted)`. If the `Cookie` is __expired__ *and* matches an existing","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69805,"byte_end":69894,"line_start":237,"line_end":237,"column_start":5,"column_end":94}},{"value":"/ `Cookie` in the store, the existing `Cookie` wil be `expired()` and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69899,"byte_end":69970,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ `Ok(StoreAction::ExpiredExisting)` will be returned.","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":69975,"byte_end":70031,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":73647,"byte_end":73652,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"clear","qualname":"<CookieStore>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the contents of the store\n","sig":null,"attributes":[{"value":"/ Clear the contents of the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":73600,"byte_end":73635,"line_start":315,"line_end":315,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":73785,"byte_end":73799,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"iter_unexpired","qualname":"<CookieStore>::iter_unexpired","value":"pub fn iter_unexpired<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all the __unexpired__ cookies in the store\n","sig":null,"attributes":[{"value":"/ An iterator visiting all the __unexpired__ cookies in the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":73706,"byte_end":73773,"line_start":320,"line_end":320,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":74130,"byte_end":74138,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"iter_any","qualname":"<CookieStore>::iter_any","value":"pub fn iter_any<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all (including __expired__) cookies in the store\n","sig":null,"attributes":[{"value":"/ An iterator visiting all (including __expired__) cookies in the store","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":74045,"byte_end":74118,"line_start":329,"line_end":329,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":74485,"byte_end":74489,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"save","qualname":"<CookieStore>::save","value":"pub fn save<W, E, F>(&Self, &mut W, F) -> StoreResult<()> where W: Write,\nF: Fn(&Cookie) -> Result<String, E>, crate::Error: From<E>","parent":null,"children":[],"decl_id":null,"docs":" Serialize any __unexpired__ and __persistent__ cookies in the store with `cookie_to_string`\n and write them to `writer`\n","sig":null,"attributes":[{"value":"/ Serialize any __unexpired__ and __persistent__ cookies in the store with `cookie_to_string`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":74343,"byte_end":74438,"line_start":337,"line_end":337,"column_start":5,"column_end":100}},{"value":"/ and write them to `writer`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":74443,"byte_end":74473,"line_start":338,"line_end":338,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":75103,"byte_end":75112,"line_start":359,"line_end":359,"column_start":12,"column_end":21},"name":"save_json","qualname":"<CookieStore>::save_json","value":"pub fn save_json<W: Write>(&Self, &mut W) -> StoreResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Serialize any __unexpired__ and __persistent__ cookies in the store to JSON format and\n write them to `writer`\n","sig":null,"attributes":[{"value":"/ Serialize any __unexpired__ and __persistent__ cookies in the store to JSON format and","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":74970,"byte_end":75060,"line_start":357,"line_end":357,"column_start":5,"column_end":95}},{"value":"/ write them to `writer`","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":75065,"byte_end":75091,"line_start":358,"line_end":358,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":75351,"byte_end":75355,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"load","qualname":"<CookieStore>::load","value":"pub fn load<R, E, F>(R, F) -> StoreResult<CookieStore> where R: BufRead,\nF: Fn(&str) -> Result<Cookie, E>, crate::Error: From<E>","parent":null,"children":[],"decl_id":null,"docs":" Load cookies from `reader`, deserializing with `cookie_from_str`, skipping any __expired__\n cookies\n","sig":null,"attributes":[{"value":"/ Load cookies from `reader`, deserializing with `cookie_from_str`, skipping any __expired__","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":75229,"byte_end":75323,"line_start":363,"line_end":363,"column_start":5,"column_end":99}},{"value":"/ cookies","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":75328,"byte_end":75339,"line_start":364,"line_end":364,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":76041,"byte_end":76050,"line_start":384,"line_end":384,"column_start":12,"column_end":21},"name":"load_json","qualname":"<CookieStore>::load_json","value":"pub fn load_json<R: BufRead>(R) -> StoreResult<CookieStore>","parent":null,"children":[],"decl_id":null,"docs":" Load JSON-formatted cookies from `reader`, skipping any __expired__ cookies\n","sig":null,"attributes":[{"value":"/ Load JSON-formatted cookies from `reader`, skipping any __expired__ cookies","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":75950,"byte_end":76029,"line_start":383,"line_end":383,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":274,"byte_end":284,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"IdnaErrors","qualname":"::IdnaErrors","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":306},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":629,"byte_end":634,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Box<std::error::Error + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":307},"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":688,"byte_end":694,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2936,"byte_end":2941,"line_start":36,"line_end":36,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2968,"byte_end":2973,"line_start":38,"line_end":38,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":3901,"byte_end":3906,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":5916,"byte_end":5922,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":10348,"byte_end":10354,"line_start":240,"line_end":240,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":10497,"byte_end":10506,"line_start":247,"line_end":247,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33234,"byte_end":33246,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":36660,"byte_end":36672,"line_start":127,"line_end":127,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":37755,"byte_end":37767,"line_start":151,"line_end":151,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":38422,"byte_end":38428,"line_start":171,"line_end":171,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48200,"byte_end":48216,"line_start":19,"line_end":19,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48894,"byte_end":48910,"line_start":35,"line_end":35,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":49518,"byte_end":49534,"line_start":53,"line_end":53,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":49912,"byte_end":49928,"line_start":64,"line_end":64,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":50085,"byte_end":50101,"line_start":70,"line_end":70,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52659,"byte_end":52669,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56038,"byte_end":56048,"line_start":93,"line_end":93,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56122,"byte_end":56132,"line_start":99,"line_end":99,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56256,"byte_end":56262,"line_start":106,"line_end":106,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56362,"byte_end":56368,"line_start":112,"line_end":112,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62347,"byte_end":62358,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":218},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":240},{"krate":0,"index":245},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":258},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":76886,"byte_end":76897,"line_start":411,"line_end":411,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":77156,"byte_end":77174,"line_start":422,"line_end":422,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":77576,"byte_end":77587,"line_start":437,"line_end":437,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/utils.rs","byte_start":117560,"byte_end":117563,"line_start":9,"line_end":9,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":328,"byte_end":338,"line_start":16,"line_end":16,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":494,"byte_end":504,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":537,"byte_end":547,"line_start":24,"line_end":24,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2936,"byte_end":2941,"line_start":36,"line_end":36,"column_start":28,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":320},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":2968,"byte_end":2973,"line_start":38,"line_end":38,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":3901,"byte_end":3906,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":5916,"byte_end":5922,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":10348,"byte_end":10354,"line_start":240,"line_end":240,"column_start":20,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":345},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie.rs","byte_start":10497,"byte_end":10506,"line_start":247,"line_end":247,"column_start":31,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":24,"index":339},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":33234,"byte_end":33246,"line_start":51,"line_end":51,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":36660,"byte_end":36672,"line_start":127,"line_end":127,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":37755,"byte_end":37767,"line_start":151,"line_end":151,"column_start":45,"column_end":57},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_domain.rs","byte_start":38422,"byte_end":38428,"line_start":171,"line_end":171,"column_start":37,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":5316},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48200,"byte_end":48216,"line_start":19,"line_end":19,"column_start":30,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":48894,"byte_end":48910,"line_start":35,"line_end":35,"column_start":6,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":49518,"byte_end":49534,"line_start":53,"line_end":53,"column_start":20,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":49912,"byte_end":49928,"line_start":64,"line_end":64,"column_start":37,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_expiration.rs","byte_start":50085,"byte_end":50101,"line_start":70,"line_end":70,"column_start":31,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":52659,"byte_end":52669,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56038,"byte_end":56048,"line_start":93,"line_end":93,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56122,"byte_end":56132,"line_start":99,"line_end":99,"column_start":16,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56256,"byte_end":56262,"line_start":106,"line_end":106,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":5316},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_path.rs","byte_start":56362,"byte_end":56368,"line_start":112,"line_end":112,"column_start":27,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":5316},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":62347,"byte_end":62358,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":76886,"byte_end":76897,"line_start":411,"line_end":411,"column_start":20,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":691},"to":{"krate":32,"index":1768}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":77156,"byte_end":77174,"line_start":422,"line_end":422,"column_start":28,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":268},"to":{"krate":32,"index":1361}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/cookie_store.rs","byte_start":77576,"byte_end":77587,"line_start":437,"line_end":437,"column_start":32,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":691},"to":{"krate":32,"index":1277}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/utils.rs","byte_start":117560,"byte_end":117563,"line_start":9,"line_end":9,"column_start":18,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":34,"index":722},"to":{"krate":0,"index":288}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":328,"byte_end":338,"line_start":16,"line_end":16,"column_start":28,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":6568}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":494,"byte_end":504,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/zerbs/.cargo/registry/src/github.com-1ecc6299db9ec823/cookie_store-0.12.0/src/lib.rs","byte_start":537,"byte_end":547,"line_start":24,"line_end":24,"column_start":29,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":1956}}]}